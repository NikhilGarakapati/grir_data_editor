{"ast":null,"code":"import { Browser, isBlazor, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\n/**\n * Content module is used to render grid content\n */\n\nvar VirtualRowModelGenerator =\n/** @class */\nfunction () {\n  function VirtualRowModelGenerator(parent) {\n    this.cOffsets = {};\n    this.cache = {};\n    this.rowCache = {};\n    this.data = {};\n    this.groups = {};\n    this.parent = parent;\n    this.model = this.parent.pageSettings;\n    this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  }\n\n  VirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n    var info = notifyArgs.virtualInfo = notifyArgs.virtualInfo || this.getData();\n    var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n    var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n    var result = [];\n    var center = ~~(this.model.pageSize / 2);\n    var indexes = this.getBlockIndexes(page);\n    var loadedBlocks = [];\n    this.checkAndResetCache(notifyArgs.requestType);\n\n    if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n      return result = this.parent.vcRows;\n    }\n\n    if (this.parent.enableColumnVirtualization) {\n      for (var i = 0; i < info.blockIndexes.length; i++) {\n        if (this.isBlockAvailable(info.blockIndexes[i])) {\n          this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n        }\n      }\n    }\n\n    if (isBlazor() && this.parent.isServerRendered) {\n      var virtualStartIdx = 'virtualStartIndex';\n      var startIndex = 'startIndex';\n      var endIndex = 'endIndex';\n\n      if (!notifyArgs[virtualStartIdx] && Object.keys(this.rowCache).length === 0) {\n        for (var i = 0; i < data.length; i++) {\n          var args = [];\n          args.push(data[i]);\n          this.rowCache[i] = this.rowModelGenerator.generateRows(args, {\n            startIndex: i\n          })[0];\n        }\n\n        var j = 0;\n\n        for (var i = 0; i < this.parent.pageSettings.pageSize; i++) {\n          result[j] = this.rowCache[i];\n          j++;\n        }\n      } else if (notifyArgs[virtualStartIdx]) {\n        var virtualStartIndex = notifyArgs[startIndex];\n        var cacheindex = [];\n\n        for (var i = 0; i < Object.keys(this.rowCache).length; i++) {\n          cacheindex.push(Number(Object.keys(this.rowCache)[i]));\n        }\n\n        for (var i = 0; i < data.length; i++) {\n          var args = [];\n          var check = cacheindex.indexOf(virtualStartIndex);\n          args.push(data[i]);\n\n          if (check === -1) {\n            this.rowCache[virtualStartIndex] = this.rowModelGenerator.generateRows(args, {\n              startIndex: virtualStartIndex\n            })[0];\n          }\n\n          virtualStartIndex++;\n        }\n      }\n\n      if (!isNullOrUndefined(notifyArgs[virtualStartIdx])) {\n        var j = 0;\n\n        for (var i = notifyArgs[startIndex]; i < notifyArgs[endIndex]; i++) {\n          result[j] = this.rowCache[i];\n          j++;\n        }\n      }\n    } else {\n      var values = info.blockIndexes;\n\n      for (var i = 0; i < values.length; i++) {\n        if (!this.isBlockAvailable(values[i])) {\n          var rows = this.rowModelGenerator.generateRows(data, {\n            virtualInfo: info,\n            startIndex: this.getStartIndex(values[i], data)\n          });\n\n          if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n            this.parent.vRows = rows;\n            this.parent.vcRows = rows;\n          }\n\n          var median = void 0;\n\n          if (isGroupAdaptive(this.parent)) {\n            median = this.model.pageSize / 2;\n\n            if (!this.isBlockAvailable(indexes[0])) {\n              this.cache[indexes[0]] = rows.slice(0, median);\n            }\n\n            if (!this.isBlockAvailable(indexes[1])) {\n              this.cache[indexes[1]] = rows.slice(median, this.model.pageSize);\n            }\n          } else {\n            median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n\n            if (!this.isBlockAvailable(indexes[0])) {\n              this.cache[indexes[0]] = rows.slice(0, median);\n            }\n\n            if (!this.isBlockAvailable(indexes[1])) {\n              this.cache[indexes[1]] = rows.slice(median);\n            }\n          }\n        }\n\n        if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n          this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n        }\n\n        result.push.apply(result, this.cache[values[i]]);\n\n        if (this.isBlockAvailable(values[i])) {\n          loadedBlocks.push(values[i]);\n        }\n      }\n\n      info.blockIndexes = loadedBlocks;\n    }\n\n    if (!isBlazor() || isBlazor() && !this.parent.isServerRendered) {\n      var grouping = 'records';\n\n      if (this.parent.allowGrouping) {\n        this.parent.currentViewData[grouping] = result.map(function (m) {\n          return m.data;\n        });\n      } else {\n        this.parent.currentViewData = result.map(function (m) {\n          return m.data;\n        });\n      }\n    }\n\n    return result;\n  };\n\n  VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n    return [page + (page - 1), page * 2];\n  };\n\n  VirtualRowModelGenerator.prototype.getPage = function (block) {\n    return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n  };\n\n  VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n    return value in this.cache;\n  };\n\n  VirtualRowModelGenerator.prototype.getData = function () {\n    return {\n      page: this.model.currentPage,\n      blockIndexes: this.getBlockIndexes(this.model.currentPage),\n      direction: 'down',\n      columnIndexes: this.parent.getColumnIndexesInView()\n    };\n  };\n\n  VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n    if (full === void 0) {\n      full = true;\n    }\n\n    var page = this.getPage(blk);\n    var even = blk % 2 === 0;\n    var index = (page - 1) * this.model.pageSize;\n    return full || !even ? index : index + ~~(this.model.pageSize / 2);\n  };\n\n  VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n    var _this = this;\n\n    if (content === void 0) {\n      content = this.parent.getHeaderContent().querySelector('.e-headercontent');\n    }\n\n    if (this.parent.getFrozenColumns()) {\n      content = content.querySelector('.e-movableheader');\n    }\n\n    var indexes = [];\n    var sLeft = content.scrollLeft | 0;\n    var keys = Object.keys(this.cOffsets);\n    var cWidth = content.getBoundingClientRect().width;\n    sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n    var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n    var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n    keys.some(function (offset, indx, input) {\n      var iOffset = Number(offset);\n      var offsetVal = _this.cOffsets[offset];\n      var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n\n      if (border) {\n        indexes.push(iOffset);\n      }\n\n      return left + calWidth < offsetVal;\n    });\n\n    if (isBlazor() && this.parent.isServerRendered) {\n      this.parent.contentModule.startColIndex = indexes[0];\n      this.parent.contentModule.endColIndex = indexes[indexes.length - 1];\n    }\n\n    this.addFrozenIndex(indexes);\n    return indexes;\n  };\n\n  VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n    if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n      for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n        indexes.push(indexes[indexes.length - 1] + 1);\n      }\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n    var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder', 'save', 'delete'];\n\n    if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n      actions.splice(actions.indexOf(action), 1);\n    }\n\n    var clear = actions.some(function (value) {\n      return action === value;\n    });\n\n    if (clear) {\n      this.cache = {};\n      this.data = {};\n      this.groups = {};\n    }\n\n    return clear;\n  };\n\n  VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n    var _this = this;\n\n    var col = 0;\n    this.cOffsets = {};\n    var gLen = this.parent.groupSettings.columns.length;\n    var cols = this.parent.columns;\n    var cLen = cols.length;\n\n    var isVisible = function (column) {\n      return column.visible && (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible);\n    };\n\n    var c = this.parent.groupSettings.columns;\n\n    for (var i = 0; i < c.length; i++) {\n      this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n    }\n\n    var blocks = Array.apply(null, Array(cLen)).map(function () {\n      return col++;\n    });\n\n    for (var j = 0; j < blocks.length; j++) {\n      blocks[j] = blocks[j] + gLen;\n      this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n    }\n  };\n\n  VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n    var currentFirst = current[0];\n    var rows = [];\n    var keys = Object.keys(this.cache);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (Number(keys[i]) < block) {\n        rows = rows.concat(this.cache[keys[i]]);\n      }\n    }\n\n    if (currentFirst && currentFirst.isDataRow || block % 2 === 0) {\n      return current;\n    }\n\n    return this.iterateGroup(current, rows);\n  };\n\n  VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n    var currentFirst = current[0];\n    var offset = 0;\n\n    if (currentFirst && currentFirst.isDataRow) {\n      return current;\n    }\n\n    var isPresent = current.some(function (row) {\n      return rows.some(function (oRow, index) {\n        var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field && oRow.data.key === row.data.key;\n\n        if (res) {\n          offset = index;\n        }\n\n        return res;\n      });\n    });\n\n    if (isPresent) {\n      current.shift();\n      current = this.iterateGroup(current, rows.slice(offset));\n    }\n\n    return current;\n  };\n\n  VirtualRowModelGenerator.prototype.getRows = function () {\n    var rows = [];\n    var isBlazorServerRendered = isBlazor() && this.parent.isServerRendered ? true : false;\n    var keys = isBlazorServerRendered ? Object.keys(this.rowCache) : Object.keys(this.cache);\n\n    for (var i = 0; i < keys.length; i++) {\n      rows = isBlazorServerRendered ? rows.concat(this.rowCache[keys[i]]) : rows.concat(this.cache[keys[i]]);\n    }\n\n    return rows;\n  };\n\n  return VirtualRowModelGenerator;\n}();\n\nexport { VirtualRowModelGenerator };","map":{"version":3,"sources":["/home/nikhil/Desktop/data_grid_editor-master/node_modules/@syncfusion/ej2-grids/src/grid/services/virtual-row-model-generator.js"],"names":["Browser","isBlazor","isNullOrUndefined","isGroupAdaptive","RowModelGenerator","GroupModelGenerator","VirtualRowModelGenerator","parent","cOffsets","cache","rowCache","data","groups","model","pageSettings","rowModelGenerator","allowGrouping","prototype","generateRows","notifyArgs","info","virtualInfo","getData","xAxis","sentinelInfo","axis","page","loadNext","loadSelf","nextInfo","result","center","pageSize","indexes","getBlockIndexes","loadedBlocks","checkAndResetCache","requestType","vcRows","length","enableColumnVirtualization","i","blockIndexes","isBlockAvailable","refreshRows","isServerRendered","virtualStartIdx","startIndex","endIndex","Object","keys","args","push","j","virtualStartIndex","cacheindex","Number","check","indexOf","values","rows","getStartIndex","vRows","median","slice","Math","max","groupSettings","columns","updateGroupRow","apply","grouping","currentViewData","map","m","getPage","block","value","currentPage","direction","columnIndexes","getColumnIndexesInView","blk","full","even","index","getColumnIndexes","content","_this","getHeaderContent","querySelector","getFrozenColumns","sLeft","scrollLeft","cWidth","getBoundingClientRect","width","min","calWidth","isDevice","left","some","offset","indx","input","iOffset","offsetVal","border","contentModule","startColIndex","endColIndex","addFrozenIndex","action","actions","frozenRows","splice","clear","refreshColOffsets","col","gLen","cols","cLen","isVisible","column","visible","showGroupedColumn","field","c","blocks","Array","parseInt","current","currentFirst","concat","isDataRow","iterateGroup","isPresent","row","oRow","res","undefined","key","shift","getRows","isBlazorServerRendered"],"mappings":"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","sourcesContent":["import { Browser, isBlazor, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { isGroupAdaptive } from '../base/util';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\n/**\n * Content module is used to render grid content\n */\nvar VirtualRowModelGenerator = /** @class */ (function () {\n    function VirtualRowModelGenerator(parent) {\n        this.cOffsets = {};\n        this.cache = {};\n        this.rowCache = {};\n        this.data = {};\n        this.groups = {};\n        this.parent = parent;\n        this.model = this.parent.pageSettings;\n        this.rowModelGenerator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    }\n    VirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        var info = notifyArgs.virtualInfo = notifyArgs.virtualInfo || this.getData();\n        var xAxis = info.sentinelInfo && info.sentinelInfo.axis === 'X';\n        var page = !xAxis && info.loadNext && !info.loadSelf ? info.nextInfo.page : info.page;\n        var result = [];\n        var center = ~~(this.model.pageSize / 2);\n        var indexes = this.getBlockIndexes(page);\n        var loadedBlocks = [];\n        this.checkAndResetCache(notifyArgs.requestType);\n        if (isGroupAdaptive(this.parent) && this.parent.vcRows.length) {\n            return result = this.parent.vcRows;\n        }\n        if (this.parent.enableColumnVirtualization) {\n            for (var i = 0; i < info.blockIndexes.length; i++) {\n                if (this.isBlockAvailable(info.blockIndexes[i])) {\n                    this.cache[info.blockIndexes[i]] = this.rowModelGenerator.refreshRows(this.cache[info.blockIndexes[i]]);\n                }\n            }\n        }\n        if (isBlazor() && this.parent.isServerRendered) {\n            var virtualStartIdx = 'virtualStartIndex';\n            var startIndex = 'startIndex';\n            var endIndex = 'endIndex';\n            if (!notifyArgs[virtualStartIdx] && Object.keys(this.rowCache).length === 0) {\n                for (var i = 0; i < data.length; i++) {\n                    var args = [];\n                    args.push(data[i]);\n                    this.rowCache[i] = this.rowModelGenerator.generateRows(args, { startIndex: i })[0];\n                }\n                var j = 0;\n                for (var i = 0; i < this.parent.pageSettings.pageSize; i++) {\n                    result[j] = this.rowCache[i];\n                    j++;\n                }\n            }\n            else if (notifyArgs[virtualStartIdx]) {\n                var virtualStartIndex = notifyArgs[startIndex];\n                var cacheindex = [];\n                for (var i = 0; i < Object.keys(this.rowCache).length; i++) {\n                    cacheindex.push(Number(Object.keys(this.rowCache)[i]));\n                }\n                for (var i = 0; i < data.length; i++) {\n                    var args = [];\n                    var check = cacheindex.indexOf(virtualStartIndex);\n                    args.push(data[i]);\n                    if (check === -1) {\n                        this.rowCache[virtualStartIndex] = this.rowModelGenerator.generateRows(args, { startIndex: virtualStartIndex })[0];\n                    }\n                    virtualStartIndex++;\n                }\n            }\n            if (!isNullOrUndefined(notifyArgs[virtualStartIdx])) {\n                var j = 0;\n                for (var i = notifyArgs[startIndex]; i < notifyArgs[endIndex]; i++) {\n                    result[j] = this.rowCache[i];\n                    j++;\n                }\n            }\n        }\n        else {\n            var values = info.blockIndexes;\n            for (var i = 0; i < values.length; i++) {\n                if (!this.isBlockAvailable(values[i])) {\n                    var rows = this.rowModelGenerator.generateRows(data, {\n                        virtualInfo: info, startIndex: this.getStartIndex(values[i], data)\n                    });\n                    if (isGroupAdaptive(this.parent) && !this.parent.vcRows.length) {\n                        this.parent.vRows = rows;\n                        this.parent.vcRows = rows;\n                    }\n                    var median = void 0;\n                    if (isGroupAdaptive(this.parent)) {\n                        median = this.model.pageSize / 2;\n                        if (!this.isBlockAvailable(indexes[0])) {\n                            this.cache[indexes[0]] = rows.slice(0, median);\n                        }\n                        if (!this.isBlockAvailable(indexes[1])) {\n                            this.cache[indexes[1]] = rows.slice(median, this.model.pageSize);\n                        }\n                    }\n                    else {\n                        median = ~~Math.max(rows.length, this.model.pageSize) / 2;\n                        if (!this.isBlockAvailable(indexes[0])) {\n                            this.cache[indexes[0]] = rows.slice(0, median);\n                        }\n                        if (!this.isBlockAvailable(indexes[1])) {\n                            this.cache[indexes[1]] = rows.slice(median);\n                        }\n                    }\n                }\n                if (this.parent.groupSettings.columns.length && !xAxis && this.cache[values[i]]) {\n                    this.cache[values[i]] = this.updateGroupRow(this.cache[values[i]], values[i]);\n                }\n                result.push.apply(result, this.cache[values[i]]);\n                if (this.isBlockAvailable(values[i])) {\n                    loadedBlocks.push(values[i]);\n                }\n            }\n            info.blockIndexes = loadedBlocks;\n        }\n        if (!isBlazor() || (isBlazor() && !this.parent.isServerRendered)) {\n            var grouping = 'records';\n            if (this.parent.allowGrouping) {\n                this.parent.currentViewData[grouping] = result.map(function (m) { return m.data; });\n            }\n            else {\n                this.parent.currentViewData = result.map(function (m) { return m.data; });\n            }\n        }\n        return result;\n    };\n    VirtualRowModelGenerator.prototype.getBlockIndexes = function (page) {\n        return [page + (page - 1), page * 2];\n    };\n    VirtualRowModelGenerator.prototype.getPage = function (block) {\n        return block % 2 === 0 ? block / 2 : (block + 1) / 2;\n    };\n    VirtualRowModelGenerator.prototype.isBlockAvailable = function (value) {\n        return value in this.cache;\n    };\n    VirtualRowModelGenerator.prototype.getData = function () {\n        return {\n            page: this.model.currentPage,\n            blockIndexes: this.getBlockIndexes(this.model.currentPage),\n            direction: 'down',\n            columnIndexes: this.parent.getColumnIndexesInView()\n        };\n    };\n    VirtualRowModelGenerator.prototype.getStartIndex = function (blk, data, full) {\n        if (full === void 0) { full = true; }\n        var page = this.getPage(blk);\n        var even = blk % 2 === 0;\n        var index = (page - 1) * this.model.pageSize;\n        return full || !even ? index : index + ~~(this.model.pageSize / 2);\n    };\n    VirtualRowModelGenerator.prototype.getColumnIndexes = function (content) {\n        var _this = this;\n        if (content === void 0) { content = this.parent.getHeaderContent().querySelector('.e-headercontent'); }\n        if (this.parent.getFrozenColumns()) {\n            content = content.querySelector('.e-movableheader');\n        }\n        var indexes = [];\n        var sLeft = content.scrollLeft | 0;\n        var keys = Object.keys(this.cOffsets);\n        var cWidth = content.getBoundingClientRect().width;\n        sLeft = Math.min(this.cOffsets[keys.length - 1] - cWidth, sLeft);\n        var calWidth = Browser.isDevice ? 2 * cWidth : cWidth / 2;\n        var left = sLeft + cWidth + (sLeft === 0 ? calWidth : 0);\n        keys.some(function (offset, indx, input) {\n            var iOffset = Number(offset);\n            var offsetVal = _this.cOffsets[offset];\n            var border = sLeft - calWidth <= offsetVal && left + calWidth >= offsetVal;\n            if (border) {\n                indexes.push(iOffset);\n            }\n            return left + calWidth < offsetVal;\n        });\n        if (isBlazor() && this.parent.isServerRendered) {\n            this.parent.contentModule.startColIndex = indexes[0];\n            this.parent.contentModule.endColIndex = indexes[indexes.length - 1];\n        }\n        this.addFrozenIndex(indexes);\n        return indexes;\n    };\n    VirtualRowModelGenerator.prototype.addFrozenIndex = function (indexes) {\n        if (this.parent.getFrozenColumns() && this.parent.enableColumnVirtualization && indexes[0] === 0) {\n            for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n                indexes.push(indexes[indexes.length - 1] + 1);\n            }\n        }\n    };\n    VirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var actions = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder',\n            'save', 'delete'];\n        if (this.parent.getFrozenColumns() && this.parent.frozenRows && this.parent.enableColumnVirtualization && action === 'reorder') {\n            actions.splice(actions.indexOf(action), 1);\n        }\n        var clear = actions.some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    VirtualRowModelGenerator.prototype.refreshColOffsets = function () {\n        var _this = this;\n        var col = 0;\n        this.cOffsets = {};\n        var gLen = this.parent.groupSettings.columns.length;\n        var cols = this.parent.columns;\n        var cLen = cols.length;\n        var isVisible = function (column) { return column.visible &&\n            (!_this.parent.groupSettings.showGroupedColumn ? _this.parent.groupSettings.columns.indexOf(column.field) < 0 : column.visible); };\n        var c = this.parent.groupSettings.columns;\n        for (var i = 0; i < c.length; i++) {\n            this.cOffsets[i] = (this.cOffsets[i - 1] | 0) + 30;\n        }\n        var blocks = Array.apply(null, Array(cLen)).map(function () { return col++; });\n        for (var j = 0; j < blocks.length; j++) {\n            blocks[j] = blocks[j] + gLen;\n            this.cOffsets[blocks[j]] = (this.cOffsets[blocks[j] - 1] | 0) + (isVisible(cols[j]) ? parseInt(cols[j].width, 10) : 0);\n        }\n    };\n    VirtualRowModelGenerator.prototype.updateGroupRow = function (current, block) {\n        var currentFirst = current[0];\n        var rows = [];\n        var keys = Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            if (Number(keys[i]) < block) {\n                rows = rows.concat(this.cache[keys[i]]);\n            }\n        }\n        if ((currentFirst && currentFirst.isDataRow) || block % 2 === 0) {\n            return current;\n        }\n        return this.iterateGroup(current, rows);\n    };\n    VirtualRowModelGenerator.prototype.iterateGroup = function (current, rows) {\n        var currentFirst = current[0];\n        var offset = 0;\n        if (currentFirst && currentFirst.isDataRow) {\n            return current;\n        }\n        var isPresent = current.some(function (row) {\n            return rows.some(function (oRow, index) {\n                var res = oRow && oRow.data.field !== undefined && oRow.data.field === row.data.field &&\n                    oRow.data.key === row.data.key;\n                if (res) {\n                    offset = index;\n                }\n                return res;\n            });\n        });\n        if (isPresent) {\n            current.shift();\n            current = this.iterateGroup(current, rows.slice(offset));\n        }\n        return current;\n    };\n    VirtualRowModelGenerator.prototype.getRows = function () {\n        var rows = [];\n        var isBlazorServerRendered = isBlazor() && this.parent.isServerRendered ? true : false;\n        var keys = isBlazorServerRendered ? Object.keys(this.rowCache) : Object.keys(this.cache);\n        for (var i = 0; i < keys.length; i++) {\n            rows = isBlazorServerRendered ? rows.concat(this.rowCache[keys[i]]) : rows.concat(this.cache[keys[i]]);\n        }\n        return rows;\n    };\n    return VirtualRowModelGenerator;\n}());\nexport { VirtualRowModelGenerator };\n"]},"metadata":{},"sourceType":"module"}