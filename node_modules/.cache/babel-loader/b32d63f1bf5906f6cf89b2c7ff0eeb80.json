{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/data_grid_editor-master/src/App.tsx\";\nimport React from 'react'; //import axios from 'axios';\n\n//import data from './db.json';\n//import {DataManager, ODataAdaptor, Query} from '@syncfusion/ej2-data';\nimport { DialogFormTemplate } from './DialogFormTemplate';\nimport './App.css';\nimport DataGetter from './DataGetter'; // const data = axios.get('http://localhost:5000/repdata')\n// .then((response) => response.data)\n// .catch(err => {throw err});\n//  const getData = () => {\n//   var x= axios.get(`http://localhost:5000/repdata`)\n//     .then(json =>  json.data)\n//     .catch(error => {\n//       throw error;\n//     });\n//     console.log(x);\n//     return x;\n// };\n\nconst App = () => {\n  const editOptions = {\n    allowEditing: true,\n    allowAdding: true,\n    allowDeleting: true,\n    mode: 'Dialog',\n    template: dialogTemplate\n  };\n  const toolbarOptions = ['Add', 'Edit', 'Delete'];\n\n  function dialogTemplate(props) {\n    return /*#__PURE__*/React.createElement(DialogFormTemplate, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return (\n    /*#__PURE__*/\n    // <div style={{margin: '10%', marginTop:'5%'}}>\n    //   <GridComponent dataSource={data}\n    //     allowPaging={true}\n    //     pageSettings={{pageSize:5}}\n    //     allowFiltering={true}\n    //     // query= {query\n    //     allowGrouping={true}\n    //     editSettings = {editOptions}\n    //     toolbar = {toolbarOptions}\n    //   >\n    //     <ColumnsDirective>\n    //     <ColumnDirective field='id' headerText='Id' textAlign='Left' width='50' />\n    //     <ColumnDirective field='name' headerText='Rep Name'/>\n    //     <ColumnDirective field='email' headerText='Email'/>\n    //     <ColumnDirective field='representativeRegion' headerText='Region' editType='dropdownedit'/>\n    //     <ColumnDirective field='representativeHq' headerText='HQ' editType='dropdownedit'/>\n    //     <ColumnDirective field='representativeArea' headerText='Area operating' editType='dropdownedit'/>\n    //     <ColumnDirective field='customerName' headerText='Customer'/>\n    //     <ColumnDirective field='customerPincode' headerText='Customer PIN'/>\n    //     <ColumnDirective field='customerPhone' headerText='Customer CONTACT'/>\n    //     </ColumnsDirective>\n    //     <Inject services={[Page, Filter, Group, Toolbar, Edit]}/>\n    //   </GridComponent>\n    // </div>\n    React.createElement(DataGetter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    })\n  );\n};\n\nexport default App; // const data: DataManager = new DataManager({\n//   url: 'https://my-json-server.typicode.com/NikhilGarakapati/demo/repdata',\n//   crossDomain: true,\n//   adaptor: new ODataAdaptor()\n// });\n//const query = new Query().addParams('sort', 'representative region');","map":{"version":3,"sources":["/home/nikhil/Desktop/data_grid_editor-master/src/App.tsx"],"names":["React","DialogFormTemplate","DataGetter","App","editOptions","allowEditing","allowAdding","allowDeleting","mode","template","dialogTemplate","toolbarOptions","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAUA;AACA;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AACA,OAAO,WAAP;AAGA,OAAOC,UAAP,MAAuB,cAAvB,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAMC,WAA8B,GAAG;AAAEC,IAAAA,YAAY,EAAE,IAAhB;AAAsBC,IAAAA,WAAW,EAAE,IAAnC;AAAyCC,IAAAA,aAAa,EAAE,IAAxD;AAA8DC,IAAAA,IAAI,EAAC,QAAnE;AAA6EC,IAAAA,QAAQ,EAACC;AAAtF,GAAvC;AACA,QAAMC,cAA8B,GAAG,CAAC,KAAD,EAAQ,MAAR,EAAgB,QAAhB,CAAvC;;AAGA,WAASD,cAAT,CAAwBE,KAAxB,EAAoC;AAClC,wBAAQ,oBAAC,kBAAD,oBAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;AACD;;AAGD;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBF;AA2BD,CArCD;;AAuCA,eAAeT,GAAf,C,CAIE;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\n//import axios from 'axios';\nimport { \n  GridComponent, \n  ColumnDirective, \n  ColumnsDirective,\n  Page, \n  Inject, \n  Filter,\n  Group, GroupSettingsModel, Edit, EditSettings, EditSettingsModel, \n  Toolbar, ToolbarItems } from '@syncfusion/ej2-react-grids';\n//import data from './db.json';\n//import {DataManager, ODataAdaptor, Query} from '@syncfusion/ej2-data';\nimport {DialogFormTemplate} from './DialogFormTemplate';\nimport './App.css';\nimport axios from 'axios';\nimport { IOrderModel } from './orderModel';\nimport DataGetter from './DataGetter';\n\n\n// const data = axios.get('http://localhost:5000/repdata')\n// .then((response) => response.data)\n// .catch(err => {throw err});\n\n//  const getData = () => {\n//   var x= axios.get(`http://localhost:5000/repdata`)\n//     .then(json =>  json.data)\n//     .catch(error => {\n//       throw error;\n//     });\n//     console.log(x);\n//     return x;\n// };\n\n\n\n\nconst App: React.FC = () => {\n  const editOptions: EditSettingsModel = { allowEditing: true, allowAdding: true, allowDeleting: true, mode:'Dialog', template:dialogTemplate };\n  const toolbarOptions: ToolbarItems[] = ['Add', 'Edit', 'Delete'];\n\n\n  function dialogTemplate(props: any) {\n    return (<DialogFormTemplate {...props} />);\n  }\n\n\n  return (\n    // <div style={{margin: '10%', marginTop:'5%'}}>\n    //   <GridComponent dataSource={data}\n    //     allowPaging={true}\n    //     pageSettings={{pageSize:5}}\n    //     allowFiltering={true}\n    //     // query= {query\n    //     allowGrouping={true}\n    //     editSettings = {editOptions}\n    //     toolbar = {toolbarOptions}\n    //   >\n    //     <ColumnsDirective>\n    //     <ColumnDirective field='id' headerText='Id' textAlign='Left' width='50' />\n    //     <ColumnDirective field='name' headerText='Rep Name'/>\n    //     <ColumnDirective field='email' headerText='Email'/>\n    //     <ColumnDirective field='representativeRegion' headerText='Region' editType='dropdownedit'/>\n    //     <ColumnDirective field='representativeHq' headerText='HQ' editType='dropdownedit'/>\n    //     <ColumnDirective field='representativeArea' headerText='Area operating' editType='dropdownedit'/>\n    //     <ColumnDirective field='customerName' headerText='Customer'/>\n    //     <ColumnDirective field='customerPincode' headerText='Customer PIN'/>\n    //     <ColumnDirective field='customerPhone' headerText='Customer CONTACT'/>\n    //     </ColumnsDirective>\n    //     <Inject services={[Page, Filter, Group, Toolbar, Edit]}/>\n    //   </GridComponent>\n    // </div>\n    <DataGetter/>\n  );\n}\n\nexport default App;\n\n\n\n  // const data: DataManager = new DataManager({\n  //   url: 'https://my-json-server.typicode.com/NikhilGarakapati/demo/repdata',\n  //   crossDomain: true,\n  //   adaptor: new ODataAdaptor()\n  // });\n\n  //const query = new Query().addParams('sort', 'representative region');"]},"metadata":{},"sourceType":"module"}