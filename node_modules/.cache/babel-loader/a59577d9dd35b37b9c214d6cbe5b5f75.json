{"ast":null,"code":"import { EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { debounce } from '@syncfusion/ej2-base';\n/**\n * InterSectionObserver - class watch whether it enters the viewport.\n * @hidden\n */\n\nvar InterSectionObserver =\n/** @class */\nfunction () {\n  function InterSectionObserver(element, options) {\n    var _this = this;\n\n    this.fromWheel = false;\n    this.touchMove = false;\n    this.options = {};\n    this.sentinelInfo = {\n      'up': {\n        check: function (rect, info) {\n          var top = rect.top - _this.containerRect.top;\n          info.entered = top >= 0;\n          return top + _this.options.pageHeight / 2 >= 0;\n        },\n        axis: 'Y'\n      },\n      'down': {\n        check: function (rect, info) {\n          var cHeight = _this.options.container.clientHeight;\n          var top = rect.bottom;\n          info.entered = rect.bottom <= _this.containerRect.bottom;\n          return top - _this.options.pageHeight / 2 <= _this.options.pageHeight / 2;\n        },\n        axis: 'Y'\n      },\n      'right': {\n        check: function (rect, info) {\n          var right = rect.right;\n          info.entered = right < _this.containerRect.right;\n          return right - _this.containerRect.width <= _this.containerRect.right;\n        },\n        axis: 'X'\n      },\n      'left': {\n        check: function (rect, info) {\n          var left = rect.left;\n          info.entered = left > 0;\n          return left + _this.containerRect.width >= _this.containerRect.left;\n        },\n        axis: 'X'\n      }\n    };\n    this.element = element;\n    this.options = options;\n  }\n\n  InterSectionObserver.prototype.observe = function (callback, onEnterCallback) {\n    var _this = this;\n\n    this.containerRect = this.options.container.getBoundingClientRect();\n    EventHandler.add(this.options.container, 'wheel', function () {\n      return _this.fromWheel = true;\n    }, this);\n    EventHandler.add(this.options.container, 'scroll', this.virtualScrollHandler(callback, onEnterCallback), this);\n  };\n\n  InterSectionObserver.prototype.check = function (direction) {\n    var info = this.sentinelInfo[direction];\n    return info.check(this.element.getBoundingClientRect(), info);\n  };\n\n  InterSectionObserver.prototype.virtualScrollHandler = function (callback, onEnterCallback) {\n    var _this = this;\n\n    var delay = Browser.info.name === 'chrome' ? 200 : 100;\n    var prevTop = 0;\n    var prevLeft = 0;\n    var debounced100 = debounce(callback, delay);\n    var debounced50 = debounce(callback, 50);\n    return function (e) {\n      var top = e.target.scrollTop;\n      var left = e.target.scrollLeft;\n      var direction = prevTop < top ? 'down' : 'up';\n      direction = prevLeft === left ? direction : prevLeft < left ? 'right' : 'left';\n      prevTop = top;\n      prevLeft = left;\n      var current = _this.sentinelInfo[direction];\n\n      if (_this.options.axes.indexOf(current.axis) === -1) {\n        return;\n      }\n\n      var check = _this.check(direction);\n\n      if (current.entered) {\n        onEnterCallback(_this.element, current, direction, {\n          top: top,\n          left: left\n        }, _this.fromWheel, check);\n      }\n\n      if (check) {\n        var fn = debounced100; //this.fromWheel ? this.options.debounceEvent ? debounced100 : callback : debounced100;\n\n        if (current.axis === 'X') {\n          fn = debounced50;\n        }\n\n        fn({\n          direction: direction,\n          sentinel: current,\n          offset: {\n            top: top,\n            left: left\n          },\n          focusElement: document.activeElement\n        });\n      }\n\n      _this.fromWheel = false;\n    };\n  };\n\n  InterSectionObserver.prototype.setPageHeight = function (value) {\n    this.options.pageHeight = value;\n  };\n\n  return InterSectionObserver;\n}();\n\nexport { InterSectionObserver };","map":{"version":3,"sources":["/home/nikhil/Desktop/data_grid_editor-master/node_modules/@syncfusion/ej2-grids/src/grid/services/intersection-observer.js"],"names":["EventHandler","Browser","debounce","InterSectionObserver","element","options","_this","fromWheel","touchMove","sentinelInfo","check","rect","info","top","containerRect","entered","pageHeight","axis","cHeight","container","clientHeight","bottom","right","width","left","prototype","observe","callback","onEnterCallback","getBoundingClientRect","add","virtualScrollHandler","direction","delay","name","prevTop","prevLeft","debounced100","debounced50","e","target","scrollTop","scrollLeft","current","axes","indexOf","fn","sentinel","offset","focusElement","document","activeElement","setPageHeight","value"],"mappings":"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","sourcesContent":["import { EventHandler, Browser } from '@syncfusion/ej2-base';\nimport { debounce } from '@syncfusion/ej2-base';\n/**\n * InterSectionObserver - class watch whether it enters the viewport.\n * @hidden\n */\nvar InterSectionObserver = /** @class */ (function () {\n    function InterSectionObserver(element, options) {\n        var _this = this;\n        this.fromWheel = false;\n        this.touchMove = false;\n        this.options = {};\n        this.sentinelInfo = {\n            'up': {\n                check: function (rect, info) {\n                    var top = rect.top - _this.containerRect.top;\n                    info.entered = top >= 0;\n                    return top + (_this.options.pageHeight / 2) >= 0;\n                },\n                axis: 'Y'\n            },\n            'down': {\n                check: function (rect, info) {\n                    var cHeight = _this.options.container.clientHeight;\n                    var top = rect.bottom;\n                    info.entered = rect.bottom <= _this.containerRect.bottom;\n                    return top - (_this.options.pageHeight / 2) <= _this.options.pageHeight / 2;\n                }, axis: 'Y'\n            },\n            'right': {\n                check: function (rect, info) {\n                    var right = rect.right;\n                    info.entered = right < _this.containerRect.right;\n                    return right - _this.containerRect.width <= _this.containerRect.right;\n                }, axis: 'X'\n            },\n            'left': {\n                check: function (rect, info) {\n                    var left = rect.left;\n                    info.entered = left > 0;\n                    return left + _this.containerRect.width >= _this.containerRect.left;\n                }, axis: 'X'\n            }\n        };\n        this.element = element;\n        this.options = options;\n    }\n    InterSectionObserver.prototype.observe = function (callback, onEnterCallback) {\n        var _this = this;\n        this.containerRect = this.options.container.getBoundingClientRect();\n        EventHandler.add(this.options.container, 'wheel', function () { return _this.fromWheel = true; }, this);\n        EventHandler.add(this.options.container, 'scroll', this.virtualScrollHandler(callback, onEnterCallback), this);\n    };\n    InterSectionObserver.prototype.check = function (direction) {\n        var info = this.sentinelInfo[direction];\n        return info.check(this.element.getBoundingClientRect(), info);\n    };\n    InterSectionObserver.prototype.virtualScrollHandler = function (callback, onEnterCallback) {\n        var _this = this;\n        var delay = Browser.info.name === 'chrome' ? 200 : 100;\n        var prevTop = 0;\n        var prevLeft = 0;\n        var debounced100 = debounce(callback, delay);\n        var debounced50 = debounce(callback, 50);\n        return function (e) {\n            var top = e.target.scrollTop;\n            var left = e.target.scrollLeft;\n            var direction = prevTop < top ? 'down' : 'up';\n            direction = prevLeft === left ? direction : prevLeft < left ? 'right' : 'left';\n            prevTop = top;\n            prevLeft = left;\n            var current = _this.sentinelInfo[direction];\n            if (_this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }\n            var check = _this.check(direction);\n            if (current.entered) {\n                onEnterCallback(_this.element, current, direction, { top: top, left: left }, _this.fromWheel, check);\n            }\n            if (check) {\n                var fn = debounced100;\n                //this.fromWheel ? this.options.debounceEvent ? debounced100 : callback : debounced100;\n                if (current.axis === 'X') {\n                    fn = debounced50;\n                }\n                fn({ direction: direction, sentinel: current, offset: { top: top, left: left },\n                    focusElement: document.activeElement });\n            }\n            _this.fromWheel = false;\n        };\n    };\n    InterSectionObserver.prototype.setPageHeight = function (value) {\n        this.options.pageHeight = value;\n    };\n    return InterSectionObserver;\n}());\nexport { InterSectionObserver };\n"]},"metadata":{},"sourceType":"module"}