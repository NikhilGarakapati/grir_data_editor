{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Browser, EventHandler, createElement, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, parentsUntil, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend } from '../base/util';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\n\nvar Selection =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid selection module\n   * @hidden\n   */\n  function Selection(parent, selectionSettings, locator) {\n    //Internal letiables       \n\n    /**\n     * @hidden\n     */\n    this.selectedRowIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRowCellIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRecords = [];\n    /**\n     * @hidden\n     */\n\n    this.preventFocus = false;\n    this.checkBoxState = false;\n    this.isMultiShiftRequest = false;\n    this.isMultiCtrlRequest = false;\n    this.enableSelectMultiTouch = false;\n    this.clearRowCheck = false;\n    this.selectRowCheck = false;\n    this.selectedRowState = {};\n    this.totalRecordsCount = 0;\n    this.chkAllCollec = [];\n    this.isCheckedOnAdd = false;\n    this.persistSelectedData = [];\n    this.isCancelDeSelect = false;\n    this.isPreventCellSelect = false;\n    this.disableUI = false;\n    this.isPersisted = false;\n    this.cmdKeyPressed = false;\n    this.cellselected = false;\n    this.isMultiSelection = false;\n    this.isAddRowsToSelection = false;\n    /**\n     * @hidden\n     */\n\n    this.autoFillRLselection = true;\n    this.parent = parent;\n    this.selectionSettings = selectionSettings;\n    this.factory = locator.getService('rendererFactory');\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n    this.wireEvents();\n  }\n\n  Selection.prototype.initializeSelection = function () {\n    this.parent.log('selection_key_missing');\n    this.render();\n  };\n  /**\n   * The function used to trigger onActionBegin\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionBegin = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n  };\n\n  Selection.prototype.fDataUpdate = function (args) {\n    if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n      var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ? this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n      args.foreignKeyData = rowObj.foreignKeyData;\n    }\n\n    return args;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionComplete = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n    this.isMultiSelection = false;\n  };\n  /**\n   * For internal use only - Get the module name.\n   * @private\n   */\n\n\n  Selection.prototype.getModuleName = function () {\n    return 'selection';\n  };\n  /**\n   * To destroy the selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (!gridElement || !gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent')) {\n      return;\n    }\n\n    this.hidePopUp();\n    this.clearSelection();\n    this.removeEventListener();\n    this.unWireEvents();\n    EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n    EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n  };\n\n  Selection.prototype.isEditing = function () {\n    return (this.parent.editSettings.mode === 'Normal' || this.parent.editSettings.mode === 'Batch' && this.parent.editModule && this.parent.editModule.formObj && !this.parent.editModule.formObj.validate()) && this.parent.isEdit && !this.parent.isPersistSelection;\n  };\n\n  Selection.prototype.getSelectedMovableRow = function (index) {\n    var gObj = this.parent;\n\n    if (gObj.getFrozenColumns() && this.parent.getContent().querySelector('.e-movablecontent')) {\n      return gObj.getMovableRowByIndex(index);\n    }\n\n    return null;\n  };\n\n  Selection.prototype.getCurrentBatchRecordChanges = function () {\n    var gObj = this.parent;\n    var added = 'addedRecords';\n    var deleted = 'deletedRecords';\n\n    if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n      var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n      currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ? currentRecords.concat(this.parent.editModule.getBatchChanges()[added]) : this.parent.editModule.getBatchChanges()[added].concat(currentRecords);\n      var deletedRecords = this.parent.editModule.getBatchChanges()[deleted];\n      var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < deletedRecords.length; i++) {\n        for (var j = 0; j < currentRecords.length; j++) {\n          if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n            currentRecords.splice(j, 1);\n            break;\n          }\n        }\n      }\n\n      return currentRecords;\n    } else {\n      return gObj.getCurrentViewRecords();\n    }\n  };\n  /**\n   * Selects a row by the given index.\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRow = function (index, isToggle) {\n    if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n      this.addRowsToSelection([index]);\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectData;\n    var isRemoved = false;\n\n    if (gObj.enableVirtualization && index > -1) {\n      this.parent.notify(events.selectVirtualRow, {\n        selectedIndex: index\n      });\n      var frozenData = gObj.getFrozenColumns() ? gObj.contentModule.getRowObjectByIndex(index) : null;\n\n      if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n        selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n      } else {\n        var prevSelectedData = this.parent.getSelectedRecords();\n\n        if (prevSelectedData.length > 0) {\n          this.clearRowSelection();\n        }\n\n        return;\n      }\n    } else {\n      selectData = this.getCurrentBatchRecordChanges()[index];\n    }\n\n    if (!this.isRowType() || !selectedRow || this.isEditing()) {\n      // if (this.isEditing()) {\n      //     gObj.selectedRowIndex = index;\n      // }\n      return;\n    }\n\n    var isRowSelected = selectedRow.hasAttribute('aria-selected');\n    this.activeTarget();\n    isToggle = !isToggle ? isToggle : !this.selectedRowIndexes.length ? false : this.selectedRowIndexes.length === 1 ? index === this.selectedRowIndexes[0] : false;\n    var args;\n    var can = 'cancel';\n\n    if (!isToggle) {\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        args = {\n          data: selectData,\n          rowIndex: index,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          isShiftPressed: this.isMultiShiftRequest,\n          row: selectedRow,\n          previousRow: gObj.getRowByIndex(this.prevRowIndex),\n          previousRowIndex: this.prevRowIndex,\n          target: this.actualTarget,\n          cancel: false,\n          isInteracted: this.isInteracted,\n          isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n        };\n        args = this.addMovableArgs(args, selectedMovableRow);\n      } else {\n        args = {\n          data: selectData,\n          rowIndex: index,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          isShiftPressed: this.isMultiShiftRequest,\n          previousRowIndex: this.prevRowIndex,\n          cancel: false,\n          isInteracted: this.isInteracted,\n          isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n        };\n      }\n\n      this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n    } else {\n      this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n    }\n  };\n\n  Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n    var _this = this;\n\n    return function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n\n        return;\n      }\n\n      _this.index = index;\n      _this.toggle = isToggle;\n      _this.data = selectData;\n      _this.removed = isRemoved;\n\n      if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n        _this.clearSelectedRow(index);\n\n        isRemoved = true;\n        _this.removed = isRemoved;\n\n        _this.selectRowCallBack();\n      } else if (!isRowSelected && _this.selectionSettings.persistSelection && _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        _this.selectRowCallBack();\n      }\n\n      if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n        _this.clearSelection();\n      }\n\n      if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n        _this.selectRowCheck = true;\n\n        _this.clearRow();\n      }\n    };\n  };\n\n  Selection.prototype.selectRowCallBack = function () {\n    var gObj = this.parent;\n    var args;\n    var index = this.index;\n    var isToggle = this.toggle;\n    var selectData = this.data;\n    var isRemoved = this.removed;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n\n    if (!isToggle && !isRemoved) {\n      if (this.selectedRowIndexes.indexOf(index) <= -1) {\n        this.updateRowSelection(selectedRow, index);\n\n        if (gObj.getFrozenColumns()) {\n          this.updateRowSelection(selectedMovableRow, index);\n        }\n      }\n\n      this.selectRowIndex(index);\n    }\n\n    if (!isToggle) {\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        args = {\n          data: selectData,\n          rowIndex: index,\n          row: selectedRow,\n          previousRow: gObj.getRowByIndex(this.prevRowIndex),\n          previousRowIndex: this.prevRowIndex,\n          target: this.actualTarget,\n          isInteracted: this.isInteracted,\n          isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n        };\n        args = this.addMovableArgs(args, selectedMovableRow);\n      } else {\n        args = {\n          data: selectData,\n          rowIndex: index,\n          row: selectedRow,\n          previousRow: gObj.getRowByIndex(this.prevRowIndex),\n          previousRowIndex: this.prevRowIndex,\n          isInteracted: this.isInteracted,\n          isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n        };\n      }\n\n      this.onActionComplete(args, events.rowSelected);\n    }\n\n    if (isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization) {\n      var interopAdaptor = 'interopAdaptor';\n      var invokeMethodAsync = 'invokeMethodAsync';\n      this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', true, 'normal', [index]);\n    }\n\n    this.isInteracted = false;\n    this.updateRowProps(index);\n  };\n\n  Selection.prototype.addMovableArgs = function (targetObj, mRow) {\n    if (this.parent.getFrozenColumns()) {\n      var mObj = {\n        mRow: mRow,\n        previousMovRow: this.parent.getMovableRows()[this.prevRowIndex]\n      };\n      targetObj = __assign({}, targetObj, mObj);\n    }\n\n    return targetObj;\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n    this.selectRowIndex(endIndex);\n  };\n  /**\n   * Selects a collection of rows by index.\n   * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectRows = function (rowIndexes) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n    this.isMultiSelection = true;\n    var selectedRows = [];\n    var foreignKeyData = [];\n    var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n    var frzCols = gObj.getFrozenColumns();\n    var can = 'cancel';\n    var selectedData = [];\n\n    if (!this.isRowType() || this.isEditing()) {\n      return;\n    }\n\n    for (var i = 0, len = rowIndexes.length; i < len; i++) {\n      var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n      var rowObj = this.getRowObj(currentRow);\n\n      if (rowObj) {\n        selectedData.push(rowObj.data);\n        selectedRows.push(currentRow);\n        foreignKeyData.push(rowObj.foreignKeyData);\n      }\n    }\n\n    var isHybrid = 'isHybrid';\n    this.activeTarget();\n    var args;\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      args = {\n        cancel: false,\n        rowIndexes: rowIndexes,\n        row: selectedRows,\n        rowIndex: rowIndex,\n        target: this.actualTarget,\n        prevRow: gObj.getRows()[this.prevRowIndex],\n        previousRowIndex: this.prevRowIndex,\n        isInteracted: this.isInteracted,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        data: selectedData,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n        foreignKeyData: foreignKeyData\n      };\n      args = this.addMovableArgs(args, selectedMovableRow);\n    } else {\n      args = {\n        cancel: false,\n        rowIndexes: rowIndexes,\n        rowIndex: rowIndex,\n        previousRowIndex: this.prevRowIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        data: selectedData,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n        foreignKeyData: foreignKeyData\n      };\n    }\n\n    this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n\n        return;\n      }\n\n      _this.clearRow();\n\n      _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n\n      if (!_this.isSingleSel()) {\n        for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n          var rowIdx = rowIndexes_1[_i];\n\n          _this.updateRowSelection(gObj.getRowByIndex(rowIdx), rowIdx);\n\n          if (frzCols) {\n            _this.updateRowSelection(gObj.getMovableRowByIndex(rowIdx), rowIdx);\n          }\n\n          _this.updateRowProps(rowIndex);\n        }\n      } else {\n        _this.updateRowSelection(gObj.getRowByIndex(rowIndex), rowIndex);\n\n        if (frzCols) {\n          _this.updateRowSelection(gObj.getMovableRowByIndex(rowIndex), rowIndex);\n        }\n\n        _this.updateRowProps(rowIndex);\n      }\n\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n        args = {\n          rowIndexes: rowIndexes,\n          row: selectedRows,\n          rowIndex: rowIndex,\n          target: _this.actualTarget,\n          prevRow: gObj.getRows()[_this.prevRowIndex],\n          previousRowIndex: _this.prevRowIndex,\n          data: isBlazor() ? selectedData : _this.getSelectedRecords(),\n          isInteracted: _this.isInteracted,\n          isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked,\n          foreignKeyData: foreignKeyData\n        };\n        args = _this.addMovableArgs(args, selectedMovableRow);\n      } else {\n        args = {\n          rowIndexes: rowIndexes,\n          rowIndex: rowIndex,\n          previousRowIndex: _this.prevRowIndex,\n          row: selectedRows,\n          prevRow: gObj.getRows()[_this.prevRowIndex],\n          data: isBlazor() ? selectedData : _this.getSelectedRecords(),\n          isInteracted: _this.isInteracted,\n          isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked,\n          foreignKeyData: foreignKeyData\n        };\n      }\n\n      if (_this.isRowSelected) {\n        _this.onActionComplete(args, events.rowSelected);\n      }\n    });\n  };\n  /**\n   * Select rows with existing row selection by passing row indexes.\n   * @param  {number} startIndex - Specifies the row indexes.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addRowsToSelection = function (rowIndexes) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var can = 'cancel';\n    var target = this.target;\n    this.isMultiSelection = true;\n    var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n    var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) : gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n    var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) : this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!this.isRowType() || this.isEditing()) {\n      return;\n    }\n\n    var args;\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    var _loop_1 = function (rowIndex) {\n      var rowObj = this_1.getRowObj(rowIndex);\n      var isUnSelected = this_1.selectedRowIndexes.indexOf(rowIndex) > -1;\n      this_1.selectRowIndex(rowIndex);\n\n      if (isUnSelected && ((checkboxColumn.length ? true : this_1.selectionSettings.enableToggle) || this_1.isMultiCtrlRequest)) {\n        this_1.isAddRowsToSelection = true;\n        this_1.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n\n        if (this_1.isCancelDeSelect) {\n          return {\n            value: void 0\n          };\n        }\n\n        this_1.selectedRowIndexes.splice(this_1.selectedRowIndexes.indexOf(rowIndex), 1);\n        this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedRow), 1);\n        selectedRow.removeAttribute('aria-selected');\n        this_1.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n\n        if (selectedMovableRow) {\n          this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedMovableRow), 1);\n          selectedMovableRow.removeAttribute('aria-selected');\n          this_1.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n\n        this_1.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow]);\n        this_1.isInteracted = false;\n        this_1.isMultiSelection = false;\n        this_1.isAddRowsToSelection = false;\n      } else {\n        var isHybrid = 'isHybrid';\n        this_1.activeTarget();\n\n        if (!isBlazor() || this_1.parent.isJsComponent || this_1.parent[isHybrid]) {\n          args = {\n            cancel: false,\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            row: selectedRow,\n            target: this_1.actualTarget,\n            prevRow: gObj.getRows()[this_1.prevRowIndex],\n            previousRowIndex: this_1.prevRowIndex,\n            isCtrlPressed: this_1.isMultiCtrlRequest,\n            isShiftPressed: this_1.isMultiShiftRequest,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this_1.isInteracted,\n            isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n          args = this_1.addMovableArgs(args, selectedMovableRow);\n        } else {\n          args = {\n            cancel: false,\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            previousRowIndex: this_1.prevRowIndex,\n            isCtrlPressed: this_1.isMultiCtrlRequest,\n            isShiftPressed: this_1.isMultiShiftRequest,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this_1.isInteracted,\n            isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n        }\n\n        this_1.parent.trigger(events.rowSelecting, this_1.fDataUpdate(args), function (args) {\n          if (!isNullOrUndefined(args) && args[can] === true) {\n            _this.disableInteracted();\n\n            return;\n          }\n\n          if (_this.isSingleSel()) {\n            _this.clearRow();\n          }\n\n          _this.updateRowSelection(selectedRow, rowIndex);\n\n          if (frzCols) {\n            _this.updateRowSelection(selectedMovableRow, rowIndex);\n          }\n        });\n      }\n\n      if (!isUnSelected) {\n        var isHybrid = 'isHybrid';\n\n        if (!isBlazor() || this_1.parent.isJsComponent || this_1.parent[isHybrid]) {\n          args = {\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            row: selectedRow,\n            target: this_1.actualTarget,\n            prevRow: gObj.getRows()[this_1.prevRowIndex],\n            previousRowIndex: this_1.prevRowIndex,\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this_1.isInteracted,\n            isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n          args = this_1.addMovableArgs(args, selectedMovableRow);\n        } else {\n          args = {\n            data: rowObj.data,\n            rowIndex: rowIndex,\n            previousRowIndex: this_1.prevRowIndex,\n            row: selectedRow,\n            prevRow: gObj.getRows()[this_1.prevRowIndex],\n            foreignKeyData: rowObj.foreignKeyData,\n            isInteracted: this_1.isInteracted,\n            isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked,\n            rowIndexes: indexes\n          };\n        }\n\n        this_1.onActionComplete(args, events.rowSelected);\n      }\n\n      this_1.isInteracted = false;\n      this_1.updateRowProps(rowIndex);\n\n      if (this_1.isSingleSel()) {\n        return \"break\";\n      }\n    };\n\n    var this_1 = this;\n\n    for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n      var rowIndex = rowIndexes_2[_i];\n\n      var state_1 = _loop_1(rowIndex);\n\n      if (typeof state_1 === \"object\") return state_1.value;\n      if (state_1 === \"break\") break;\n    }\n  };\n\n  Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n    var indexes = [];\n\n    var _a = startIndex <= endIndex ? {\n      i: startIndex,\n      max: endIndex\n    } : {\n      i: endIndex,\n      max: startIndex\n    },\n        i = _a.i,\n        max = _a.max;\n\n    for (; i <= max; i++) {\n      indexes.push(i);\n    }\n\n    if (startIndex > endIndex) {\n      indexes.reverse();\n    }\n\n    return indexes;\n  };\n\n  Selection.prototype.clearRow = function () {\n    this.clearRowCheck = true;\n    this.clearRowSelection();\n  };\n\n  Selection.prototype.clearRowCallBack = function () {\n    if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n      return;\n    }\n\n    this.selectedRowIndexes = [];\n    this.selectedRecords = [];\n    this.selectRowIndex(-1);\n\n    if (this.isSingleSel() && this.parent.isPersistSelection) {\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.clearSelectedRow = function (index) {\n    if (this.target) {\n      var selectedEle = this.target.parentElement;\n\n      if (!this.disableUI) {\n        selectedEle.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n      }\n\n      this.updatePersistCollection(selectedEle, false);\n      this.updateCheckBoxes(selectedEle);\n      this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n      this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n    }\n  };\n\n  Selection.prototype.updateRowProps = function (startIndex) {\n    this.prevRowIndex = startIndex;\n    this.isRowSelected = this.selectedRowIndexes.length && true;\n  };\n\n  Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n    var _this = this;\n\n    if (this.parent.isPersistSelection && !isNullOrUndefined(selectedRow)) {\n      var rowObj = this.getRowObj(selectedRow);\n      var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (pKey_1 === null) {\n        return;\n      }\n\n      rowObj.isSelected = chkState;\n\n      if (chkState) {\n        this.selectedRowState[pKey_1] = chkState;\n\n        if (!this.persistSelectedData.some(function (data) {\n          return data[_this.primaryKey] === pKey_1;\n        })) {\n          this.persistSelectedData.push(rowObj.data);\n        }\n      } else {\n        this.updatePersistDelete(pKey_1);\n      }\n    }\n  };\n\n  Selection.prototype.updatePersistDelete = function (pKey) {\n    var _this = this;\n\n    delete this.selectedRowState[pKey];\n    var index;\n    var isPresent = this.persistSelectedData.some(function (data, i) {\n      index = i;\n      return data[_this.primaryKey] === pKey;\n    });\n\n    if (isPresent) {\n      this.persistSelectedData.splice(index, 1);\n    }\n  };\n\n  Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n    if (!isNullOrUndefined(row)) {\n      var chkBox = row.querySelector('.e-checkselect');\n\n      if (!isNullOrUndefined(chkBox)) {\n        removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n\n        if (isNullOrUndefined(this.checkedTarget) || !isNullOrUndefined(this.checkedTarget) && !this.checkedTarget.classList.contains('e-checkselectall')) {\n          this.setCheckAllState(rowIndex);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n    if (!selectedRow) {\n      return;\n    }\n\n    this.selectedRowIndexes.push(startIndex);\n    var len = this.selectedRowIndexes.length;\n\n    if (this.parent.getFrozenColumns() && len > 1) {\n      if (this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1]) {\n        this.selectedRowIndexes.pop();\n      }\n    }\n\n    this.selectedRecords.push(selectedRow);\n    selectedRow.setAttribute('aria-selected', 'true');\n    this.updatePersistCollection(selectedRow, true);\n    this.updateCheckBoxes(selectedRow, true);\n    this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n\n    if (!this.preventFocus) {\n      var target = this.focus.getPrevIndexes().cellIndex ? selectedRow.cells[this.focus.getPrevIndexes().cellIndex] : selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n\n      if (this.parent.contextMenuModule && this.mouseButton === 2) {\n        target = this.parent.contextMenuModule.cell;\n      }\n\n      if (!target) {\n        return;\n      }\n\n      this.focus.onClick({\n        target: target\n      }, true);\n    }\n  };\n  /**\n   * Deselects the currently selected rows and cells.\n   * @return {void}\n   */\n\n\n  Selection.prototype.clearSelection = function () {\n    if (!this.parent.isPersistSelection || this.parent.isPersistSelection && !this.parent.isEdit || !isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall')) {\n      var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n\n      if (span.classList.contains('e-rowselect')) {\n        span.classList.remove('e-spanclicked');\n      }\n\n      if (this.parent.isPersistSelection) {\n        this.persistSelectedData = [];\n        this.selectedRowState = {};\n      }\n\n      this.clearRowSelection();\n      this.clearCellSelection();\n      this.prevRowIndex = undefined;\n      this.enableSelectMultiTouch = false;\n      this.isInteracted = false;\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   * @return {void}\n   */\n\n\n  Selection.prototype.clearRowSelection = function () {\n    var _this = this;\n\n    if (this.isRowSelected) {\n      var gObj = this.parent;\n      var rows_1 = this.parent.getDataRows();\n      var data_1 = [];\n      var row_1 = [];\n      var mRow_1 = [];\n      var rowIndex_1 = [];\n      var frzCols = gObj.getFrozenColumns();\n      var foreignKeyData_1 = [];\n      var target_1 = this.target;\n      var currentViewData = this.parent.getCurrentViewRecords();\n\n      for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n        var currentRow = this.parent.editSettings.mode === 'Batch' ? this.parent.getRows()[this.selectedRowIndexes[i]] : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n        var rowObj = this.getRowObj(currentRow);\n\n        if (rowObj) {\n          data_1.push(rowObj.data);\n          row_1.push(currentRow);\n          rowIndex_1.push(this.selectedRowIndexes[i]);\n          foreignKeyData_1.push(rowObj.foreignKeyData);\n        }\n\n        if (frzCols) {\n          mRow_1.push(gObj.getMovableRows()[this.selectedRowIndexes[i]]);\n        }\n      }\n\n      if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        this.isInteracted = this.checkSelectAllClicked ? true : false;\n      }\n\n      this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n        if (_this.isCancelDeSelect && (_this.isInteracted || _this.checkSelectAllClicked)) {\n          if (_this.parent.isPersistSelection) {\n            if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n              for (var i = 0; i < _this.selectedRecords.length; i++) {\n                _this.updatePersistCollection(_this.selectedRecords[i], true);\n              }\n            } else {\n              _this.parent.checkAllRows = 'Check';\n\n              _this.updatePersistSelectedData(true);\n            }\n          }\n\n          if (_this.clearRowCheck) {\n            _this.clearRowCallBack();\n\n            _this.clearRowCheck = false;\n\n            if (_this.selectRowCheck) {\n              _this.selectRowCallBack();\n\n              _this.selectRowCheck = false;\n            }\n          }\n\n          return;\n        }\n\n        var element = [].slice.call(rows_1.filter(function (record) {\n          return record.hasAttribute('aria-selected');\n        }));\n\n        for (var j = 0; j < element.length; j++) {\n          if (!_this.disableUI || isBlazor()) {\n            element[j].removeAttribute('aria-selected');\n\n            _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n          } // tslint:disable-next-line:align\n\n\n          _this.updatePersistCollection(element[j], false);\n\n          _this.updateCheckBoxes(element[j]);\n        }\n\n        if (isBlazor() && _this.parent.isServerRendered && _this.parent.enableVirtualization) {\n          _this.getRenderer().setSelection(null, false, true);\n        }\n\n        for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n          var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n\n          if (movableRow) {\n            if (!_this.disableUI || isBlazor()) {\n              movableRow.removeAttribute('aria-selected');\n\n              _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n\n            _this.updatePersistCollection(movableRow, false);\n          }\n        }\n\n        _this.selectedRowIndexes = [];\n        _this.selectedRecords = [];\n        _this.isRowSelected = false;\n\n        _this.selectRowIndex(-1);\n\n        _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1);\n\n        if (_this.clearRowCheck) {\n          _this.clearRowCallBack();\n\n          _this.clearRowCheck = false;\n\n          if (_this.selectRowCheck) {\n            _this.selectRowCallBack();\n\n            _this.selectRowCheck = false;\n          }\n        }\n      });\n    } else {\n      if (this.clearRowCheck) {\n        this.clearRowCallBack();\n        this.clearRowCheck = false;\n\n        if (this.selectRowCheck) {\n          this.selectRowCallBack();\n          this.selectRowCheck = false;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack) {\n    var _this = this;\n\n    if (this.selectionSettings.persistSelection && this.isInteracted || !this.selectionSettings.persistSelection) {\n      var cancl_1 = 'cancel';\n      var rowDeselectObj = {\n        rowIndex: rowIndex[0],\n        data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck' && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.persistSelectedData : data,\n        foreignKeyData: foreignKeyData,\n        cancel: false,\n        isInteracted: this.isInteracted,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n      };\n\n      if (type === 'rowDeselected') {\n        delete rowDeselectObj.cancel;\n      }\n\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        var rowInString = 'row';\n        var target_2 = 'target';\n        var rowidx = 'rowIndex';\n        var rowidxex = 'rowIndexes';\n        var data_2 = 'data';\n        var foreignKey = 'foreignKeyData';\n        rowDeselectObj[rowInString] = row;\n        rowDeselectObj[target_2] = this.actualTarget;\n        var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n\n        if (isHeaderCheckBxClick || rowIndex.length > 1) {\n          rowDeselectObj[rowidx] = rowIndex[0];\n          rowDeselectObj[rowidxex] = rowIndex;\n        } else if (rowIndex.length === 1) {\n          rowDeselectObj[data_2] = rowDeselectObj[data_2][0];\n          rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n          rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n\n          if (this.isAddRowsToSelection) {\n            rowDeselectObj[rowidxex] = rowIndex;\n          }\n        }\n      } else {\n        var rowIndex_2 = 'rowIndex';\n        var data_3 = 'data';\n        rowDeselectObj[rowIndex_2] = rowDeselectObj[rowIndex_2][rowDeselectObj[rowIndex_2].length - 1];\n        rowDeselectObj[data_3] = rowDeselectObj[data_3][rowDeselectObj[data_3].length - 1];\n      }\n\n      this.parent.trigger(type, (!isBlazor() || this.parent.isJsComponent) && this.parent.getFrozenColumns() !== 0 ? __assign({}, rowDeselectObj, {\n        mRow: mRow\n      }) : rowDeselectObj, function (args) {\n        _this.isCancelDeSelect = args[cancl_1];\n\n        if (!_this.isCancelDeSelect || !_this.isInteracted && !_this.checkSelectAllClicked) {\n          _this.updatePersistCollection(row[0], false);\n\n          _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n        }\n\n        if (rowDeselectCallBack !== undefined) {\n          rowDeselectCallBack();\n        }\n      });\n    } else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n      if (rowDeselectCallBack !== undefined) {\n        rowDeselectCallBack();\n      }\n    }\n  };\n\n  Selection.prototype.getRowObj = function (row) {\n    if (row === void 0) {\n      row = this.currentIndex;\n    }\n\n    if (isNullOrUndefined(row)) {\n      return {};\n    }\n\n    if (typeof row === 'number') {\n      row = this.parent.getRowByIndex(row);\n    }\n\n    if (row) {\n      return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n    }\n\n    return {};\n  };\n\n  Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n    var gObj = this.parent;\n    var frzCols = gObj.getFrozenColumns();\n\n    if (frzCols) {\n      if (cellIndex.cellIndex >= frzCols) {\n        return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      return null;\n    }\n\n    return null;\n  };\n  /**\n   * Selects a cell by the given index.\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCell = function (cellIndex, isToggle) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(cellIndex);\n    var args;\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n    }\n\n    var selectedTable;\n    var cIdx;\n    this.currentIndex = cellIndex.rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (!this.isCellType() || !selectedCell || this.isEditing()) {\n      return;\n    }\n\n    var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n    isToggle = !isToggle ? isToggle : !isUndefined(this.prevCIdxs) && cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex && isCellSelected;\n\n    if (!isToggle) {\n      args = {\n        data: selectedData,\n        cellIndex: cellIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n        cancel: false\n      };\n\n      if (!isBlazor() || this.parent.isJsComponent) {\n        var currentCell = 'currentCell';\n        args[currentCell] = selectedCell;\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n      }\n\n      this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n      this.cellselected = true;\n    } else {\n      this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n    }\n  };\n\n  Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n    var _this = this;\n\n    return function (cellSelectingArgs) {\n      var cncl = 'cancel';\n      var currentCell = 'currentCell';\n\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      if (!isToggle) {\n        cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n      }\n\n      _this.clearCell();\n\n      if (!isToggle) {\n        _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isToggle) {\n        var args = void 0;\n        var isHybrid = 'isHybrid';\n\n        if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n          args = {\n            data: selectedData,\n            cellIndex: cellIndex,\n            currentCell: selectedCell,\n            selectedRowCellIndex: _this.selectedRowCellIndexes,\n            previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n          };\n          var previousRowCellIndex = 'previousRowCellIndex';\n          args[previousRowCellIndex] = _this.prevECIdxs;\n        } else {\n          args = {\n            data: selectedData,\n            cellIndex: cellIndex,\n            selectedRowCellIndex: _this.selectedRowCellIndexes\n          };\n        }\n\n        _this.updateCellProps(cellIndex, cellIndex);\n\n        _this.onActionComplete(args, events.cellSelected);\n      }\n    };\n  };\n\n  Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n    return this.parent.getFrozenColumns() ? cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx);\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    var _this = this;\n\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(startIndex);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n    }\n\n    var min;\n    var max;\n    var stIndex = startIndex;\n    var edIndex = endIndex = endIndex ? endIndex : startIndex;\n    var cellIndexes;\n    this.currentIndex = startIndex.rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var args = {\n      data: selectedData,\n      cellIndex: startIndex,\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n\n    if (!isBlazor()) {\n      var previousRowCellIndex = 'previousRowCellIndex';\n      args[previousRowCellIndex] = this.prevECIdxs;\n    }\n\n    this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      _this.clearCell();\n\n      if (startIndex.rowIndex > endIndex.rowIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n\n      for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n        if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n          min = i === startIndex.rowIndex ? startIndex.cellIndex : 0;\n          max = i === endIndex.rowIndex ? endIndex.cellIndex : _this.getLastColIndex(i);\n        } else {\n          min = startIndex.cellIndex;\n          max = endIndex.cellIndex;\n        }\n\n        cellIndexes = [];\n\n        for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n          if (frzCols) {\n            if (j < frzCols) {\n              selectedCell = gObj.getCellFromIndex(i, j);\n            } else {\n              selectedCell = gObj.getMovableCellFromIndex(i, j);\n            }\n          } else {\n            selectedCell = gObj.getCellFromIndex(i, j);\n          }\n\n          if (!selectedCell) {\n            continue;\n          }\n\n          cellIndexes.push(j);\n\n          _this.updateCellSelection(selectedCell);\n\n          _this.addAttribute(selectedCell);\n        }\n\n        _this.selectedRowCellIndexes.push({\n          rowIndex: i,\n          cellIndexes: cellIndexes\n        });\n      }\n\n      var cellSelectedArgs;\n      var isHybrid = 'isHybrid';\n\n      if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n        cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: edIndex,\n          currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n          selectedRowCellIndex: _this.selectedRowCellIndexes,\n          previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n      } else {\n        cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: edIndex,\n          selectedRowCellIndex: _this.selectedRowCellIndexes\n        };\n      }\n\n      if (!_this.isDragged) {\n        _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n\n        _this.cellselected = true;\n      }\n\n      _this.updateCellProps(stIndex, edIndex);\n    });\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @return {void}\n   */\n\n\n  Selection.prototype.selectCells = function (rowCellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n    }\n\n    this.currentIndex = rowCellIndexes[0].rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var cellSelectArgs;\n    var isHybrid = 'isHybrid';\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      cellSelectArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        currentCell: selectedCell,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n    } else {\n      cellSelectArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n    }\n\n    this.onActionBegin(cellSelectArgs, events.cellSelecting);\n\n    for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n      for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n        if (frzCols) {\n          if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          } else {\n            selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          }\n        } else {\n          selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n        }\n\n        if (!selectedCell) {\n          continue;\n        }\n\n        this.updateCellSelection(selectedCell);\n        this.addAttribute(selectedCell);\n        this.addRowCellIndex({\n          rowIndex: rowCellIndexes[i].rowIndex,\n          cellIndex: rowCellIndexes[i].cellIndexes[j]\n        });\n      }\n    }\n\n    this.updateCellProps({\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    }, {\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    });\n    var cellSelectedArgs;\n\n    if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n      cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        currentCell: selectedCell,\n        selectedRowCellIndex: this.selectedRowCellIndexes,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n    } else {\n      cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: rowCellIndexes[0].cellIndexes[0],\n        selectedRowCellIndex: this.selectedRowCellIndexes\n      };\n    }\n\n    this.onActionComplete(cellSelectedArgs, events.cellSelected);\n  };\n  /**\n   * Select cells with existing cell selection by passing row and column index.\n   * @param  {IIndex} startIndex - Defines the collection of row and column index.\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addCellsToSelection = function (cellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedTable;\n    var cIdx;\n    var selectedCell;\n    var frzCols = gObj.getFrozenColumns();\n    var index;\n    this.currentIndex = cellIndexes[0].rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n    var isHybrid = 'isHybrid';\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    this.hideAutoFill();\n    var rowObj;\n\n    if (frzCols && cellIndexes[0].cellIndex >= frzCols) {\n      rowObj = gObj.getMovableRowsObject()[cellIndexes[0].rowIndex];\n    } else {\n      rowObj = this.getRowObj(cellIndexes[0].rowIndex);\n    }\n\n    var foreignKeyData = [];\n\n    for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n      var cellIndex = cellIndexes_1[_i];\n\n      for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n        if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n          index = i;\n          break;\n        }\n      }\n\n      selectedCell = this.getSelectedMovableCell(cellIndex);\n\n      if (!selectedCell) {\n        selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      foreignKeyData.push(rowObj.cells[frzCols && cellIndexes[0].cellIndex >= frzCols ? cellIndex.cellIndex - frzCols : cellIndex.cellIndex].foreignKeyData);\n      var args = void 0;\n\n      if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n        args = {\n          cancel: false,\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          isShiftPressed: this.isMultiShiftRequest,\n          currentCell: selectedCell,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n      } else {\n        args = {\n          cancel: false,\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          isShiftPressed: this.isMultiShiftRequest,\n          isCtrlPressed: this.isMultiCtrlRequest\n        };\n      }\n\n      var isUnSelected = index > -1;\n\n      if (isUnSelected) {\n        var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n\n        if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n          this.cellDeselect(events.cellDeselecting, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n          selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n\n          if (selectedCellIdx.length === 0) {\n            this.selectedRowCellIndexes.splice(index, 1);\n          }\n\n          selectedCell.classList.remove('e-cellselectionbackground');\n          selectedCell.removeAttribute('aria-selected');\n          this.cellDeselect(events.cellDeselected, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n        } else {\n          isUnSelected = false;\n          this.onActionBegin(args, events.cellSelecting);\n          this.addRowCellIndex({\n            rowIndex: cellIndex.rowIndex,\n            cellIndex: cellIndex.cellIndex\n          });\n          this.updateCellSelection(selectedCell);\n          this.addAttribute(selectedCell);\n        }\n      } else {\n        this.onActionBegin(args, events.cellSelecting);\n\n        if (!isNullOrUndefined(args) && args[cncl] === true) {\n          return;\n        }\n\n        this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isUnSelected) {\n        var cellSelectedArgs = void 0;\n\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n          cellSelectedArgs = {\n            data: selectedData,\n            cellIndex: cellIndexes[0],\n            currentCell: selectedCell,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n            selectedRowCellIndex: this.selectedRowCellIndexes\n          };\n          var previousRowCellIndex = 'previousRowCellIndex';\n          cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n        } else {\n          cellSelectedArgs = {\n            data: selectedData,\n            cellIndex: cellIndexes[0],\n            selectedRowCellIndex: this.selectedRowCellIndexes\n          };\n        }\n\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n        this.cellselected = true;\n      }\n\n      this.updateCellProps(cellIndex, cellIndex);\n    }\n  };\n\n  Selection.prototype.getColIndex = function (rowIndex, index) {\n    var cells;\n    var frzCols = this.parent.getFrozenColumns();\n\n    if (frzCols) {\n      if (index >= frzCols) {\n        cells = this.parent.getMovableDataRows()[rowIndex] && this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n      }\n    }\n\n    if (!cells) {\n      cells = this.parent.getDataRows()[rowIndex] && this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n    }\n\n    if (cells) {\n      for (var m = 0; m < cells.length; m++) {\n        var colIndex = parseInt(cells[m].getAttribute('aria-colindex'), 10);\n\n        if (colIndex === index) {\n          if (frzCols) {\n            if (index >= frzCols) {\n              m += frzCols;\n            }\n          }\n\n          return m;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  Selection.prototype.getLastColIndex = function (rowIndex) {\n    var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell') : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n    return parseInt(cells[cells.length - 1].getAttribute('aria-colindex'), 10);\n  };\n\n  Selection.prototype.clearCell = function () {\n    this.clearCellSelection();\n  };\n\n  Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n    var cancl = 'cancel';\n\n    if (cells[0] && cells[0].classList.contains('e-gridchkbox')) {\n      this.updateCheckBoxes(closest(cells[0], 'tr'));\n    }\n\n    var args = {\n      cells: cells,\n      data: data,\n      cellIndexes: cellIndexes,\n      foreignKeyData: foreignKeyData,\n      cancel: false\n    };\n    this.parent.trigger(type, args);\n    this.isPreventCellSelect = args[cancl];\n  };\n\n  Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n    if (!isNullOrUndefined(rowIndex)) {\n      this.addRowCellIndex({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    selectedCell.classList.add('e-cellselectionbackground');\n\n    if (selectedCell.classList.contains('e-gridchkbox')) {\n      this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n    }\n\n    this.addAttribute(selectedCell);\n  };\n\n  Selection.prototype.addAttribute = function (cell) {\n    this.target = cell;\n\n    if (!isNullOrUndefined(cell)) {\n      cell.setAttribute('aria-selected', 'true');\n\n      if (!this.preventFocus) {\n        this.focus.onClick({\n          target: cell\n        }, true);\n      }\n    }\n  };\n\n  Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n    this.prevCIdxs = startIndex;\n    this.prevECIdxs = endIndex;\n    this.isCellSelected = this.selectedRowCellIndexes.length && true;\n  };\n\n  Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n    var isRowAvail;\n    var index;\n\n    for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n      if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n        isRowAvail = true;\n        index = i;\n        break;\n      }\n    }\n\n    if (isRowAvail) {\n      if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n        this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n      }\n    } else {\n      this.selectedRowCellIndexes.push({\n        rowIndex: rowCellIndex.rowIndex,\n        cellIndexes: [rowCellIndex.cellIndex]\n      });\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   * @return {void}\n   */\n\n\n  Selection.prototype.clearCellSelection = function () {\n    if (this.isCellSelected) {\n      var gObj = this.parent;\n      var selectedCells = this.getSelectedCellsElement();\n      var rowCell = this.selectedRowCellIndexes;\n      var data = [];\n      var cells = [];\n      var foreignKeyData = [];\n      var currentViewData = this.getCurrentBatchRecordChanges();\n      var selectedTable = void 0;\n      var frzCols = gObj.getFrozenColumns();\n      this.hideAutoFill();\n\n      for (var i = 0, len = rowCell.length; i < len; i++) {\n        data.push(currentViewData[rowCell[i].rowIndex]);\n        var rowObj = this.getRowObj(rowCell[i].rowIndex);\n\n        for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n          if (frzCols) {\n            if (rowCell[i].cellIndexes[j] < frzCols) {\n              cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n            } else {\n              cells.push(gObj.getMovableCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n            }\n          } else {\n            if (rowObj.cells) {\n              foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n            }\n\n            cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          }\n        }\n      }\n\n      this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n\n      if (this.isPreventCellSelect === true) {\n        return;\n      }\n\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        selectedCells[i].classList.remove('e-cellselectionbackground');\n        selectedCells[i].removeAttribute('aria-selected');\n      }\n\n      if (this.bdrElement) {\n        this.showHideBorders('none');\n      }\n\n      this.selectedRowCellIndexes = [];\n      this.isCellSelected = false;\n\n      if (!this.isDragged && this.cellselected) {\n        this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n      }\n    }\n  };\n\n  Selection.prototype.getSelectedCellsElement = function () {\n    var gObj = this.parent;\n    var rows = gObj.getDataRows();\n    var mRows;\n\n    if (gObj.getFrozenColumns()) {\n      mRows = gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, mRows);\n    }\n\n    var cells = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      cells = cells.concat([].slice.call(rows[i].querySelectorAll('.e-cellselectionbackground')));\n    }\n\n    return cells;\n  };\n\n  Selection.prototype.mouseMoveHandler = function (e) {\n    e.preventDefault();\n    var gBRect = this.parent.element.getBoundingClientRect();\n    var x1 = this.x;\n    var y1 = this.y;\n    var position = getPosition(e);\n    var x2 = position.x - gBRect.left;\n    var y2 = position.y - gBRect.top;\n    var tmp;\n    var target = closest(e.target, 'tr');\n    this.isDragged = true;\n\n    if (!this.isCellDrag) {\n      if (!target) {\n        target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n      }\n\n      if (x1 > x2) {\n        tmp = x2;\n        x2 = x1;\n        x1 = tmp;\n      }\n\n      if (y1 > y2) {\n        tmp = y2;\n        y2 = y1;\n        y1 = tmp;\n      }\n\n      this.element.style.left = x1 + 'px';\n      this.element.style.top = y1 + 'px';\n      this.element.style.width = x2 - x1 + 'px';\n      this.element.style.height = y2 - y1 + 'px';\n    }\n\n    if (target && !e.ctrlKey && !e.shiftKey) {\n      var rowIndex = parseInt(target.getAttribute('aria-rowindex'), 10);\n\n      if (!this.isCellDrag) {\n        this.hideAutoFill();\n        this.selectRowsByRange(this.startDIndex, rowIndex);\n      } else {\n        var td = parentsUntil(e.target, 'e-rowcell');\n\n        if (td) {\n          this.startAFCell = this.startCell;\n          this.endAFCell = parentsUntil(e.target, 'e-rowcell');\n          this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute('aria-colindex'), 10));\n        }\n      }\n    }\n  };\n\n  Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n    if (!this.isAutoFillSel) {\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.drawBorders();\n    } else {\n      //Autofill\n      this.showAFBorders();\n      this.selectLikeAutoFill(e);\n    }\n  };\n\n  Selection.prototype.drawBorders = function () {\n    if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n      this.parent.element.classList.add('e-enabledboxbdr');\n\n      if (!this.bdrElement) {\n        this.createBorders();\n      }\n\n      this.positionBorders();\n    } else {\n      this.showHideBorders('none');\n    }\n  };\n\n  Selection.prototype.isLastCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[cells.length - 1] === cell;\n  };\n\n  Selection.prototype.isLastRow = function (cell) {\n    var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[rows.length - 1];\n  };\n\n  Selection.prototype.isFirstRow = function (cell) {\n    var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[0];\n  };\n\n  Selection.prototype.isFirstCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[0] === cell;\n  };\n\n  Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n    var cells = [].slice.call(parentEle.querySelectorAll('.e-cellselectionbackground')).filter(function (ele) {\n      return ele.style.display === '';\n    });\n\n    if (cells.length) {\n      var start = cells[0];\n      var end = cells[cells.length - 1];\n      var stOff = start.getBoundingClientRect();\n      var endOff = end.getBoundingClientRect();\n      var parentOff = start.offsetParent.getBoundingClientRect();\n      var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2') ? 2 : 0;\n      var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') && this.isFirstRow(start) ? 1.5 : 0;\n      var leftOffset = this.parent.getFrozenColumns() && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n\n      if (this.parent.enableRtl) {\n        border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n        border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n      } else {\n        border.style.left = stOff.left - parentOff.left - leftOffset + 'px';\n        border.style.width = endOff.right - stOff.left + leftOffset + 1 + 'px';\n      }\n\n      border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n      border.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' : endOff.height + topOffSet - rowHeight + 1 + 'px';\n      this.selectDirection += bdrStr;\n    } else {\n      border.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.positionBorders = function () {\n    this.updateStartEndCells();\n\n    if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n      return;\n    }\n\n    this.selectDirection = '';\n    this.showHideBorders('');\n    this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n\n    if (this.parent.getFrozenColumns()) {\n      this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n    }\n\n    if (this.parent.frozenRows) {\n      this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n\n      if (this.parent.getFrozenColumns()) {\n        this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n      }\n    }\n\n    this.applyBorders(this.selectDirection);\n  };\n\n  Selection.prototype.applyBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n\n    switch (str.length) {\n      case 4:\n        {\n          this.bdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n          this.mcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n          this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n          this.mhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n        }\n        break;\n\n      case 2:\n        {\n          this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? '2px 2px 2px 0' : '2px 0 2px 2px' : '0 2px 2px 2px';\n\n          if (this.parent.getFrozenColumns()) {\n            this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? '2px 0 2px 2px' : '2px 2px 2px 0' : '0 2px 2px 2px';\n          }\n\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = str.includes('1') ? '2px 2px 0 2px' : rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n\n            if (this.parent.getFrozenColumns()) {\n              this.mhBdrElement.style.borderWidth = str.includes('2') ? '2px 2px 0 2px' : rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n            }\n          }\n        }\n        break;\n\n      default:\n        this.bdrElement.style.borderWidth = '2px';\n\n        if (this.parent.getFrozenColumns()) {\n          this.mcBdrElement.style.borderWidth = '2px';\n        }\n\n        if (this.parent.frozenRows) {\n          this.fhBdrElement.style.borderWidth = '2px';\n\n          if (this.parent.getFrozenColumns()) {\n            this.mhBdrElement.style.borderWidth = '2px';\n          }\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.createBorders = function () {\n    if (!this.bdrElement) {\n      this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdr',\n        styles: 'width: 2px; border-width: 0;'\n      }));\n\n      if (this.parent.getFrozenColumns()) {\n        this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mcbdr',\n          styles: 'height: 2px; border-width: 0;'\n        }));\n      }\n\n      if (this.parent.frozenRows) {\n        this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_fhbdr',\n          styles: 'height: 2px;'\n        }));\n      }\n\n      if (this.parent.frozenRows && this.parent.getFrozenColumns()) {\n        this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mhbdr',\n          styles: 'height: 2px;'\n        }));\n      }\n    }\n  };\n\n  Selection.prototype.showHideBorders = function (display) {\n    if (this.bdrElement) {\n      this.bdrElement.style.display = display;\n\n      if (this.parent.getFrozenColumns()) {\n        this.mcBdrElement.style.display = display;\n      }\n\n      if (this.parent.frozenRows) {\n        this.fhBdrElement.style.display = display;\n      }\n\n      if (this.parent.frozenRows && this.parent.getFrozenColumns()) {\n        this.mhBdrElement.style.display = display;\n      }\n    }\n  };\n\n  Selection.prototype.drawAFBorders = function () {\n    if (!this.bdrAFBottom) {\n      this.createAFBorders();\n    }\n\n    this.positionAFBorders();\n  };\n\n  Selection.prototype.positionAFBorders = function () {\n    if (!this.startCell || !this.bdrAFLeft) {\n      return;\n    }\n\n    var stOff = this.startAFCell.getBoundingClientRect();\n    var endOff = this.endAFCell.getBoundingClientRect();\n    var top = endOff.top - stOff.top > 0 ? 1 : 0;\n    var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, 'e-movablecontent') || parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n    var firstCellLeft = (parentsUntil(this.startAFCell, 'e-movablecontent') || parentsUntil(this.startAFCell, 'e-movableheader')) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n    var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, 'e-movablecontent') || parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n    var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n    var parentRect = this.parent.element.getBoundingClientRect();\n    var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n    var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n    var scrollTop = sTop - this.startAFCell.offsetTop;\n    var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n    scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n    scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n    var left = stOff.left - parentRect.left;\n\n    if (!this.parent.enableRtl) {\n      this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n      this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n      this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10) - firstCellLeft + 1 + 'px';\n    } else {\n      var scrolloffSet = parentsUntil(this.startAFCell, 'e-movablecontent') || parentsUntil(this.startAFCell, 'e-movableheader') ? stOff.right - this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width - parentRect.left : 0;\n      this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n      this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n      this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10) - firstCellLeft + 1 + 'px';\n    }\n\n    this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n    this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' : endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n    this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n    this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n    this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n    this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n    this.bdrAFBottom.style.width = this.bdrAFTop.style.width;\n  };\n\n  Selection.prototype.createAFBorders = function () {\n    if (!this.bdrAFLeft) {\n      this.bdrAFLeft = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafleft',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFRight = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafright',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFBottom = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafbottom',\n        styles: 'height: 2px;'\n      }));\n      this.bdrAFTop = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdraftop',\n        styles: 'height: 2px;'\n      }));\n    }\n  };\n\n  Selection.prototype.showAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = '';\n      this.bdrAFRight.style.display = '';\n      this.bdrAFBottom.style.display = '';\n      this.bdrAFTop.style.display = '';\n    }\n  };\n\n  Selection.prototype.hideAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = 'none';\n      this.bdrAFRight.style.display = 'none';\n      this.bdrAFBottom.style.display = 'none';\n      this.bdrAFTop.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n    var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n\n    if (!args.cancel) {\n      var col = this.parent.getColumnByIndex(cIdx);\n\n      if (this.parent.editModule && cell) {\n        if (col.type === 'number') {\n          this.parent.editModule.updateCell(rIdx, col.field, parseInt(args.value, 10));\n        } else {\n          this.parent.editModule.updateCell(rIdx, col.field, args.value);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n    var col = this.parent.getColumnByIndex(colIndex);\n    var args = {\n      column: col,\n      value: cell.innerText\n    };\n    this.parent.trigger(events.beforeAutoFill, args);\n    return args;\n  };\n\n  Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n    var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll('.e-cellselectionbackground'));\n\n    if (this.parent.getFrozenColumns()) {\n      cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll('.e-cellselectionbackground')));\n    }\n\n    return cells;\n  };\n  /* tslint:disable-next-line:max-func-body-length */\n\n\n  Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n    var startrowIdx = parseInt(parentsUntil(this.startAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n    var startCellIdx = parseInt(this.startAFCell.getAttribute('aria-colindex'), 10);\n    var endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n    var endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n    var rowLen = this.selectedRowCellIndexes.length - 1;\n    var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n    var col;\n\n    switch (true) {\n      //direction         \n      case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') && !!parentsUntil(e.target, 'e-rowcell'):\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n        this.drawAFBorders();\n        break;\n\n      case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n      endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n      && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx:\n        //right top\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n        endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var cellIdx = parseInt(this.endCell.getAttribute('aria-colindex'), 10);\n\n          for (var i = startrowIdx; i <= endrowIdx; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            var c = 0;\n\n            for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: this.startCellIndex\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: endCellIdx\n          });\n        }\n\n        break;\n\n      case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n      startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n      startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx:\n        // left bottom\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            cells.reverse();\n            var c = 0;\n\n            for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: endCellIdx\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: this.startCellIndex + colLen\n          });\n        }\n\n        break;\n\n      case startrowIdx > endrowIdx:\n        //up\n        this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n          var r = trIdx;\n\n          for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n            if (r === this.startIndex - 1) {\n              r = trIdx;\n            }\n\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            var c = 0;\n            r--;\n\n            for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: startCellIdx\n          });\n        }\n\n        break;\n\n      default:\n        //down\n        this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n          var r = this.startIndex;\n\n          for (var i = trIdx + 1; i <= endrowIdx; i++) {\n            if (r === trIdx + 1) {\n              r = this.startIndex;\n            }\n\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            r++;\n            var c = 0;\n\n            for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n              this.updateValue(i, m, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: trIdx - rowLen,\n            cellIndex: startCellIdx\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          });\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.mouseUpHandler = function (e) {\n    document.body.classList.remove('e-disableuserselect');\n\n    if (this.element) {\n      remove(this.element);\n    }\n\n    if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n      this.mUPTarget = parentsUntil(e.target, 'e-rowcell');\n    } else {\n      this.mUPTarget = null;\n    }\n\n    if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell') {\n      var target = e.target;\n      var rowIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n      var cellIndex = parseInt(target.getAttribute('aria-colindex'), 10);\n      this.isDragged = false;\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isDragged = false;\n    this.updateAutoFillPosition();\n\n    if (this.isAutoFillSel) {\n      var lastCell = parentsUntil(e.target, 'e-rowcell');\n      this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n      this.startAFCell = this.startCell;\n      this.updateStartCellsIndex();\n      this.selectLikeAutoFill(e, true);\n      this.updateAutoFillPosition();\n      this.hideAFBorders();\n      this.positionBorders();\n      this.isAutoFillSel = false;\n    }\n\n    EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n\n    if (this.parent.frozenRows) {\n      EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n    }\n\n    EventHandler.remove(document.body, 'mouseup', this.mouseUpHandler);\n  };\n\n  Selection.prototype.hideAutoFill = function () {\n    if (this.autofill) {\n      this.autofill.style.display = 'none';\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.updateAutoFillPosition = function () {\n    if (this.parent.enableAutoFill && !this.parent.isEdit && this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel() && this.selectedRowCellIndexes.length) {\n      var frzCols = this.parent.getFrozenColumns();\n      var index = parseInt(this.target.getAttribute('aria-colindex'), 10);\n      var rindex = parseInt(this.target.getAttribute('index'), 10);\n      var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n      var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) {\n        return ele.style.display === '';\n      });\n      var isFrozenCol = void 0;\n      var isFrozenRow = void 0;\n\n      if (frzCols && index >= frzCols) {\n        isFrozenCol = true;\n      }\n\n      if (rindex < this.parent.frozenRows) {\n        isFrozenRow = true;\n      }\n\n      if (!parentsUntil(this.target, 'e-table').querySelector('#' + this.parent.element.id + '_autofill')) {\n        if (this.parent.element.querySelector('#' + this.parent.element.id + '_autofill')) {\n          this.parent.element.querySelector('#' + this.parent.element.id + '_autofill').remove();\n        }\n\n        this.autofill = createElement('div', {\n          className: 'e-autofill',\n          id: this.parent.element.id + '_autofill'\n        });\n        this.autofill.style.display = 'none';\n        !isFrozenRow ? !isFrozenCol ? this.parent.getContentTable().parentElement.appendChild(this.autofill) : this.parent.contentModule.getMovableContent().appendChild(this.autofill) : !isFrozenCol ? this.parent.getHeaderTable().parentElement.appendChild(this.autofill) : this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n      }\n\n      var cell = cells[cells.length - 1];\n\n      if (cell && cell.offsetParent) {\n        var clientRect = cell.getBoundingClientRect();\n        var parentOff = cell.offsetParent.getBoundingClientRect();\n        var colWidth = this.isLastCell(cell) ? 4 : 0;\n        var rowHeight = this.isLastRow(cell) ? 3 : 0;\n\n        if (!this.parent.enableRtl) {\n          this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n        } else {\n          this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n        }\n\n        this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n      }\n\n      this.autofill.style.display = '';\n    } else {\n      this.hideAutoFill();\n    }\n  };\n\n  Selection.prototype.mouseDownHandler = function (e) {\n    this.mouseButton = e.button;\n    var target = e.target;\n    var gObj = this.parent;\n    var isDrag;\n    var gridElement = parentsUntil(target, 'e-grid');\n\n    if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, 'e-headercontent') && !this.parent.frozenRows) {\n      return;\n    }\n\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n\n    if (parentsUntil(target, 'e-rowcell') && !e.shiftKey && !e.ctrlKey) {\n      if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n        this.isCellDrag = true;\n        isDrag = true;\n      } else if (gObj.allowRowDragAndDrop && !gObj.isEdit) {\n        if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n          this.isDragged = false;\n          return;\n        }\n\n        isDrag = true;\n        this.element = this.parent.createElement('div', {\n          className: 'e-griddragarea'\n        });\n        gObj.getContent().appendChild(this.element);\n      }\n\n      if (isDrag) {\n        this.enableDrag(e, true);\n      }\n    }\n\n    this.updateStartEndCells();\n\n    if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n      this.isCellDrag = true;\n      this.isAutoFillSel = true;\n      this.enableDrag(e);\n    }\n  };\n\n  Selection.prototype.updateStartEndCells = function () {\n    var cells = [].slice.call(this.parent.element.querySelectorAll('.e-cellselectionbackground'));\n    this.startCell = cells[0];\n    this.endCell = cells[cells.length - 1];\n\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n  };\n\n  Selection.prototype.updateStartCellsIndex = function () {\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n  };\n\n  Selection.prototype.enableDrag = function (e, isUpdate) {\n    var gObj = this.parent;\n\n    if (isUpdate) {\n      var tr = closest(e.target, 'tr');\n      this.startDIndex = parseInt(tr.getAttribute('aria-rowindex'), 10);\n      this.startDCellIndex = parseInt(parentsUntil(e.target, 'e-rowcell').getAttribute('aria-colindex'), 10);\n    }\n\n    document.body.classList.add('e-disableuserselect');\n    var gBRect = gObj.element.getBoundingClientRect();\n    var postion = getPosition(e);\n    this.x = postion.x - gBRect.left;\n    this.y = postion.y - gBRect.top;\n    EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n\n    if (this.parent.frozenRows) {\n      EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n    }\n\n    EventHandler.add(document.body, 'mouseup', this.mouseUpHandler, this);\n  };\n\n  Selection.prototype.clearSelAfterRefresh = function (e) {\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n      this.clearSelection();\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n    this.parent.on(events.initialEnd, this.initializeSelection, this);\n    this.parent.on(events.rowSelectionComplete, this.onActionComplete, this);\n    this.parent.on(events.cellSelectionComplete, this.onActionComplete, this);\n    this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n    this.parent.on(events.cellFocused, this.onCellFocused, this);\n    this.parent.on(events.beforeFragAppend, this.clearSelAfterRefresh, this);\n    this.parent.on(events.columnPositionChanged, this.columnPositionChanged, this);\n    this.parent.on(events.contentReady, this.initialEnd, this);\n    this.actionBeginFunction = this.actionBegin.bind(this);\n    this.actionCompleteFunction = this.actionComplete.bind(this);\n    this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.parent.on(events.rowsRemoved, this.rowsRemoved, this);\n    this.parent.on(events.headerRefreshed, this.refreshHeader, this);\n    this.addEventListener_checkbox();\n  };\n  /**\n   * @hidden\n   */\n\n\n  Selection.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off(events.uiUpdate, this.enableAfterRender);\n    this.parent.off(events.initialEnd, this.initializeSelection);\n    this.parent.off(events.rowSelectionComplete, this.onActionComplete);\n    this.parent.off(events.cellSelectionComplete, this.onActionComplete);\n    this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n    this.parent.off(events.cellFocused, this.onCellFocused);\n    this.parent.off(events.beforeFragAppend, this.clearSelAfterRefresh);\n    this.parent.off(events.columnPositionChanged, this.columnPositionChanged);\n    this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.parent.off(events.rowsRemoved, this.rowsRemoved);\n    this.parent.off(events.headerRefreshed, this.refreshHeader);\n    this.removeEventListener_checkbox();\n  };\n\n  Selection.prototype.wireEvents = function () {\n    this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n\n    if (this.isMacOS) {\n      EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n      EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n    }\n  };\n\n  Selection.prototype.unWireEvents = function () {\n    if (this.isMacOS) {\n      EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n      EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n    }\n  };\n\n  Selection.prototype.columnPositionChanged = function () {\n    if (!this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  Selection.prototype.refreshHeader = function () {\n    this.setCheckAllState();\n  };\n\n  Selection.prototype.rowsRemoved = function (e) {\n    for (var i = 0; i < e.records.length; i++) {\n      delete this.selectedRowState[e.records[i][this.primaryKey]];\n      --this.totalRecordsCount;\n    }\n\n    this.setCheckAllState();\n  };\n\n  ;\n\n  Selection.prototype.beforeFragAppend = function (e) {\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  ;\n\n  Selection.prototype.getCheckAllBox = function () {\n    return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n  };\n\n  Selection.prototype.enableAfterRender = function (e) {\n    if (e.module === this.getModuleName() && e.enable) {\n      this.render();\n      this.initPerisistSelection();\n    }\n  };\n\n  Selection.prototype.render = function (e) {\n    EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n    EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n  };\n\n  Selection.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n      if (this.selectedRowCellIndexes.length > 1) {\n        this.clearCellSelection();\n        this.prevCIdxs = undefined;\n      }\n\n      if (this.selectedRowIndexes.length > 1) {\n        this.clearRowSelection();\n        this.prevRowIndex = undefined;\n      }\n\n      this.enableSelectMultiTouch = false;\n      this.hidePopUp();\n    }\n\n    if (!isNullOrUndefined(e.properties.mode) || !isNullOrUndefined(e.properties.cellSelectionMode)) {\n      this.clearSelection();\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n    }\n\n    this.isPersisted = true;\n    this.checkBoxSelectionChanged();\n    this.isPersisted = false;\n    this.initPerisistSelection();\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length) {\n      gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n    }\n\n    this.drawBorders();\n  };\n\n  Selection.prototype.hidePopUp = function () {\n    if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-rowselect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.initialEnd = function () {\n    this.parent.off(events.contentReady, this.initialEnd);\n    this.selectRow(this.parent.selectedRowIndex);\n  };\n\n  Selection.prototype.checkBoxSelectionChanged = function () {\n    this.parent.off(events.contentReady, this.checkBoxSelectionChanged);\n    var gobj = this.parent;\n    var checkboxColumn = gobj.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length > 0) {\n      gobj.isCheckBoxSelection = true;\n      this.chkField = checkboxColumn[0].field;\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n\n      if (isNullOrUndefined(this.totalRecordsCount)) {\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      if (this.isSingleSel()) {\n        gobj.selectionSettings.type = 'Multiple';\n        gobj.dataBind();\n      } else {\n        this.initPerisistSelection();\n      }\n    }\n\n    if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n      this.chkField = null;\n      this.initPerisistSelection();\n    }\n  };\n\n  Selection.prototype.initPerisistSelection = function () {\n    var gobj = this.parent;\n\n    if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = true;\n      this.ensureCheckboxFieldSelection();\n    } else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = false;\n      this.ensureCheckboxFieldSelection();\n    } else {\n      gobj.isPersistSelection = false;\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.ensureCheckboxFieldSelection = function () {\n    var gobj = this.parent;\n    this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n    if (!gobj.enableVirtualization && this.chkField && (gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0 || !gobj.isPersistSelection)) {\n      var data = this.parent.getDataModule();\n      var query = new Query().where(this.chkField, 'equal', true);\n\n      if (!query.params) {\n        query.params = this.parent.query.params;\n      }\n\n      var dataManager = data.getData({}, query);\n      var proxy_1 = this;\n      this.parent.showSpinner();\n      dataManager.then(function (e) {\n        proxy_1.dataSuccess(e.result);\n        proxy_1.refreshPersistSelection();\n        proxy_1.parent.hideSpinner();\n      });\n    }\n  };\n\n  Selection.prototype.dataSuccess = function (res) {\n    for (var i = 0; i < res.length; i++) {\n      if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n        this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n      }\n    }\n\n    this.persistSelectedData = res;\n  };\n\n  Selection.prototype.setRowSelection = function (state) {\n    if (!this.parent.getDataModule().isRemote() && !isBlazor()) {\n      if (state) {\n        if (this.parent.groupSettings.columns.length) {\n          for (var _i = 0, _a = this.getData().records; _i < _a.length; _i++) {\n            var data = _a[_i];\n            this.selectedRowState[data[this.primaryKey]] = true;\n          }\n        } else {\n          for (var _b = 0, _c = this.getData(); _b < _c.length; _b++) {\n            var data = _c[_b];\n            this.selectedRowState[data[this.primaryKey]] = true;\n          }\n        }\n      } else {\n        this.selectedRowState = {};\n      } // (this.getData()).forEach(function (data) {\n      //     this.selectedRowState[data[this.primaryKey]] = true;\n      // })\n\n    }\n  };\n\n  Selection.prototype.getData = function () {\n    return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n  };\n\n  Selection.prototype.refreshPersistSelection = function () {\n    var rows = this.parent.getRows();\n\n    if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n      var indexes = [];\n\n      for (var j = 0; j < rows.length; j++) {\n        var rowObj = this.getRowObj(rows[j]);\n        var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n\n        if (pKey === null) {\n          return;\n        }\n\n        var checkState = void 0;\n        var chkBox = rows[j].querySelector('.e-checkselect');\n\n        if (this.selectedRowState[pKey] || this.parent.checkAllRows === 'Check' && this.chkAllCollec.indexOf(pKey) < 0 || this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0 || this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField]) {\n          indexes.push(parseInt(rows[j].getAttribute('aria-rowindex'), 10));\n          checkState = true;\n        } else {\n          checkState = false;\n\n          if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection) {\n            removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n          }\n        }\n\n        this.updatePersistCollection(rows[j], checkState);\n      }\n\n      this.isSingleSel() && indexes.length > 0 ? this.selectRow(indexes[0], true) : this.selectRows(indexes);\n    }\n\n    if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n  };\n\n  Selection.prototype.actionBegin = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        var row = closest(editChkBox, '.e-editedrow');\n\n        if (row) {\n          if (this.parent.editSettings.mode === 'Dialog') {\n            row = this.parent.element.querySelector('.e-dlgeditrow');\n          }\n\n          var rowObj = this.getRowObj(row);\n\n          if (!rowObj) {\n            return;\n          }\n\n          this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n        } else {\n          this.isCheckedOnAdd = editChkBox.checked;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.actionComplete = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      if (e.action === 'add' && this.isCheckedOnAdd) {\n        var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n        this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n      }\n\n      this.refreshPersistSelection();\n    }\n\n    if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n      var records = [];\n\n      if (!isBlazor()) {\n        records = e.data;\n      } else {\n        records = this.getSelectedRecords();\n      }\n\n      var data = records.slice();\n\n      for (var i = 0; i < data.length; i++) {\n        if (!isNullOrUndefined(data[i][this.primaryKey])) {\n          this.updatePersistDelete(data[i][this.primaryKey]);\n        }\n      }\n\n      this.setCheckAllState();\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    if (e.requestType === 'paging') {\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevECIdxs = undefined;\n    }\n  };\n\n  Selection.prototype.onDataBound = function () {\n    if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n\n    if (this.parent.enableVirtualization) {\n      this.setCheckAllState();\n    }\n  };\n\n  Selection.prototype.updatePersistSelectedData = function (checkState) {\n    if (this.parent.isPersistSelection) {\n      var rows = this.parent.getRows();\n\n      for (var i = 0; i < rows.length; i++) {\n        this.updatePersistCollection(rows[i], checkState);\n      }\n\n      if (this.parent.checkAllRows === 'Uncheck') {\n        this.setRowSelection(false);\n        this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n      } else if (this.parent.checkAllRows === 'Check') {\n        this.setRowSelection(true);\n        this.persistSelectedData = !this.parent.getDataModule().isRemote() && !isBlazor() ? this.parent.groupSettings.columns.length ? this.getData().records.slice() : this.getData().slice() : this.persistSelectedData;\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAllAction = function (checkState) {\n    var cRenderer = this.getRenderer();\n    var editForm = this.parent.element.querySelector('.e-gridform');\n    this.checkedTarget = this.getCheckAllBox();\n\n    if (checkState && this.getCurrentBatchRecordChanges().length) {\n      this.parent.checkAllRows = 'Check';\n      this.updatePersistSelectedData(checkState);\n\n      if (isBlazor() && this.parent.enableVirtualization && !isNullOrUndefined(this.parent.contentModule.currentInfo.endIndex)) {\n        this.selectRowsByRange(this.parent.contentModule.currentInfo.startIndex, this.parent.contentModule.currentInfo.endIndex);\n      } else {\n        this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n      }\n    } else {\n      this.parent.checkAllRows = 'Uncheck';\n      this.updatePersistSelectedData(checkState);\n      this.clearSelection();\n    }\n\n    this.chkAllCollec = [];\n\n    if (!isNullOrUndefined(editForm)) {\n      var editChkBox = editForm.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAll = function (checkBox) {\n    var _this = this;\n\n    var stateStr = this.getCheckAllStatus(checkBox);\n    var state = stateStr === 'Check';\n    this.isHeaderCheckboxClicked = true;\n\n    if (stateStr === 'Intermediate') {\n      state = this.getCurrentBatchRecordChanges().some(function (data) {\n        return data[_this.primaryKey] in _this.selectedRowState;\n      });\n    }\n\n    if (this.parent.isPersistSelection && this.parent.allowPaging) {\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    this.checkSelectAllAction(!state);\n\n    if (isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization) {\n      var interopAdaptor = 'interopAdaptor';\n      var invokeMethodAsync = 'invokeMethodAsync';\n      this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', !state, 'checkbox', null);\n      this.checkBoxState = !state;\n\n      if (!state) {\n        var values = 'values';\n        var vgenerator = 'vgenerator';\n        var rowCache = this.parent.contentModule[vgenerator].rowCache;\n        Object[values](rowCache).forEach(function (x) {\n          return x.isSelected = true;\n        });\n\n        for (var i = 0; i < Object.keys(rowCache).length; i++) {\n          if (this.parent.selectionModule.selectedRowIndexes.indexOf(Number(Object.keys(rowCache)[i])) === -1) {\n            this.parent.selectionModule.selectedRowIndexes.push(Number(Object.keys(rowCache)[i]));\n          }\n        }\n      }\n    }\n\n    this.target = null;\n\n    if (this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n\n    this.triggerChkChangeEvent(checkBox, !state);\n  };\n\n  Selection.prototype.getCheckAllStatus = function (ele) {\n    var classes = ele ? ele.nextElementSibling.classList : this.getCheckAllBox().nextElementSibling.classList;\n    var status;\n\n    if (classes.contains('e-check')) {\n      status = 'Check';\n    } else if (classes.contains('e-uncheck')) {\n      status = 'Uncheck';\n    } else if (classes.contains('e-stop')) {\n      status = 'Intermediate';\n    } else {\n      status = 'None';\n    }\n\n    return status;\n  };\n\n  Selection.prototype.checkSelect = function (checkBox) {\n    var target = closest(this.checkedTarget, '.e-rowcell');\n    var checkObj = checkBox;\n    var gObj = this.parent;\n    this.isMultiCtrlRequest = true;\n    var rIndex = 0;\n    this.isHeaderCheckboxClicked = false;\n\n    if (isGroupAdaptive(gObj)) {\n      var uid = target.parentElement.getAttribute('data-uid');\n      rIndex = gObj.getRows().map(function (m) {\n        return m.getAttribute('data-uid');\n      }).indexOf(uid);\n    } else {\n      rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n    }\n\n    if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n      ++rIndex;\n    }\n\n    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n    this.moveIntoUncheckCollection(closest(target, '.e-row'));\n    this.setCheckAllState();\n    this.isMultiCtrlRequest = false;\n    this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n  };\n\n  Selection.prototype.moveIntoUncheckCollection = function (row) {\n    if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n      var rowObj = this.getRowObj(row);\n      var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (!pKey) {\n        return;\n      }\n\n      if (this.chkAllCollec.indexOf(pKey) < 0) {\n        this.chkAllCollec.push(pKey);\n      } else {\n        this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n      }\n    }\n  };\n\n  Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n    this.parent.trigger(events.checkBoxChange, {\n      checked: checkState,\n      selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n      target: checkBox\n    });\n\n    if (!this.parent.isEdit) {\n      this.checkedTarget = null;\n    }\n  };\n\n  Selection.prototype.updateSelectedRowIndex = function (index) {\n    if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.getDataModule().isRemote() && !(isBlazor() && this.parent.isServerRendered)) {\n      if (this.parent.checkAllRows === 'Check') {\n        this.selectedRowIndexes = [];\n        var dataLength = this.getData().length;\n\n        for (var data = 0; data < dataLength; data++) {\n          this.selectedRowIndexes.push(data);\n        }\n      } else if (this.parent.checkAllRows === 'Uncheck') {\n        this.selectedRowIndexes = [];\n      } else {\n        if (index && this.parent.getRowByIndex(index).getAttribute('aria-selected') === 'false') {\n          var selectedVal = this.selectedRowIndexes.indexOf(index);\n          this.selectedRowIndexes.splice(selectedVal, 1);\n        }\n      }\n    }\n  };\n\n  ;\n\n  Selection.prototype.setCheckAllState = function (index, isInteraction) {\n    if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      var checkToSelectAll = void 0;\n      var isServerRenderedVirtualization = isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization;\n\n      if (isServerRenderedVirtualization) {\n        var values = 'values';\n        var vgenerator = 'vgenerator';\n        checkToSelectAll = !Object[values](this.parent.contentModule[vgenerator].rowCache).filter(function (x) {\n          return x.isSelected === undefined || x.isSelected === false;\n        }).length && Object[values](this.parent.contentModule[vgenerator].rowCache).filter(function (x) {\n          return x.isSelected;\n        }).length === this.selectedRowIndexes.length;\n      }\n\n      var checkedLen = Object.keys(this.selectedRowState).length;\n\n      if (!this.parent.isPersistSelection && !isServerRenderedVirtualization) {\n        checkedLen = this.selectedRowIndexes.length;\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      if (this.getCheckAllBox()) {\n        var spanEle = this.getCheckAllBox().nextElementSibling;\n        removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n\n        if (checkToSelectAll || checkedLen === this.totalRecordsCount && this.totalRecordsCount || (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote() && !(isBlazor() && this.parent.isServerRendered) && checkedLen === this.getData().length) {\n          addClass([spanEle], ['e-check']);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, true, true);\n          }\n\n          this.parent.checkAllRows = 'Check';\n        } else if (isServerRenderedVirtualization && !this.selectedRowIndexes.length || checkedLen === 0 && !isServerRenderedVirtualization || this.getCurrentBatchRecordChanges().length === 0) {\n          addClass([spanEle], ['e-uncheck']);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, false, true);\n          }\n\n          this.parent.checkAllRows = 'Uncheck';\n\n          if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n            addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          } else {\n            removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          }\n        } else {\n          addClass([spanEle], ['e-stop']);\n          this.parent.checkAllRows = 'Intermediate';\n        }\n\n        if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n          this.updateSelectedRowIndex(index);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.keyDownHandler = function (e) {\n    // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = true;\n    }\n  };\n\n  Selection.prototype.keyUpHandler = function (e) {\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = false;\n    }\n  };\n\n  Selection.prototype.clickHandler = function (e) {\n    var target = e.target;\n    this.actualTarget = target;\n\n    if (parentsUntil(target, 'e-row') || parentsUntil(target, 'e-headerchkcelldiv')) {\n      this.isInteracted = true;\n    }\n\n    this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch || this.isMacOS && this.cmdKeyPressed;\n    this.isMultiShiftRequest = e.shiftKey;\n    this.popUpClickHandler(e);\n    var chkSelect = false;\n    this.preventFocus = true;\n    var checkBox;\n    var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n    this.checkSelectAllClicked = checkWrap && checkWrap.querySelectorAll('.e-checkselectall') ? true : false;\n\n    if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n      checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n      chkSelect = true;\n    }\n\n    this.drawBorders();\n    this.updateAutoFillPosition();\n    target = parentsUntil(target, 'e-rowcell');\n\n    if (target && target.parentElement.classList.contains('e-row') && !this.parent.selectionSettings.checkboxOnly || chkSelect) {\n      if (this.parent.isCheckBoxSelection) {\n        this.isMultiCtrlRequest = true;\n      }\n\n      this.target = target;\n\n      if (!isNullOrUndefined(checkBox)) {\n        this.checkedTarget = checkBox;\n\n        if (checkBox.classList.contains('e-checkselectall')) {\n          this.checkSelectAll(checkBox);\n        } else {\n          this.checkSelect(checkBox);\n        }\n      } else {\n        var gObj = this.parent;\n        var rIndex = 0;\n\n        if (isGroupAdaptive(gObj)) {\n          var uid = target.parentElement.getAttribute('data-uid');\n          rIndex = gObj.getRows().map(function (m) {\n            return m.getAttribute('data-uid');\n          }).indexOf(uid);\n        } else {\n          rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n        }\n\n        if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n          ++rIndex;\n        }\n\n        if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n          this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n        }\n\n        this.parent.hoverFrozenRows(e);\n\n        if (this.parent.isCheckBoxSelection) {\n          this.moveIntoUncheckCollection(closest(target, '.e-row'));\n          this.setCheckAllState();\n        }\n      }\n\n      if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n        this.showPopup(e);\n      }\n    }\n\n    this.isMultiCtrlRequest = false;\n    this.isMultiShiftRequest = false;\n\n    if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n      this.preventFocus = false;\n    }\n  };\n\n  Selection.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n\n    if (closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-rowselect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSelectMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSelectMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.showPopup = function (e) {\n    if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' + (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1) || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n    }\n  };\n\n  Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      if (!this.isDragged) {\n        this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n      }\n\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, this.selectionSettings.enableToggle);\n\n      if (this.selectedRowCellIndexes.length) {\n        this.updateAutoFillPosition();\n      }\n\n      this.drawBorders();\n    } else if (this.isMultiShiftRequest) {\n      if (this.parent.isCheckBoxSelection || !this.parent.isCheckBoxSelection && !closest(this.target, '.e-rowcell').classList.contains('e-gridchkbox')) {\n        this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n      } else {\n        this.addRowsToSelection([rowIndex]);\n      }\n\n      this.selectCellsByRange(isUndefined(this.prevCIdxs) ? {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      } : this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.updateAutoFillPosition();\n      this.drawBorders();\n    } else {\n      this.addRowsToSelection([rowIndex]);\n\n      if (isBlazor() && this.parent.enableVirtualization && this.parent.isServerRendered) {\n        var rowIndexes = this.parent.getSelectedRowIndexes();\n        var interopAdaptor = 'interopAdaptor';\n        var invokeMethodAsync = 'invokeMethodAsync';\n        this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', true, 'normal', rowIndexes);\n      }\n\n      this.addCellsToSelection([{\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }]);\n      this.showHideBorders('none');\n    }\n\n    this.isDragged = false;\n  };\n\n  Selection.prototype.onCellFocused = function (e) {\n    if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n      if (e.keyArgs.action === 'upArrow') {\n        if (this.parent.allowFiltering) {\n          e.isJump = e.element.tagName === 'INPUT' ? true : false;\n        } else {\n          e.isJump = e.element.tagName === 'TH' ? true : false;\n        }\n      } else {\n        if (e.keyArgs.action === 'downArrow') {\n          var rIdx = Number(e.element.parentElement.getAttribute('aria-rowindex'));\n          e.isJump = rIdx === 0 ? true : false;\n        } else {\n          if (e.keyArgs.action === 'ctrlHome') {\n            e.isJump = true;\n          }\n        }\n      }\n    }\n\n    var clear = this.parent.getFrozenColumns() ? (e.container.isHeader && e.element.tagName !== 'TD' && e.isJump || (e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')) && !(e.byKey && e.keyArgs.action === 'space') : (e.container.isHeader && e.isJump || e.container.isContent && !e.container.isSelectable) && !(e.byKey && e.keyArgs.action === 'space');\n    var headerAction = e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.e-rowcell') && !(e.byKey && e.keyArgs.action === 'space');\n\n    if (!e.byKey || clear) {\n      if (clear && !this.parent.isCheckBoxSelection) {\n        this.clearSelection();\n      }\n\n      return;\n    }\n\n    var _a = e.container.isContent ? e.container.indexes : e.indexes,\n        rowIndex = _a[0],\n        cellIndex = _a[1];\n\n    var prev = this.focus.getPrevIndexes();\n\n    if (this.parent.frozenRows) {\n      if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.e-rowcell'))) {\n        var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n        rowIndex -= thLen;\n        prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n      } else {\n        rowIndex += this.parent.frozenRows;\n        prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n      }\n    }\n\n    if (this.parent.getFrozenColumns()) {\n      var cIdx = Number(e.element.getAttribute('aria-colindex'));\n      var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n\n      if (selectedIndexes.length && prev.cellIndex === 0) {\n        prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n      }\n\n      prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? prev.cellIndex === cellIndex ? cIdx : cIdx - 1 : null;\n      cellIndex = cIdx;\n    }\n\n    if (headerAction || ['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 && e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex) {\n      return;\n    }\n\n    this.preventFocus = true;\n\n    switch (e.keyArgs.action) {\n      case 'downArrow':\n      case 'upArrow':\n      case 'enter':\n      case 'shiftEnter':\n        this.target = e.element;\n        this.applyDownUpKey(rowIndex, cellIndex);\n        break;\n\n      case 'rightArrow':\n      case 'leftArrow':\n        this.applyRightLeftKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftDown':\n      case 'shiftUp':\n        this.shiftDownKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftLeft':\n      case 'shiftRight':\n        this.applyShiftLeftRightKey(rowIndex, cellIndex);\n        break;\n\n      case 'home':\n      case 'end':\n        cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n        this.applyHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'ctrlHome':\n      case 'ctrlEnd':\n        this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'escape':\n        this.clearSelection();\n        break;\n\n      case 'ctrlPlusA':\n        this.ctrlPlusA();\n        break;\n\n      case 'space':\n        this.applySpaceSelection(e.element);\n        break;\n\n      case 'tab':\n        if (this.parent.editSettings.allowNextRowEdit) {\n          this.selectRow(rowIndex);\n        }\n\n        break;\n    }\n\n    this.preventFocus = false;\n    this.positionBorders();\n    this.updateAutoFillPosition();\n  };\n  /**\n   * Apply ctrl + A key selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.ctrlPlusA = function () {\n    if (this.isRowType() && !this.isSingleSel()) {\n      this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange({\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: this.parent.getRows().length - 1,\n        cellIndex: this.parent.getColumns().length - 1\n      });\n    }\n  };\n\n  Selection.prototype.applySpaceSelection = function (target) {\n    if (target.classList.contains('e-checkselectall')) {\n      this.checkedTarget = target;\n      this.checkSelectAll(this.checkedTarget);\n    } else {\n      if (target.classList.contains('e-checkselect')) {\n        this.checkedTarget = target;\n        this.checkSelect(this.checkedTarget);\n      }\n    }\n  };\n\n  Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n      this.checkSelectAllAction(false);\n      this.checkedTarget = null;\n    }\n\n    if (this.isRowType()) {\n      if (this.parent.frozenRows) {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      } else {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      }\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n  };\n\n  Selection.prototype.applyUpDown = function (rowIndex) {\n    if (rowIndex < 0) {\n      return;\n    }\n\n    if (!this.target) {\n      this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n    }\n\n    var cIndex = parseInt(this.target.getAttribute('aria-colindex'), 10);\n    var frzCols = this.parent.getFrozenColumns();\n\n    if (frzCols) {\n      if (cIndex >= frzCols) {\n        this.target = this.contentRenderer.getMovableRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex - frzCols];\n      } else {\n        this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n      }\n    } else {\n      this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n    }\n\n    this.addAttribute(this.target);\n  };\n\n  Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n      this.addAttribute(this.target);\n    }\n  };\n\n  Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    } else {\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n  };\n  /**\n   * Apply shift+down key selection\n   * @return {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n    this.isMultiShiftRequest = true;\n\n    if (this.isRowType() && !this.isSingleSel()) {\n      if (!isUndefined(this.prevRowIndex)) {\n        this.selectRowsByRange(this.prevRowIndex, rowIndex);\n        this.applyUpDown(rowIndex);\n      } else {\n        this.selectRow(0, true);\n      }\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange(this.prevCIdxs || {\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n    this.isMultiShiftRequest = true;\n    this.selectCellsByRange(this.prevCIdxs, {\n      rowIndex: rowIndex,\n      cellIndex: cellIndex\n    });\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isRowType()) {\n      this.selectRow(rowIndex, true);\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n  };\n\n  Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n    var args = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n\n    if (row) {\n      var cells = [].slice.call(row.querySelectorAll('.e-rowcell'));\n      var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n      var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n\n      if (detailIndentCell) {\n        cells.push(detailIndentCell);\n      }\n\n      if (dragdropIndentCell) {\n        cells.push(dragdropIndentCell);\n      }\n\n      addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n    }\n\n    this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n  };\n\n  Selection.prototype.isRowType = function () {\n    return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isCellType = function () {\n    return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isSingleSel = function () {\n    return this.selectionSettings.type === 'Single';\n  };\n\n  Selection.prototype.getRenderer = function () {\n    if (isNullOrUndefined(this.contentRenderer)) {\n      this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n    }\n\n    return this.contentRenderer;\n  };\n  /**\n   * Gets the collection of selected records.\n   * @return {Object[]}\n   */\n\n\n  Selection.prototype.getSelectedRecords = function () {\n    var selectedData = [];\n\n    if (!this.selectionSettings.persistSelection) {\n      selectedData = this.parent.getRowsObject().filter(function (row) {\n        return row.isSelected;\n      }).map(function (m) {\n        return m.data;\n      });\n    } else {\n      selectedData = this.persistSelectedData;\n    }\n\n    return selectedData;\n  };\n\n  Selection.prototype.addEventListener_checkbox = function () {\n    var _this = this;\n\n    this.parent.on(events.dataReady, this.dataReady, this);\n    this.onDataBoundFunction = this.onDataBound.bind(this);\n    this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n    this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n    this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.on(events.click, this.clickHandler, this);\n\n    this.resizeEndFn = function () {\n      _this.updateAutoFillPosition();\n\n      _this.drawBorders();\n    };\n\n    this.resizeEndFn.bind(this);\n    this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n  };\n\n  Selection.prototype.removeEventListener_checkbox = function () {\n    this.parent.off(events.dataReady, this.dataReady);\n    this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n    this.parent.off(events.click, this.clickHandler);\n  };\n\n  Selection.prototype.setCheckAllForEmptyGrid = function () {\n    var checkAllBox = this.getCheckAllBox();\n\n    if (checkAllBox) {\n      this.parent.isCheckBoxSelection = true;\n      var spanEle = checkAllBox.nextElementSibling;\n      removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n    }\n  };\n\n  Selection.prototype.dataReady = function (e) {\n    this.isHeaderCheckboxClicked = false;\n    var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n      this.disableUI = true;\n      this.clearSelection();\n      this.setCheckAllState();\n      this.disableUI = false;\n    }\n  };\n\n  Selection.prototype.actionCompleteHandler = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n  };\n\n  Selection.prototype.selectRowIndex = function (index) {\n    this.parent.isSelectedRowIndexUpdating = true;\n    this.parent.selectedRowIndex = index;\n  };\n\n  Selection.prototype.disableInteracted = function () {\n    this.isInteracted = false;\n  };\n\n  Selection.prototype.activeTarget = function () {\n    this.actualTarget = this.isInteracted ? this.actualTarget : null;\n  };\n\n  return Selection;\n}();\n\nexport { Selection };","map":{"version":3,"sources":["/home/nikhil/Desktop/data_grid_editor-master/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Browser","EventHandler","createElement","isBlazor","isNullOrUndefined","isUndefined","addClass","removeClass","remove","closest","Query","setCssInGridPopUp","getPosition","isGroupAdaptive","parentsUntil","addRemoveActiveClasses","removeAddCboxClasses","events","RenderType","iterateExtend","Selection","parent","selectionSettings","locator","selectedRowIndexes","selectedRowCellIndexes","selectedRecords","preventFocus","checkBoxState","isMultiShiftRequest","isMultiCtrlRequest","enableSelectMultiTouch","clearRowCheck","selectRowCheck","selectedRowState","totalRecordsCount","chkAllCollec","isCheckedOnAdd","persistSelectedData","isCancelDeSelect","isPreventCellSelect","disableUI","isPersisted","cmdKeyPressed","cellselected","isMultiSelection","isAddRowsToSelection","autoFillRLselection","factory","getService","focus","addEventListener","wireEvents","initializeSelection","log","render","onActionBegin","args","type","trigger","fDataUpdate","cellIndex","rowIndex","rowObj","getRowObj","currentIndex","foreignKeyData","onActionComplete","getModuleName","destroy","gridElement","element","querySelector","hidePopUp","clearSelection","removeEventListener","unWireEvents","getContent","mouseDownHandler","getHeaderContent","isEditing","editSettings","mode","editModule","formObj","validate","isEdit","isPersistSelection","getSelectedMovableRow","index","gObj","getFrozenColumns","getMovableRowByIndex","getCurrentBatchRecordChanges","added","deleted","currentRecords","getCurrentViewRecords","newRowPosition","concat","getBatchChanges","deletedRecords","primaryKey","getPrimaryKeyFieldNames","j","splice","selectRow","isToggle","enableSimpleMultiRowSelection","addRowsToSelection","selectedRow","getRowByIndex","selectedMovableRow","selectData","isRemoved","enableVirtualization","notify","selectVirtualRow","selectedIndex","frozenData","contentModule","getRowObjectByIndex","getRowObjectFromUID","getAttribute","data","prevSelectedData","getSelectedRecords","clearRowSelection","isRowType","isRowSelected","hasAttribute","activeTarget","can","isHybrid","isJsComponent","isCtrlPressed","isShiftPressed","row","previousRow","prevRowIndex","previousRowIndex","target","actualTarget","cancel","isInteracted","isHeaderCheckboxClicked","addMovableArgs","rowSelecting","rowSelectingCallBack","_this","disableInteracted","toggle","removed","persistSelection","checkboxMode","clearSelectedRow","selectRowCallBack","clearRow","indexOf","updateRowSelection","selectRowIndex","isHeaderCheckBoxClicked","rowSelected","isServerRendered","interopAdaptor","invokeMethodAsync","updateRowProps","targetObj","mRow","mObj","previousMovRow","getMovableRows","selectRowsByRange","startIndex","endIndex","selectRows","getCollectionFromIndexes","rowIndexes","isSingleSel","selectedRows","frzCols","selectedData","len","currentRow","getDataRows","push","prevRow","getRows","slice","_i","rowIndexes_1","rowIdx","indexes","getSelectedRowIndexes","checkboxColumn","getColumns","filter","col","_loop_1","this_1","isUnSelected","enableToggle","rowDeselect","rowDeselecting","value","removeAttribute","addRemoveClassesForRow","rowDeselected","rowIndexes_2","state_1","_a","max","reverse","clearRowCallBack","checkAllRows","selectedEle","parentElement","updatePersistCollection","updateCheckBoxes","chkState","pKey_1","isSelected","some","updatePersistDelete","pKey","isPresent","chkBox","nextElementSibling","checkedTarget","classList","contains","setCheckAllState","pop","setAttribute","getPrevIndexes","cells","contextMenuModule","mouseButton","cell","onClick","span","clearCellSelection","undefined","rows_1","data_1","row_1","mRow_1","rowIndex_1","foreignKeyData_1","target_1","currentViewData","checkSelectAllClicked","getCheckAllStatus","updatePersistSelectedData","record","getRenderer","setSelection","movableRow","rowDeselectCallBack","cancl_1","rowDeselectObj","rowInString","target_2","rowidx","rowidxex","data_2","foreignKey","isHeaderCheckBxClick","rowIndex_2","data_3","getSelectedMovableCell","getMovableCellFromIndex","getColIndex","selectCell","isCellType","selectedCell","getCellFromIndex","selectedTable","cIdx","isCellSelected","prevCIdxs","previousRowCell","prevECIdxs","getCellIndex","currentCell","previousRowCellIndex","cellSelecting","successCallBack","cellSelectingArgs","cncl","clearCell","updateCellSelection","selectedRowCellIndex","updateCellProps","cellSelected","rIdx","selectCellsByRange","min","stIndex","edIndex","cellIndexes","temp","cellSelectionMode","getLastColIndex","addAttribute","cellSelectedArgs","isDragged","selectCells","rowCellIndexes","cellSelectArgs","cellLen","addRowCellIndex","addCellsToSelection","hideAutoFill","getMovableRowsObject","cellIndexes_1","selectedCellIdx","cellDeselect","cellDeselecting","cellDeselected","getMovableDataRows","querySelectorAll","m","colIndex","parseInt","cancl","add","rowCellIndex","isRowAvail","selectedCells","getSelectedCellsElement","rowCell","cLen","bdrElement","showHideBorders","rows","mRows","addMovableRows","mouseMoveHandler","e","preventDefault","gBRect","getBoundingClientRect","x1","x","y1","y","position","x2","left","y2","top","tmp","isCellDrag","document","elementFromPoint","offsetLeft","clientY","style","width","height","ctrlKey","shiftKey","startDIndex","td","startAFCell","startCell","endAFCell","selectLikeExcel","isAutoFillSel","startDCellIndex","drawBorders","showAFBorders","selectLikeAutoFill","createBorders","positionBorders","isLastCell","isLastRow","isFirstRow","isFirstCell","setBorders","parentEle","border","bdrStr","ele","display","start","end","stOff","endOff","parentOff","offsetParent","rowHeight","topOffSet","frozenRows","leftOffset","enableRtl","right","selectDirection","updateStartEndCells","getContentTable","getMovableContent","mcBdrElement","getHeaderTable","fhBdrElement","headerModule","getMovableHeader","mhBdrElement","applyBorders","str","rtl","borderWidth","includes","appendChild","className","id","styles","drawAFBorders","bdrAFBottom","createAFBorders","positionAFBorders","bdrAFLeft","firstCellTop","firstCellLeft","parentRect","sTop","scrollTop","sLeft","scrollLeft","offsetTop","Math","floor","bdrAFRight","bdrAFTop","scrolloffSet","parseFloat","hideAFBorders","updateValue","createBeforeAutoFill","getColumnByIndex","updateCell","field","column","innerText","beforeAutoFill","getAutoFillCells","startCellIdx","isApply","startrowIdx","endrowIdx","endCellIdx","rowLen","colLen","cellIdx","endCell","c","startCellIndex","trIdx","r","mouseUpHandler","body","mUPTarget","updateAutoFillPosition","lastCell","updateStartCellsIndex","autofill","enableAutoFill","rindex","isFrozenCol","isFrozenRow","clientRect","colWidth","button","isDrag","allowRowDragAndDrop","enableDrag","isUpdate","tr","postion","clearSelAfterRefresh","isInfiniteScroll","enableInfiniteScrolling","requestType","isDestroyed","on","uiUpdate","enableAfterRender","initialEnd","rowSelectionComplete","cellSelectionComplete","inBoundModelChanged","onPropertyChanged","cellFocused","onCellFocused","beforeFragAppend","columnPositionChanged","contentReady","actionBeginFunction","actionBegin","bind","actionCompleteFunction","actionComplete","rowsRemoved","headerRefreshed","refreshHeader","addEventListener_checkbox","off","removeEventListener_checkbox","isMacOS","navigator","userAgent","keyDownHandler","keyUpHandler","records","getCheckAllBox","module","enable","initPerisistSelection","properties","checkBoxSelectionChanged","isCheckBoxSelection","selectedRowIndex","gobj","chkField","pageSettings","dataBind","ensureCheckboxFieldSelection","keys","getDataModule","query","where","params","dataManager","getData","proxy_1","showSpinner","then","dataSuccess","result","refreshPersistSelection","hideSpinner","res","setRowSelection","state","isRemote","groupSettings","columns","_b","_c","executeLocal","generateQuery","checkState","editChkBox","checked","action","onDataBound","checkSelectAllAction","cRenderer","editForm","currentInfo","getVirtualRowIndex","checkSelectAll","checkBox","stateStr","allowPaging","values","vgenerator","rowCache","forEach","selectionModule","Number","triggerChkChangeEvent","classes","status","checkSelect","checkObj","rIndex","uid","map","rowCellSelectionHandler","moveIntoUncheckCollection","checkBoxChange","updateSelectedRowIndex","dataLength","selectedVal","isInteraction","checkToSelectAll","isServerRenderedVirtualization","checkedLen","spanEle","info","name","keyCode","clickHandler","popUpClickHandler","chkSelect","checkWrap","checkboxOnly","isEqualNode","hoverFrozenRows","isDevice","showPopup","container","isHeader","byKey","keyArgs","allowFiltering","isJump","tagName","clear","isContent","isSelectable","headerAction","prev","thLen","childElementCount","selectedIndexes","getSelectedRowCellIndexes","applyDownUpKey","applyRightLeftKey","shiftDownKey","applyShiftLeftRightKey","applyHomeEndKey","applyCtrlHomeEndKey","ctrlPlusA","applySpaceSelection","allowNextRowEdit","applyUpDown","children","cIndex","contentRenderer","isAdd","clearAll","detailIndentCell","dragdropIndentCell","Content","getRowsObject","dataReady","onDataBoundFunction","dataBound","onEmpty","setCheckAllForEmptyGrid","actionCompleteFunc","actionCompleteHandler","click","resizeEndFn","resizeStop","checkAllBox","isInfinitecroll","isSelectedRowIndexUpdating"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Browser, EventHandler, createElement, isBlazor } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, parentsUntil, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend } from '../base/util';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for the Grid selection module\n     * @hidden\n     */\n    function Selection(parent, selectionSettings, locator) {\n        //Internal letiables       \n        /**\n         * @hidden\n         */\n        this.selectedRowIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRowCellIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRecords = [];\n        /**\n         * @hidden\n         */\n        this.preventFocus = false;\n        this.checkBoxState = false;\n        this.isMultiShiftRequest = false;\n        this.isMultiCtrlRequest = false;\n        this.enableSelectMultiTouch = false;\n        this.clearRowCheck = false;\n        this.selectRowCheck = false;\n        this.selectedRowState = {};\n        this.totalRecordsCount = 0;\n        this.chkAllCollec = [];\n        this.isCheckedOnAdd = false;\n        this.persistSelectedData = [];\n        this.isCancelDeSelect = false;\n        this.isPreventCellSelect = false;\n        this.disableUI = false;\n        this.isPersisted = false;\n        this.cmdKeyPressed = false;\n        this.cellselected = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n        /**\n         * @hidden\n         */\n        this.autoFillRLselection = true;\n        this.parent = parent;\n        this.selectionSettings = selectionSettings;\n        this.factory = locator.getService('rendererFactory');\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.wireEvents();\n    }\n    Selection.prototype.initializeSelection = function () {\n        this.parent.log('selection_key_missing');\n        this.render();\n    };\n    /**\n     * The function used to trigger onActionBegin\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.onActionBegin = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n    };\n    Selection.prototype.fDataUpdate = function (args) {\n        if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n            var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ?\n                this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n            args.foreignKeyData = rowObj.foreignKeyData;\n        }\n        return args;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.onActionComplete = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n        this.isMultiSelection = false;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    /**\n     * To destroy the selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.e-gridheader') && !gridElement.querySelector('.e-gridcontent'))) {\n            return;\n        }\n        this.hidePopUp();\n        this.clearSelection();\n        this.removeEventListener();\n        this.unWireEvents();\n        EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n        EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n    };\n    Selection.prototype.isEditing = function () {\n        return (this.parent.editSettings.mode === 'Normal' || (this.parent.editSettings.mode === 'Batch' && this.parent.editModule &&\n            this.parent.editModule.formObj && !this.parent.editModule.formObj.validate())) &&\n            this.parent.isEdit && !this.parent.isPersistSelection;\n    };\n    Selection.prototype.getSelectedMovableRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.getFrozenColumns() && this.parent.getContent().querySelector('.e-movablecontent')) {\n            return gObj.getMovableRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getCurrentBatchRecordChanges = function () {\n        var gObj = this.parent;\n        var added = 'addedRecords';\n        var deleted = 'deletedRecords';\n        if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n            var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n            currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ?\n                currentRecords.concat(this.parent.editModule.getBatchChanges()[added]) :\n                this.parent.editModule.getBatchChanges()[added].concat(currentRecords);\n            var deletedRecords = this.parent.editModule.getBatchChanges()[deleted];\n            var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < (deletedRecords.length); i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n                        currentRecords.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n            return currentRecords;\n        }\n        else {\n            return gObj.getCurrentViewRecords();\n        }\n    };\n    /**\n     * Selects a row by the given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Selection.prototype.selectRow = function (index, isToggle) {\n        if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n            this.addRowsToSelection([index]);\n            return;\n        }\n        var gObj = this.parent;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectData;\n        var isRemoved = false;\n        if (gObj.enableVirtualization && index > -1) {\n            this.parent.notify(events.selectVirtualRow, { selectedIndex: index });\n            var frozenData = gObj.getFrozenColumns() ? gObj.contentModule.getRowObjectByIndex(index)\n                : null;\n            if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n                selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n            }\n            else {\n                var prevSelectedData = this.parent.getSelectedRecords();\n                if (prevSelectedData.length > 0) {\n                    this.clearRowSelection();\n                }\n                return;\n            }\n        }\n        else {\n            selectData = this.getCurrentBatchRecordChanges()[index];\n        }\n        if (!this.isRowType() || !selectedRow || this.isEditing()) {\n            // if (this.isEditing()) {\n            //     gObj.selectedRowIndex = index;\n            // }\n            return;\n        }\n        var isRowSelected = selectedRow.hasAttribute('aria-selected');\n        this.activeTarget();\n        isToggle = !isToggle ? isToggle :\n            !this.selectedRowIndexes.length ? false :\n                (this.selectedRowIndexes.length === 1 ? (index === this.selectedRowIndexes[0]) : false);\n        var args;\n        var can = 'cancel';\n        if (!isToggle) {\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                args = {\n                    data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                    isShiftPressed: this.isMultiShiftRequest, row: selectedRow,\n                    previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                    previousRowIndex: this.prevRowIndex, target: this.actualTarget, cancel: false, isInteracted: this.isInteracted,\n                    isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n                };\n                args = this.addMovableArgs(args, selectedMovableRow);\n            }\n            else {\n                args = {\n                    data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                    isShiftPressed: this.isMultiShiftRequest, previousRowIndex: this.prevRowIndex,\n                    cancel: false, isInteracted: this.isInteracted, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n                };\n            }\n            this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n        }\n        else {\n            this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n        }\n    };\n    Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n        var _this = this;\n        return function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.index = index;\n            _this.toggle = isToggle;\n            _this.data = selectData;\n            _this.removed = isRemoved;\n            if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n                _this.clearSelectedRow(index);\n                isRemoved = true;\n                _this.removed = isRemoved;\n                _this.selectRowCallBack();\n            }\n            else if (!isRowSelected && _this.selectionSettings.persistSelection &&\n                _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                _this.selectRowCallBack();\n            }\n            if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n                _this.clearSelection();\n            }\n            if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n                _this.selectRowCheck = true;\n                _this.clearRow();\n            }\n        };\n    };\n    Selection.prototype.selectRowCallBack = function () {\n        var gObj = this.parent;\n        var args;\n        var index = this.index;\n        var isToggle = this.toggle;\n        var selectData = this.data;\n        var isRemoved = this.removed;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        if (!isToggle && !isRemoved) {\n            if (this.selectedRowIndexes.indexOf(index) <= -1) {\n                this.updateRowSelection(selectedRow, index);\n                if (gObj.getFrozenColumns()) {\n                    this.updateRowSelection(selectedMovableRow, index);\n                }\n            }\n            this.selectRowIndex(index);\n        }\n        if (!isToggle) {\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                args = {\n                    data: selectData, rowIndex: index,\n                    row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                    previousRowIndex: this.prevRowIndex, target: this.actualTarget, isInteracted: this.isInteracted,\n                    isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n                };\n                args = this.addMovableArgs(args, selectedMovableRow);\n            }\n            else {\n                args = {\n                    data: selectData, rowIndex: index,\n                    row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                    previousRowIndex: this.prevRowIndex, isInteracted: this.isInteracted,\n                    isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n                };\n            }\n            this.onActionComplete(args, events.rowSelected);\n        }\n        if (isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization) {\n            var interopAdaptor = 'interopAdaptor';\n            var invokeMethodAsync = 'invokeMethodAsync';\n            this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', true, 'normal', [index]);\n        }\n        this.isInteracted = false;\n        this.updateRowProps(index);\n    };\n    Selection.prototype.addMovableArgs = function (targetObj, mRow) {\n        if (this.parent.getFrozenColumns()) {\n            var mObj = { mRow: mRow, previousMovRow: this.parent.getMovableRows()[this.prevRowIndex] };\n            targetObj = __assign({}, targetObj, mObj);\n        }\n        return targetObj;\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @return {void}\n     */\n    Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n        this.selectRowIndex(endIndex);\n    };\n    /**\n     * Selects a collection of rows by index.\n     * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n     * @return {void}\n     */\n    Selection.prototype.selectRows = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n        var frzCols = gObj.getFrozenColumns();\n        var can = 'cancel';\n        var selectedData = [];\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        for (var i = 0, len = rowIndexes.length; i < len; i++) {\n            var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n            var rowObj = this.getRowObj(currentRow);\n            if (rowObj) {\n                selectedData.push(rowObj.data);\n                selectedRows.push(currentRow);\n                foreignKeyData.push(rowObj.foreignKeyData);\n            }\n        }\n        var isHybrid = 'isHybrid';\n        this.activeTarget();\n        var args;\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            args = {\n                cancel: false,\n                rowIndexes: rowIndexes, row: selectedRows, rowIndex: rowIndex, target: this.actualTarget,\n                prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n                isInteracted: this.isInteracted, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n            args = this.addMovableArgs(args, selectedMovableRow);\n        }\n        else {\n            args = {\n                cancel: false,\n                rowIndexes: rowIndexes, rowIndex: rowIndex, previousRowIndex: this.prevRowIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n        }\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.clearRow();\n            _this.selectRowIndex(rowIndexes.slice(-1)[0]);\n            if (!_this.isSingleSel()) {\n                for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n                    var rowIdx = rowIndexes_1[_i];\n                    _this.updateRowSelection(gObj.getRowByIndex(rowIdx), rowIdx);\n                    if (frzCols) {\n                        _this.updateRowSelection(gObj.getMovableRowByIndex(rowIdx), rowIdx);\n                    }\n                    _this.updateRowProps(rowIndex);\n                }\n            }\n            else {\n                _this.updateRowSelection(gObj.getRowByIndex(rowIndex), rowIndex);\n                if (frzCols) {\n                    _this.updateRowSelection(gObj.getMovableRowByIndex(rowIndex), rowIndex);\n                }\n                _this.updateRowProps(rowIndex);\n            }\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                args = {\n                    rowIndexes: rowIndexes, row: selectedRows, rowIndex: rowIndex, target: _this.actualTarget,\n                    prevRow: gObj.getRows()[_this.prevRowIndex], previousRowIndex: _this.prevRowIndex,\n                    data: isBlazor() ? selectedData : _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                    isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n                };\n                args = _this.addMovableArgs(args, selectedMovableRow);\n            }\n            else {\n                args = {\n                    rowIndexes: rowIndexes, rowIndex: rowIndex, previousRowIndex: _this.prevRowIndex,\n                    row: selectedRows, prevRow: gObj.getRows()[_this.prevRowIndex],\n                    data: isBlazor() ? selectedData : _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                    isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n                };\n            }\n            if (_this.isRowSelected) {\n                _this.onActionComplete(args, events.rowSelected);\n            }\n        });\n    };\n    /**\n     * Select rows with existing row selection by passing row indexes.\n     * @param  {number} startIndex - Specifies the row indexes.\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.addRowsToSelection = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var can = 'cancel';\n        var target = this.target;\n        this.isMultiSelection = true;\n        var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n        var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) :\n            gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n        var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) :\n            this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n        var frzCols = gObj.getFrozenColumns();\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        var args;\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        var _loop_1 = function (rowIndex) {\n            var rowObj = this_1.getRowObj(rowIndex);\n            var isUnSelected = this_1.selectedRowIndexes.indexOf(rowIndex) > -1;\n            this_1.selectRowIndex(rowIndex);\n            if (isUnSelected && ((checkboxColumn.length ? true : this_1.selectionSettings.enableToggle) || this_1.isMultiCtrlRequest)) {\n                this_1.isAddRowsToSelection = true;\n                this_1.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n                if (this_1.isCancelDeSelect) {\n                    return { value: void 0 };\n                }\n                this_1.selectedRowIndexes.splice(this_1.selectedRowIndexes.indexOf(rowIndex), 1);\n                this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedRow), 1);\n                selectedRow.removeAttribute('aria-selected');\n                this_1.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n                if (selectedMovableRow) {\n                    this_1.selectedRecords.splice(this_1.selectedRecords.indexOf(selectedMovableRow), 1);\n                    selectedMovableRow.removeAttribute('aria-selected');\n                    this_1.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                this_1.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow]);\n                this_1.isInteracted = false;\n                this_1.isMultiSelection = false;\n                this_1.isAddRowsToSelection = false;\n            }\n            else {\n                var isHybrid = 'isHybrid';\n                this_1.activeTarget();\n                if (!isBlazor() || this_1.parent.isJsComponent || this_1.parent[isHybrid]) {\n                    args = {\n                        cancel: false,\n                        data: rowObj.data, rowIndex: rowIndex, row: selectedRow, target: this_1.actualTarget,\n                        prevRow: gObj.getRows()[this_1.prevRowIndex], previousRowIndex: this_1.prevRowIndex,\n                        isCtrlPressed: this_1.isMultiCtrlRequest, isShiftPressed: this_1.isMultiShiftRequest,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this_1.isInteracted,\n                        isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                    args = this_1.addMovableArgs(args, selectedMovableRow);\n                }\n                else {\n                    args = {\n                        cancel: false,\n                        data: rowObj.data, rowIndex: rowIndex, previousRowIndex: this_1.prevRowIndex,\n                        isCtrlPressed: this_1.isMultiCtrlRequest, isShiftPressed: this_1.isMultiShiftRequest,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this_1.isInteracted,\n                        isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                }\n                this_1.parent.trigger(events.rowSelecting, this_1.fDataUpdate(args), function (args) {\n                    if (!isNullOrUndefined(args) && args[can] === true) {\n                        _this.disableInteracted();\n                        return;\n                    }\n                    if (_this.isSingleSel()) {\n                        _this.clearRow();\n                    }\n                    _this.updateRowSelection(selectedRow, rowIndex);\n                    if (frzCols) {\n                        _this.updateRowSelection(selectedMovableRow, rowIndex);\n                    }\n                });\n            }\n            if (!isUnSelected) {\n                var isHybrid = 'isHybrid';\n                if (!isBlazor() || this_1.parent.isJsComponent || this_1.parent[isHybrid]) {\n                    args = {\n                        data: rowObj.data, rowIndex: rowIndex, row: selectedRow, target: this_1.actualTarget,\n                        prevRow: gObj.getRows()[this_1.prevRowIndex], previousRowIndex: this_1.prevRowIndex,\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this_1.isInteracted,\n                        isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                    args = this_1.addMovableArgs(args, selectedMovableRow);\n                }\n                else {\n                    args = {\n                        data: rowObj.data, rowIndex: rowIndex, previousRowIndex: this_1.prevRowIndex,\n                        row: selectedRow, prevRow: gObj.getRows()[this_1.prevRowIndex],\n                        foreignKeyData: rowObj.foreignKeyData, isInteracted: this_1.isInteracted,\n                        isHeaderCheckboxClicked: this_1.isHeaderCheckboxClicked, rowIndexes: indexes\n                    };\n                }\n                this_1.onActionComplete(args, events.rowSelected);\n            }\n            this_1.isInteracted = false;\n            this_1.updateRowProps(rowIndex);\n            if (this_1.isSingleSel()) {\n                return \"break\";\n            }\n        };\n        var this_1 = this;\n        for (var _i = 0, rowIndexes_2 = rowIndexes; _i < rowIndexes_2.length; _i++) {\n            var rowIndex = rowIndexes_2[_i];\n            var state_1 = _loop_1(rowIndex);\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n            if (state_1 === \"break\")\n                break;\n        }\n    };\n    Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n        var indexes = [];\n        var _a = (startIndex <= endIndex) ?\n            { i: startIndex, max: endIndex } : { i: endIndex, max: startIndex }, i = _a.i, max = _a.max;\n        for (; i <= max; i++) {\n            indexes.push(i);\n        }\n        if (startIndex > endIndex) {\n            indexes.reverse();\n        }\n        return indexes;\n    };\n    Selection.prototype.clearRow = function () {\n        this.clearRowCheck = true;\n        this.clearRowSelection();\n    };\n    Selection.prototype.clearRowCallBack = function () {\n        if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n            return;\n        }\n        this.selectedRowIndexes = [];\n        this.selectedRecords = [];\n        this.selectRowIndex(-1);\n        if (this.isSingleSel() && this.parent.isPersistSelection) {\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.clearSelectedRow = function (index) {\n        if (this.target) {\n            var selectedEle = this.target.parentElement;\n            if (!this.disableUI) {\n                selectedEle.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n            }\n            this.updatePersistCollection(selectedEle, false);\n            this.updateCheckBoxes(selectedEle);\n            this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n            this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n        }\n    };\n    Selection.prototype.updateRowProps = function (startIndex) {\n        this.prevRowIndex = startIndex;\n        this.isRowSelected = this.selectedRowIndexes.length && true;\n    };\n    Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n        var _this = this;\n        if (this.parent.isPersistSelection && !isNullOrUndefined(selectedRow)) {\n            var rowObj = this.getRowObj(selectedRow);\n            var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (pKey_1 === null) {\n                return;\n            }\n            rowObj.isSelected = chkState;\n            if (chkState) {\n                this.selectedRowState[pKey_1] = chkState;\n                if (!this.persistSelectedData.some(function (data) { return data[_this.primaryKey] === pKey_1; })) {\n                    this.persistSelectedData.push(rowObj.data);\n                }\n            }\n            else {\n                this.updatePersistDelete(pKey_1);\n            }\n        }\n    };\n    Selection.prototype.updatePersistDelete = function (pKey) {\n        var _this = this;\n        delete (this.selectedRowState[pKey]);\n        var index;\n        var isPresent = this.persistSelectedData.some(function (data, i) {\n            index = i;\n            return data[_this.primaryKey] === pKey;\n        });\n        if (isPresent) {\n            this.persistSelectedData.splice(index, 1);\n        }\n    };\n    Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n        if (!isNullOrUndefined(row)) {\n            var chkBox = row.querySelector('.e-checkselect');\n            if (!isNullOrUndefined(chkBox)) {\n                removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n                if (isNullOrUndefined(this.checkedTarget) || (!isNullOrUndefined(this.checkedTarget)\n                    && !this.checkedTarget.classList.contains('e-checkselectall'))) {\n                    this.setCheckAllState(rowIndex);\n                }\n            }\n        }\n    };\n    Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n        if (!selectedRow) {\n            return;\n        }\n        this.selectedRowIndexes.push(startIndex);\n        var len = this.selectedRowIndexes.length;\n        if (this.parent.getFrozenColumns() && len > 1) {\n            if ((this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1])) {\n                this.selectedRowIndexes.pop();\n            }\n        }\n        this.selectedRecords.push(selectedRow);\n        selectedRow.setAttribute('aria-selected', 'true');\n        this.updatePersistCollection(selectedRow, true);\n        this.updateCheckBoxes(selectedRow, true);\n        this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n        if (!this.preventFocus) {\n            var target = this.focus.getPrevIndexes().cellIndex ?\n                selectedRow.cells[this.focus.getPrevIndexes().cellIndex] :\n                selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n            if (this.parent.contextMenuModule && this.mouseButton === 2) {\n                target = this.parent.contextMenuModule.cell;\n            }\n            if (!target) {\n                return;\n            }\n            this.focus.onClick({ target: target }, true);\n        }\n    };\n    /**\n     * Deselects the currently selected rows and cells.\n     * @return {void}\n     */\n    Selection.prototype.clearSelection = function () {\n        if (!this.parent.isPersistSelection || (this.parent.isPersistSelection && !this.parent.isEdit) ||\n            (!isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall'))) {\n            var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n            if (span.classList.contains('e-rowselect')) {\n                span.classList.remove('e-spanclicked');\n            }\n            if (this.parent.isPersistSelection) {\n                this.persistSelectedData = [];\n                this.selectedRowState = {};\n            }\n            this.clearRowSelection();\n            this.clearCellSelection();\n            this.prevRowIndex = undefined;\n            this.enableSelectMultiTouch = false;\n            this.isInteracted = false;\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     * @return {void}\n     */\n    Selection.prototype.clearRowSelection = function () {\n        var _this = this;\n        if (this.isRowSelected) {\n            var gObj = this.parent;\n            var rows_1 = this.parent.getDataRows();\n            var data_1 = [];\n            var row_1 = [];\n            var mRow_1 = [];\n            var rowIndex_1 = [];\n            var frzCols = gObj.getFrozenColumns();\n            var foreignKeyData_1 = [];\n            var target_1 = this.target;\n            var currentViewData = this.parent.getCurrentViewRecords();\n            for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n                var currentRow = this.parent.editSettings.mode === 'Batch' ?\n                    this.parent.getRows()[this.selectedRowIndexes[i]]\n                    : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n                var rowObj = this.getRowObj(currentRow);\n                if (rowObj) {\n                    data_1.push(rowObj.data);\n                    row_1.push(currentRow);\n                    rowIndex_1.push(this.selectedRowIndexes[i]);\n                    foreignKeyData_1.push(rowObj.foreignKeyData);\n                }\n                if (frzCols) {\n                    mRow_1.push(gObj.getMovableRows()[this.selectedRowIndexes[i]]);\n                }\n            }\n            if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                this.isInteracted = this.checkSelectAllClicked ? true : false;\n            }\n            this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n                if (_this.isCancelDeSelect && (_this.isInteracted || _this.checkSelectAllClicked)) {\n                    if (_this.parent.isPersistSelection) {\n                        if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n                            for (var i = 0; i < _this.selectedRecords.length; i++) {\n                                _this.updatePersistCollection(_this.selectedRecords[i], true);\n                            }\n                        }\n                        else {\n                            _this.parent.checkAllRows = 'Check';\n                            _this.updatePersistSelectedData(true);\n                        }\n                    }\n                    if (_this.clearRowCheck) {\n                        _this.clearRowCallBack();\n                        _this.clearRowCheck = false;\n                        if (_this.selectRowCheck) {\n                            _this.selectRowCallBack();\n                            _this.selectRowCheck = false;\n                        }\n                    }\n                    return;\n                }\n                var element = [].slice.call(rows_1.filter(function (record) { return record.hasAttribute('aria-selected'); }));\n                for (var j = 0; j < element.length; j++) {\n                    if (!_this.disableUI || isBlazor()) {\n                        element[j].removeAttribute('aria-selected');\n                        _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n                    }\n                    // tslint:disable-next-line:align\n                    _this.updatePersistCollection(element[j], false);\n                    _this.updateCheckBoxes(element[j]);\n                }\n                if (isBlazor() && _this.parent.isServerRendered && _this.parent.enableVirtualization) {\n                    _this.getRenderer().setSelection(null, false, true);\n                }\n                for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n                    var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n                    if (movableRow) {\n                        if (!_this.disableUI || isBlazor()) {\n                            movableRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updatePersistCollection(movableRow, false);\n                    }\n                }\n                _this.selectedRowIndexes = [];\n                _this.selectedRecords = [];\n                _this.isRowSelected = false;\n                _this.selectRowIndex(-1);\n                _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1);\n                if (_this.clearRowCheck) {\n                    _this.clearRowCallBack();\n                    _this.clearRowCheck = false;\n                    if (_this.selectRowCheck) {\n                        _this.selectRowCallBack();\n                        _this.selectRowCheck = false;\n                    }\n                }\n            });\n        }\n        else {\n            if (this.clearRowCheck) {\n                this.clearRowCallBack();\n                this.clearRowCheck = false;\n                if (this.selectRowCheck) {\n                    this.selectRowCallBack();\n                    this.selectRowCheck = false;\n                }\n            }\n        }\n    };\n    Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack) {\n        var _this = this;\n        if ((this.selectionSettings.persistSelection && this.isInteracted) || !this.selectionSettings.persistSelection) {\n            var cancl_1 = 'cancel';\n            var rowDeselectObj = {\n                rowIndex: rowIndex[0], data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck'\n                    && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ?\n                    this.persistSelectedData : data, foreignKeyData: foreignKeyData,\n                cancel: false, isInteracted: this.isInteracted, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            if (type === 'rowDeselected') {\n                delete rowDeselectObj.cancel;\n            }\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                var rowInString = 'row';\n                var target_2 = 'target';\n                var rowidx = 'rowIndex';\n                var rowidxex = 'rowIndexes';\n                var data_2 = 'data';\n                var foreignKey = 'foreignKeyData';\n                rowDeselectObj[rowInString] = row;\n                rowDeselectObj[target_2] = this.actualTarget;\n                var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n                if (isHeaderCheckBxClick || rowIndex.length > 1) {\n                    rowDeselectObj[rowidx] = rowIndex[0];\n                    rowDeselectObj[rowidxex] = rowIndex;\n                }\n                else if (rowIndex.length === 1) {\n                    rowDeselectObj[data_2] = rowDeselectObj[data_2][0];\n                    rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n                    rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n                    if (this.isAddRowsToSelection) {\n                        rowDeselectObj[rowidxex] = rowIndex;\n                    }\n                }\n            }\n            else {\n                var rowIndex_2 = 'rowIndex';\n                var data_3 = 'data';\n                rowDeselectObj[rowIndex_2] = rowDeselectObj[rowIndex_2][rowDeselectObj[rowIndex_2].length - 1];\n                rowDeselectObj[data_3] = rowDeselectObj[data_3][rowDeselectObj[data_3].length - 1];\n            }\n            this.parent.trigger(type, (!isBlazor() || this.parent.isJsComponent) && this.parent.getFrozenColumns() !== 0 ? __assign({}, rowDeselectObj, { mRow: mRow }) : rowDeselectObj, function (args) {\n                _this.isCancelDeSelect = args[cancl_1];\n                if (!_this.isCancelDeSelect || (!_this.isInteracted && !_this.checkSelectAllClicked)) {\n                    _this.updatePersistCollection(row[0], false);\n                    _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n                }\n                if (rowDeselectCallBack !== undefined) {\n                    rowDeselectCallBack();\n                }\n            });\n        }\n        else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n            if (rowDeselectCallBack !== undefined) {\n                rowDeselectCallBack();\n            }\n        }\n    };\n    Selection.prototype.getRowObj = function (row) {\n        if (row === void 0) { row = this.currentIndex; }\n        if (isNullOrUndefined(row)) {\n            return {};\n        }\n        if (typeof row === 'number') {\n            row = this.parent.getRowByIndex(row);\n        }\n        if (row) {\n            return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n        }\n        return {};\n    };\n    Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n        var gObj = this.parent;\n        var frzCols = gObj.getFrozenColumns();\n        if (frzCols) {\n            if (cellIndex.cellIndex >= frzCols) {\n                return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            return null;\n        }\n        return null;\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    Selection.prototype.selectCell = function (cellIndex, isToggle) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(cellIndex);\n        var args;\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n        }\n        var selectedTable;\n        var cIdx;\n        this.currentIndex = cellIndex.rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (!this.isCellType() || !selectedCell || this.isEditing()) {\n            return;\n        }\n        var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n        isToggle = !isToggle ? isToggle : (!isUndefined(this.prevCIdxs) &&\n            cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex &&\n            isCellSelected);\n        if (!isToggle) {\n            args = {\n                data: selectedData, cellIndex: cellIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ?\n                    this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                cancel: false\n            };\n            if (!isBlazor() || this.parent.isJsComponent) {\n                var currentCell = 'currentCell';\n                args[currentCell] = selectedCell;\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = this.prevECIdxs;\n            }\n            this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n            this.cellselected = true;\n        }\n        else {\n            this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n        }\n    };\n    Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n        var _this = this;\n        return function (cellSelectingArgs) {\n            var cncl = 'cancel';\n            var currentCell = 'currentCell';\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            if (!isToggle) {\n                cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n            }\n            _this.clearCell();\n            if (!isToggle) {\n                _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isToggle) {\n                var args = void 0;\n                var isHybrid = 'isHybrid';\n                if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                    args = {\n                        data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,\n                        selectedRowCellIndex: _this.selectedRowCellIndexes,\n                        previousRowCell: _this.prevECIdxs ?\n                            _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                    };\n                    var previousRowCellIndex = 'previousRowCellIndex';\n                    args[previousRowCellIndex] = _this.prevECIdxs;\n                }\n                else {\n                    args = { data: selectedData, cellIndex: cellIndex, selectedRowCellIndex: _this.selectedRowCellIndexes };\n                }\n                _this.updateCellProps(cellIndex, cellIndex);\n                _this.onActionComplete(args, events.cellSelected);\n            }\n        };\n    };\n    Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n        return (this.parent.getFrozenColumns() ? (cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx)\n            : this.parent.getCellFromIndex(rIdx, cIdx)) : this.parent.getCellFromIndex(rIdx, cIdx));\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @return {void}\n     */\n    Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        var _this = this;\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(startIndex);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n        }\n        var min;\n        var max;\n        var stIndex = startIndex;\n        var edIndex = endIndex = endIndex ? endIndex : startIndex;\n        var cellIndexes;\n        this.currentIndex = startIndex.rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var args = {\n            data: selectedData, cellIndex: startIndex, currentCell: selectedCell,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        if (!isBlazor()) {\n            var previousRowCellIndex = 'previousRowCellIndex';\n            args[previousRowCellIndex] = this.prevECIdxs;\n        }\n        this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            _this.clearCell();\n            if (startIndex.rowIndex > endIndex.rowIndex) {\n                var temp = startIndex;\n                startIndex = endIndex;\n                endIndex = temp;\n            }\n            for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n                if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n                    min = i === startIndex.rowIndex ? (startIndex.cellIndex) : 0;\n                    max = i === endIndex.rowIndex ? (endIndex.cellIndex) : _this.getLastColIndex(i);\n                }\n                else {\n                    min = startIndex.cellIndex;\n                    max = endIndex.cellIndex;\n                }\n                cellIndexes = [];\n                for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n                    if (frzCols) {\n                        if (j < frzCols) {\n                            selectedCell = gObj.getCellFromIndex(i, j);\n                        }\n                        else {\n                            selectedCell = gObj.getMovableCellFromIndex(i, j);\n                        }\n                    }\n                    else {\n                        selectedCell = gObj.getCellFromIndex(i, j);\n                    }\n                    if (!selectedCell) {\n                        continue;\n                    }\n                    cellIndexes.push(j);\n                    _this.updateCellSelection(selectedCell);\n                    _this.addAttribute(selectedCell);\n                }\n                _this.selectedRowCellIndexes.push({ rowIndex: i, cellIndexes: cellIndexes });\n            }\n            var cellSelectedArgs;\n            var isHybrid = 'isHybrid';\n            if (!isBlazor() || _this.parent.isJsComponent || _this.parent[isHybrid]) {\n                cellSelectedArgs = {\n                    data: selectedData, cellIndex: edIndex, currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n                    selectedRowCellIndex: _this.selectedRowCellIndexes,\n                    previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n            }\n            else {\n                cellSelectedArgs = { data: selectedData, cellIndex: edIndex, selectedRowCellIndex: _this.selectedRowCellIndexes };\n            }\n            if (!_this.isDragged) {\n                _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                _this.cellselected = true;\n            }\n            _this.updateCellProps(stIndex, edIndex);\n        });\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @return {void}\n     */\n    Selection.prototype.selectCells = function (rowCellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n        }\n        this.currentIndex = rowCellIndexes[0].rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var cellSelectArgs;\n        var isHybrid = 'isHybrid';\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            cellSelectArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n        else {\n            cellSelectArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n        }\n        this.onActionBegin(cellSelectArgs, events.cellSelecting);\n        for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n            for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n                if (frzCols) {\n                    if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n                        selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                    else {\n                        selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                }\n                else {\n                    selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                }\n                if (!selectedCell) {\n                    continue;\n                }\n                this.updateCellSelection(selectedCell);\n                this.addAttribute(selectedCell);\n                this.addRowCellIndex({ rowIndex: rowCellIndexes[i].rowIndex, cellIndex: rowCellIndexes[i].cellIndexes[j] });\n            }\n        }\n        this.updateCellProps({ rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] }, { rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] });\n        var cellSelectedArgs;\n        if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n            cellSelectedArgs = {\n                data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                currentCell: selectedCell, selectedRowCellIndex: this.selectedRowCellIndexes,\n                previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n        }\n        else {\n            cellSelectedArgs = { data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n                selectedRowCellIndex: this.selectedRowCellIndexes };\n        }\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n    };\n    /**\n     * Select cells with existing cell selection by passing row and column index.\n     * @param  {IIndex} startIndex - Defines the collection of row and column index.\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.addCellsToSelection = function (cellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedTable;\n        var cIdx;\n        var selectedCell;\n        var frzCols = gObj.getFrozenColumns();\n        var index;\n        this.currentIndex = cellIndexes[0].rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        var isHybrid = 'isHybrid';\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        this.hideAutoFill();\n        var rowObj;\n        if (frzCols && cellIndexes[0].cellIndex >= frzCols) {\n            rowObj = gObj.getMovableRowsObject()[cellIndexes[0].rowIndex];\n        }\n        else {\n            rowObj = this.getRowObj(cellIndexes[0].rowIndex);\n        }\n        var foreignKeyData = [];\n        for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n            var cellIndex = cellIndexes_1[_i];\n            for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n                if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n                    index = i;\n                    break;\n                }\n            }\n            selectedCell = this.getSelectedMovableCell(cellIndex);\n            if (!selectedCell) {\n                selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            foreignKeyData.push(rowObj.cells[frzCols && cellIndexes[0].cellIndex >= frzCols\n                ? cellIndex.cellIndex - frzCols : cellIndex.cellIndex].foreignKeyData);\n            var args = void 0;\n            if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                args = {\n                    cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                    isShiftPressed: this.isMultiShiftRequest,\n                    currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                    previousRowCell: this.prevECIdxs ?\n                        gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = this.prevECIdxs;\n            }\n            else {\n                args = {\n                    cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                    isShiftPressed: this.isMultiShiftRequest, isCtrlPressed: this.isMultiCtrlRequest\n                };\n            }\n            var isUnSelected = index > -1;\n            if (isUnSelected) {\n                var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n                if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n                    this.cellDeselect(events.cellDeselecting, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                    selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n                    if (selectedCellIdx.length === 0) {\n                        this.selectedRowCellIndexes.splice(index, 1);\n                    }\n                    selectedCell.classList.remove('e-cellselectionbackground');\n                    selectedCell.removeAttribute('aria-selected');\n                    this.cellDeselect(events.cellDeselected, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                }\n                else {\n                    isUnSelected = false;\n                    this.onActionBegin(args, events.cellSelecting);\n                    this.addRowCellIndex({ rowIndex: cellIndex.rowIndex, cellIndex: cellIndex.cellIndex });\n                    this.updateCellSelection(selectedCell);\n                    this.addAttribute(selectedCell);\n                }\n            }\n            else {\n                this.onActionBegin(args, events.cellSelecting);\n                if (!isNullOrUndefined(args) && args[cncl] === true) {\n                    return;\n                }\n                this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isUnSelected) {\n                var cellSelectedArgs = void 0;\n                if (!isBlazor() || this.parent.isJsComponent || this.parent[isHybrid]) {\n                    cellSelectedArgs = {\n                        data: selectedData, cellIndex: cellIndexes[0], currentCell: selectedCell,\n                        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) :\n                            undefined, selectedRowCellIndex: this.selectedRowCellIndexes\n                    };\n                    var previousRowCellIndex = 'previousRowCellIndex';\n                    cellSelectedArgs[previousRowCellIndex] = this.prevECIdxs;\n                }\n                else {\n                    cellSelectedArgs = { data: selectedData, cellIndex: cellIndexes[0], selectedRowCellIndex: this.selectedRowCellIndexes };\n                }\n                this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                this.cellselected = true;\n            }\n            this.updateCellProps(cellIndex, cellIndex);\n        }\n    };\n    Selection.prototype.getColIndex = function (rowIndex, index) {\n        var cells;\n        var frzCols = this.parent.getFrozenColumns();\n        if (frzCols) {\n            if (index >= frzCols) {\n                cells = this.parent.getMovableDataRows()[rowIndex] &&\n                    this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n            }\n        }\n        if (!cells) {\n            cells = this.parent.getDataRows()[rowIndex] &&\n                this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n        }\n        if (cells) {\n            for (var m = 0; m < cells.length; m++) {\n                var colIndex = parseInt(cells[m].getAttribute('aria-colindex'), 10);\n                if (colIndex === index) {\n                    if (frzCols) {\n                        if (index >= frzCols) {\n                            m += frzCols;\n                        }\n                    }\n                    return m;\n                }\n            }\n        }\n        return -1;\n    };\n    Selection.prototype.getLastColIndex = function (rowIndex) {\n        var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell')\n            : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n        return parseInt(cells[cells.length - 1].getAttribute('aria-colindex'), 10);\n    };\n    Selection.prototype.clearCell = function () {\n        this.clearCellSelection();\n    };\n    Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n        var cancl = 'cancel';\n        if (cells[0] && cells[0].classList.contains('e-gridchkbox')) {\n            this.updateCheckBoxes(closest(cells[0], 'tr'));\n        }\n        var args = {\n            cells: cells, data: data, cellIndexes: cellIndexes, foreignKeyData: foreignKeyData, cancel: false\n        };\n        this.parent.trigger(type, args);\n        this.isPreventCellSelect = args[cancl];\n    };\n    Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n        if (!isNullOrUndefined(rowIndex)) {\n            this.addRowCellIndex({ rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        selectedCell.classList.add('e-cellselectionbackground');\n        if (selectedCell.classList.contains('e-gridchkbox')) {\n            this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n        }\n        this.addAttribute(selectedCell);\n    };\n    Selection.prototype.addAttribute = function (cell) {\n        this.target = cell;\n        if (!isNullOrUndefined(cell)) {\n            cell.setAttribute('aria-selected', 'true');\n            if (!this.preventFocus) {\n                this.focus.onClick({ target: cell }, true);\n            }\n        }\n    };\n    Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n        this.prevCIdxs = startIndex;\n        this.prevECIdxs = endIndex;\n        this.isCellSelected = this.selectedRowCellIndexes.length && true;\n    };\n    Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n        var isRowAvail;\n        var index;\n        for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n            if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n                isRowAvail = true;\n                index = i;\n                break;\n            }\n        }\n        if (isRowAvail) {\n            if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n                this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n            }\n        }\n        else {\n            this.selectedRowCellIndexes.push({ rowIndex: rowCellIndex.rowIndex, cellIndexes: [rowCellIndex.cellIndex] });\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     * @return {void}\n     */\n    Selection.prototype.clearCellSelection = function () {\n        if (this.isCellSelected) {\n            var gObj = this.parent;\n            var selectedCells = this.getSelectedCellsElement();\n            var rowCell = this.selectedRowCellIndexes;\n            var data = [];\n            var cells = [];\n            var foreignKeyData = [];\n            var currentViewData = this.getCurrentBatchRecordChanges();\n            var selectedTable = void 0;\n            var frzCols = gObj.getFrozenColumns();\n            this.hideAutoFill();\n            for (var i = 0, len = rowCell.length; i < len; i++) {\n                data.push(currentViewData[rowCell[i].rowIndex]);\n                var rowObj = this.getRowObj(rowCell[i].rowIndex);\n                for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n                    if (frzCols) {\n                        if (rowCell[i].cellIndexes[j] < frzCols) {\n                            cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                        }\n                        else {\n                            cells.push(gObj.getMovableCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                        }\n                    }\n                    else {\n                        if (rowObj.cells) {\n                            foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n                        }\n                        cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                }\n            }\n            this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n            if (this.isPreventCellSelect === true) {\n                return;\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                selectedCells[i].classList.remove('e-cellselectionbackground');\n                selectedCells[i].removeAttribute('aria-selected');\n            }\n            if (this.bdrElement) {\n                this.showHideBorders('none');\n            }\n            this.selectedRowCellIndexes = [];\n            this.isCellSelected = false;\n            if (!this.isDragged && this.cellselected) {\n                this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n            }\n        }\n    };\n    Selection.prototype.getSelectedCellsElement = function () {\n        var gObj = this.parent;\n        var rows = gObj.getDataRows();\n        var mRows;\n        if (gObj.getFrozenColumns()) {\n            mRows = gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, mRows);\n        }\n        var cells = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            cells = cells.concat([].slice.call(rows[i].querySelectorAll('.e-cellselectionbackground')));\n        }\n        return cells;\n    };\n    Selection.prototype.mouseMoveHandler = function (e) {\n        e.preventDefault();\n        var gBRect = this.parent.element.getBoundingClientRect();\n        var x1 = this.x;\n        var y1 = this.y;\n        var position = getPosition(e);\n        var x2 = position.x - gBRect.left;\n        var y2 = position.y - gBRect.top;\n        var tmp;\n        var target = closest(e.target, 'tr');\n        this.isDragged = true;\n        if (!this.isCellDrag) {\n            if (!target) {\n                target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n            }\n            if (x1 > x2) {\n                tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n            }\n            if (y1 > y2) {\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n            this.element.style.left = x1 + 'px';\n            this.element.style.top = y1 + 'px';\n            this.element.style.width = x2 - x1 + 'px';\n            this.element.style.height = y2 - y1 + 'px';\n        }\n        if (target && !e.ctrlKey && !e.shiftKey) {\n            var rowIndex = parseInt(target.getAttribute('aria-rowindex'), 10);\n            if (!this.isCellDrag) {\n                this.hideAutoFill();\n                this.selectRowsByRange(this.startDIndex, rowIndex);\n            }\n            else {\n                var td = parentsUntil(e.target, 'e-rowcell');\n                if (td) {\n                    this.startAFCell = this.startCell;\n                    this.endAFCell = parentsUntil(e.target, 'e-rowcell');\n                    this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute('aria-colindex'), 10));\n                }\n            }\n        }\n    };\n    Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n        if (!this.isAutoFillSel) {\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.drawBorders();\n        }\n        else { //Autofill\n            this.showAFBorders();\n            this.selectLikeAutoFill(e);\n        }\n    };\n    Selection.prototype.drawBorders = function () {\n        if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n            this.parent.element.classList.add('e-enabledboxbdr');\n            if (!this.bdrElement) {\n                this.createBorders();\n            }\n            this.positionBorders();\n        }\n        else {\n            this.showHideBorders('none');\n        }\n    };\n    Selection.prototype.isLastCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[cells.length - 1] === cell;\n    };\n    Selection.prototype.isLastRow = function (cell) {\n        var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[rows.length - 1];\n    };\n    Selection.prototype.isFirstRow = function (cell) {\n        var rows = [].slice.call(closest(cell, 'tbody').querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[0];\n    };\n    Selection.prototype.isFirstCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[0] === cell;\n    };\n    Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n        var cells = [].slice.call(parentEle.querySelectorAll('.e-cellselectionbackground')).\n            filter(function (ele) { return ele.style.display === ''; });\n        if (cells.length) {\n            var start = cells[0];\n            var end = cells[cells.length - 1];\n            var stOff = start.getBoundingClientRect();\n            var endOff = end.getBoundingClientRect();\n            var parentOff = start.offsetParent.getBoundingClientRect();\n            var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2') ? 2 : 0;\n            var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') &&\n                this.isFirstRow(start) ? 1.5 : 0;\n            var leftOffset = this.parent.getFrozenColumns() && (bdrStr === '2' || bdrStr === '4') &&\n                this.isFirstCell(start) ? 1 : 0;\n            if (this.parent.enableRtl) {\n                border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n                border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n            }\n            else {\n                border.style.left = stOff.left - parentOff.left - leftOffset + 'px';\n                border.style.width = endOff.right - stOff.left + leftOffset + 1 + 'px';\n            }\n            border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n            border.style.height = endOff.top - stOff.top > 0 ?\n                (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' :\n                endOff.height + topOffSet - rowHeight + 1 + 'px';\n            this.selectDirection += bdrStr;\n        }\n        else {\n            border.style.display = 'none';\n        }\n    };\n    Selection.prototype.positionBorders = function () {\n        this.updateStartEndCells();\n        if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n            return;\n        }\n        this.selectDirection = '';\n        this.showHideBorders('');\n        this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n        if (this.parent.getFrozenColumns()) {\n            this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n        }\n        if (this.parent.frozenRows) {\n            this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n            if (this.parent.getFrozenColumns()) {\n                this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n            }\n        }\n        this.applyBorders(this.selectDirection);\n    };\n    Selection.prototype.applyBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        switch (str.length) {\n            case 4:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? '0 2px 2px 0' : '0 0 2px 2px';\n                    this.mcBdrElement.style.borderWidth = rtl ? '0 0 2px 2px' : '0 2px 2px 0';\n                    this.fhBdrElement.style.borderWidth = rtl ? '2px 2px 0 0' : '2px 0 0 2px';\n                    this.mhBdrElement.style.borderWidth = rtl ? '2px 0 0 2px' : '2px 2px 0 0';\n                }\n                break;\n            case 2:\n                {\n                    this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? '2px 2px 2px 0' : '2px 0 2px 2px' : '0 2px 2px 2px';\n                    if (this.parent.getFrozenColumns()) {\n                        this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? '2px 0 2px 2px' : '2px 2px 2px 0' : '0 2px 2px 2px';\n                    }\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = str.includes('1') ? '2px 2px 0 2px' : rtl ? '2px 2px 2px 0' : '2px 0 2px 2px';\n                        if (this.parent.getFrozenColumns()) {\n                            this.mhBdrElement.style.borderWidth = str.includes('2') ? '2px 2px 0 2px' : rtl ? '2px 0 2px 2px' : '2px 2px 2px 0';\n                        }\n                    }\n                }\n                break;\n            default:\n                this.bdrElement.style.borderWidth = '2px';\n                if (this.parent.getFrozenColumns()) {\n                    this.mcBdrElement.style.borderWidth = '2px';\n                }\n                if (this.parent.frozenRows) {\n                    this.fhBdrElement.style.borderWidth = '2px';\n                    if (this.parent.getFrozenColumns()) {\n                        this.mhBdrElement.style.borderWidth = '2px';\n                    }\n                }\n                break;\n        }\n    };\n    Selection.prototype.createBorders = function () {\n        if (!this.bdrElement) {\n            this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n                className: 'e-xlsel', id: this.parent.element.id + '_bdr',\n                styles: 'width: 2px; border-width: 0;'\n            }));\n            if (this.parent.getFrozenColumns()) {\n                this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n                    className: 'e-xlsel', id: this.parent.element.id + '_mcbdr',\n                    styles: 'height: 2px; border-width: 0;'\n                }));\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_fhbdr', styles: 'height: 2px;' }));\n            }\n            if (this.parent.frozenRows && this.parent.getFrozenColumns()) {\n                this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_mhbdr', styles: 'height: 2px;' }));\n            }\n        }\n    };\n    Selection.prototype.showHideBorders = function (display) {\n        if (this.bdrElement) {\n            this.bdrElement.style.display = display;\n            if (this.parent.getFrozenColumns()) {\n                this.mcBdrElement.style.display = display;\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement.style.display = display;\n            }\n            if (this.parent.frozenRows && this.parent.getFrozenColumns()) {\n                this.mhBdrElement.style.display = display;\n            }\n        }\n    };\n    Selection.prototype.drawAFBorders = function () {\n        if (!this.bdrAFBottom) {\n            this.createAFBorders();\n        }\n        this.positionAFBorders();\n    };\n    Selection.prototype.positionAFBorders = function () {\n        if (!this.startCell || !this.bdrAFLeft) {\n            return;\n        }\n        var stOff = this.startAFCell.getBoundingClientRect();\n        var endOff = this.endAFCell.getBoundingClientRect();\n        var top = endOff.top - stOff.top > 0 ? 1 : 0;\n        var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, 'e-movablecontent') ||\n            parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n        var firstCellLeft = (parentsUntil(this.startAFCell, 'e-movablecontent') ||\n            parentsUntil(this.startAFCell, 'e-movableheader')) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n        var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, 'e-movablecontent') ||\n            parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n        var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n        var parentRect = this.parent.element.getBoundingClientRect();\n        var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n        var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n        var scrollTop = sTop - this.startAFCell.offsetTop;\n        var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n        scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n        scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n        var left = stOff.left - parentRect.left;\n        if (!this.parent.enableRtl) {\n            this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n            this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n            this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10)\n                - firstCellLeft + 1 + 'px';\n        }\n        else {\n            var scrolloffSet = (parentsUntil(this.startAFCell, 'e-movablecontent') ||\n                parentsUntil(this.startAFCell, 'e-movableheader')) ? stOff.right -\n                this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width -\n                parentRect.left : 0;\n            this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n            this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n            this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10)\n                - firstCellLeft + 1 + 'px';\n        }\n        this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n        this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ?\n            (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' :\n            endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n        this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n        this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n        this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n        this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n        this.bdrAFBottom.style.width = this.bdrAFTop.style.width;\n    };\n    Selection.prototype.createAFBorders = function () {\n        if (!this.bdrAFLeft) {\n            this.bdrAFLeft = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafleft', styles: 'width: 2px;' }));\n            this.bdrAFRight = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafright', styles: 'width: 2px;' }));\n            this.bdrAFBottom = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafbottom', styles: 'height: 2px;' }));\n            this.bdrAFTop = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdraftop', styles: 'height: 2px;' }));\n        }\n    };\n    Selection.prototype.showAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = '';\n            this.bdrAFRight.style.display = '';\n            this.bdrAFBottom.style.display = '';\n            this.bdrAFTop.style.display = '';\n        }\n    };\n    Selection.prototype.hideAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = 'none';\n            this.bdrAFRight.style.display = 'none';\n            this.bdrAFBottom.style.display = 'none';\n            this.bdrAFTop.style.display = 'none';\n        }\n    };\n    Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n        var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n        if (!args.cancel) {\n            var col = this.parent.getColumnByIndex(cIdx);\n            if (this.parent.editModule && cell) {\n                if (col.type === 'number') {\n                    this.parent.editModule.updateCell(rIdx, col.field, parseInt(args.value, 10));\n                }\n                else {\n                    this.parent.editModule.updateCell(rIdx, col.field, args.value);\n                }\n            }\n        }\n    };\n    Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n        var col = this.parent.getColumnByIndex(colIndex);\n        var args = {\n            column: col,\n            value: cell.innerText\n        };\n        this.parent.trigger(events.beforeAutoFill, args);\n        return args;\n    };\n    Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n        var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll('.e-cellselectionbackground'));\n        if (this.parent.getFrozenColumns()) {\n            cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll('.e-cellselectionbackground')));\n        }\n        return cells;\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n        var startrowIdx = parseInt(parentsUntil(this.startAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        var startCellIdx = parseInt(this.startAFCell.getAttribute('aria-colindex'), 10);\n        var endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n        var endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n        var rowLen = this.selectedRowCellIndexes.length - 1;\n        var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n        var col;\n        switch (true) { //direction         \n            case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') &&\n                !!parentsUntil(e.target, 'e-rowcell'):\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n                this.drawAFBorders();\n                break;\n            case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n                endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n                && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx: //right top\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n                endrowIdx = parseInt(parentsUntil(this.endAFCell, 'e-row').getAttribute('aria-rowindex'), 10);\n                endCellIdx = parseInt(this.endAFCell.getAttribute('aria-colindex'), 10);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var cellIdx = parseInt(this.endCell.getAttribute('aria-colindex'), 10);\n                    for (var i = startrowIdx; i <= endrowIdx; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        var c = 0;\n                        for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: this.startCellIndex }, { rowIndex: endrowIdx, cellIndex: endCellIdx });\n                }\n                break;\n            case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n                startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n                startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx: // left bottom\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        cells.reverse();\n                        var c = 0;\n                        for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: endCellIdx }, { rowIndex: startrowIdx + rowLen, cellIndex: this.startCellIndex + colLen });\n                }\n                break;\n            case startrowIdx > endrowIdx: //up\n                this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n                    var r = trIdx;\n                    for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n                        if (r === this.startIndex - 1) {\n                            r = trIdx;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        var c = 0;\n                        r--;\n                        for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: endrowIdx, cellIndex: startCellIdx + colLen }, { rowIndex: startrowIdx + rowLen, cellIndex: startCellIdx });\n                }\n                break;\n            default: //down\n                this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute('aria-rowindex'), 10);\n                    var r = this.startIndex;\n                    for (var i = trIdx + 1; i <= endrowIdx; i++) {\n                        if (r === trIdx + 1) {\n                            r = this.startIndex;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        r++;\n                        var c = 0;\n                        for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n                            this.updateValue(i, m, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: trIdx - rowLen, cellIndex: startCellIdx }, { rowIndex: endrowIdx, cellIndex: startCellIdx + colLen });\n                }\n                break;\n        }\n    };\n    Selection.prototype.mouseUpHandler = function (e) {\n        document.body.classList.remove('e-disableuserselect');\n        if (this.element) {\n            remove(this.element);\n        }\n        if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n            this.mUPTarget = parentsUntil(e.target, 'e-rowcell');\n        }\n        else {\n            this.mUPTarget = null;\n        }\n        if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell') {\n            var target = e.target;\n            var rowIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n            var cellIndex = parseInt(target.getAttribute('aria-colindex'), 10);\n            this.isDragged = false;\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isDragged = false;\n        this.updateAutoFillPosition();\n        if (this.isAutoFillSel) {\n            var lastCell = parentsUntil(e.target, 'e-rowcell');\n            this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n            this.startAFCell = this.startCell;\n            this.updateStartCellsIndex();\n            this.selectLikeAutoFill(e, true);\n            this.updateAutoFillPosition();\n            this.hideAFBorders();\n            this.positionBorders();\n            this.isAutoFillSel = false;\n        }\n        EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n        if (this.parent.frozenRows) {\n            EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n        }\n        EventHandler.remove(document.body, 'mouseup', this.mouseUpHandler);\n    };\n    Selection.prototype.hideAutoFill = function () {\n        if (this.autofill) {\n            this.autofill.style.display = 'none';\n        }\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.updateAutoFillPosition = function () {\n        if (this.parent.enableAutoFill && !this.parent.isEdit &&\n            this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()\n            && this.selectedRowCellIndexes.length) {\n            var frzCols = this.parent.getFrozenColumns();\n            var index = parseInt(this.target.getAttribute('aria-colindex'), 10);\n            var rindex = parseInt(this.target.getAttribute('index'), 10);\n            var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n            var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) { return ele.style.display === ''; });\n            var isFrozenCol = void 0;\n            var isFrozenRow = void 0;\n            if (frzCols && index >= frzCols) {\n                isFrozenCol = true;\n            }\n            if (rindex < this.parent.frozenRows) {\n                isFrozenRow = true;\n            }\n            if (!parentsUntil(this.target, 'e-table').querySelector('#' + this.parent.element.id + '_autofill')) {\n                if (this.parent.element.querySelector('#' + this.parent.element.id + '_autofill')) {\n                    this.parent.element.querySelector('#' + this.parent.element.id + '_autofill').remove();\n                }\n                this.autofill = createElement('div', { className: 'e-autofill', id: this.parent.element.id + '_autofill' });\n                this.autofill.style.display = 'none';\n                !isFrozenRow ? !isFrozenCol ? this.parent.getContentTable().parentElement.appendChild(this.autofill) :\n                    this.parent.contentModule.getMovableContent().appendChild(this.autofill) :\n                    !isFrozenCol ? this.parent.getHeaderTable().parentElement.appendChild(this.autofill) :\n                        this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n            }\n            var cell = cells[cells.length - 1];\n            if (cell && cell.offsetParent) {\n                var clientRect = cell.getBoundingClientRect();\n                var parentOff = cell.offsetParent.getBoundingClientRect();\n                var colWidth = this.isLastCell(cell) ? 4 : 0;\n                var rowHeight = this.isLastRow(cell) ? 3 : 0;\n                if (!this.parent.enableRtl) {\n                    this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n                }\n                else {\n                    this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n                }\n                this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n            }\n            this.autofill.style.display = '';\n        }\n        else {\n            this.hideAutoFill();\n        }\n    };\n    Selection.prototype.mouseDownHandler = function (e) {\n        this.mouseButton = e.button;\n        var target = e.target;\n        var gObj = this.parent;\n        var isDrag;\n        var gridElement = parentsUntil(target, 'e-grid');\n        if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, 'e-headercontent') && !this.parent.frozenRows) {\n            return;\n        }\n        if (e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n        if (parentsUntil(target, 'e-rowcell') && !e.shiftKey && !e.ctrlKey) {\n            if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n                this.isCellDrag = true;\n                isDrag = true;\n            }\n            else if (gObj.allowRowDragAndDrop && !gObj.isEdit) {\n                if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n                    this.isDragged = false;\n                    return;\n                }\n                isDrag = true;\n                this.element = this.parent.createElement('div', { className: 'e-griddragarea' });\n                gObj.getContent().appendChild(this.element);\n            }\n            if (isDrag) {\n                this.enableDrag(e, true);\n            }\n        }\n        this.updateStartEndCells();\n        if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n            this.isCellDrag = true;\n            this.isAutoFillSel = true;\n            this.enableDrag(e);\n        }\n    };\n    Selection.prototype.updateStartEndCells = function () {\n        var cells = [].slice.call(this.parent.element.querySelectorAll('.e-cellselectionbackground'));\n        this.startCell = cells[0];\n        this.endCell = cells[cells.length - 1];\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n    };\n    Selection.prototype.updateStartCellsIndex = function () {\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute('aria-rowindex'), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n    };\n    Selection.prototype.enableDrag = function (e, isUpdate) {\n        var gObj = this.parent;\n        if (isUpdate) {\n            var tr = closest(e.target, 'tr');\n            this.startDIndex = parseInt(tr.getAttribute('aria-rowindex'), 10);\n            this.startDCellIndex = parseInt(parentsUntil(e.target, 'e-rowcell').getAttribute('aria-colindex'), 10);\n        }\n        document.body.classList.add('e-disableuserselect');\n        var gBRect = gObj.element.getBoundingClientRect();\n        var postion = getPosition(e);\n        this.x = postion.x - gBRect.left;\n        this.y = postion.y - gBRect.top;\n        EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n        if (this.parent.frozenRows) {\n            EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n        }\n        EventHandler.add(document.body, 'mouseup', this.mouseUpHandler, this);\n    };\n    Selection.prototype.clearSelAfterRefresh = function (e) {\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n            this.clearSelection();\n        }\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n        this.parent.on(events.initialEnd, this.initializeSelection, this);\n        this.parent.on(events.rowSelectionComplete, this.onActionComplete, this);\n        this.parent.on(events.cellSelectionComplete, this.onActionComplete, this);\n        this.parent.on(events.inBoundModelChanged, this.onPropertyChanged, this);\n        this.parent.on(events.cellFocused, this.onCellFocused, this);\n        this.parent.on(events.beforeFragAppend, this.clearSelAfterRefresh, this);\n        this.parent.on(events.columnPositionChanged, this.columnPositionChanged, this);\n        this.parent.on(events.contentReady, this.initialEnd, this);\n        this.actionBeginFunction = this.actionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.parent.on(events.rowsRemoved, this.rowsRemoved, this);\n        this.parent.on(events.headerRefreshed, this.refreshHeader, this);\n        this.addEventListener_checkbox();\n    };\n    /**\n     * @hidden\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.uiUpdate, this.enableAfterRender);\n        this.parent.off(events.initialEnd, this.initializeSelection);\n        this.parent.off(events.rowSelectionComplete, this.onActionComplete);\n        this.parent.off(events.cellSelectionComplete, this.onActionComplete);\n        this.parent.off(events.inBoundModelChanged, this.onPropertyChanged);\n        this.parent.off(events.cellFocused, this.onCellFocused);\n        this.parent.off(events.beforeFragAppend, this.clearSelAfterRefresh);\n        this.parent.off(events.columnPositionChanged, this.columnPositionChanged);\n        this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.parent.off(events.rowsRemoved, this.rowsRemoved);\n        this.parent.off(events.headerRefreshed, this.refreshHeader);\n        this.removeEventListener_checkbox();\n    };\n    Selection.prototype.wireEvents = function () {\n        this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n        if (this.isMacOS) {\n            EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n        }\n    };\n    Selection.prototype.unWireEvents = function () {\n        if (this.isMacOS) {\n            EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n        }\n    };\n    Selection.prototype.columnPositionChanged = function () {\n        if (!this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.refreshHeader = function () {\n        this.setCheckAllState();\n    };\n    Selection.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            delete (this.selectedRowState[e.records[i][this.primaryKey]]);\n            --this.totalRecordsCount;\n        }\n        this.setCheckAllState();\n    };\n    ;\n    Selection.prototype.beforeFragAppend = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    ;\n    Selection.prototype.getCheckAllBox = function () {\n        return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n    };\n    Selection.prototype.enableAfterRender = function (e) {\n        if (e.module === this.getModuleName() && e.enable) {\n            this.render();\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.render = function (e) {\n        EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n        EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n    };\n    Selection.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n            if (this.selectedRowCellIndexes.length > 1) {\n                this.clearCellSelection();\n                this.prevCIdxs = undefined;\n            }\n            if (this.selectedRowIndexes.length > 1) {\n                this.clearRowSelection();\n                this.prevRowIndex = undefined;\n            }\n            this.enableSelectMultiTouch = false;\n            this.hidePopUp();\n        }\n        if (!isNullOrUndefined(e.properties.mode) ||\n            !isNullOrUndefined(e.properties.cellSelectionMode)) {\n            this.clearSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n        }\n        this.isPersisted = true;\n        this.checkBoxSelectionChanged();\n        this.isPersisted = false;\n        this.initPerisistSelection();\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length) {\n            gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n        }\n        this.drawBorders();\n    };\n    Selection.prototype.hidePopUp = function () {\n        if (this.parent.element.querySelector('.e-gridpopup').querySelectorAll('.e-rowselect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.initialEnd = function () {\n        this.parent.off(events.contentReady, this.initialEnd);\n        this.selectRow(this.parent.selectedRowIndex);\n    };\n    Selection.prototype.checkBoxSelectionChanged = function () {\n        this.parent.off(events.contentReady, this.checkBoxSelectionChanged);\n        var gobj = this.parent;\n        var checkboxColumn = gobj.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length > 0) {\n            gobj.isCheckBoxSelection = true;\n            this.chkField = checkboxColumn[0].field;\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n            if (isNullOrUndefined(this.totalRecordsCount)) {\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.isSingleSel()) {\n                gobj.selectionSettings.type = 'Multiple';\n                gobj.dataBind();\n            }\n            else {\n                this.initPerisistSelection();\n            }\n        }\n        if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n            this.chkField = null;\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.initPerisistSelection = function () {\n        var gobj = this.parent;\n        if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = true;\n            this.ensureCheckboxFieldSelection();\n        }\n        else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = false;\n            this.ensureCheckboxFieldSelection();\n        }\n        else {\n            gobj.isPersistSelection = false;\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.ensureCheckboxFieldSelection = function () {\n        var gobj = this.parent;\n        this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n        if (!gobj.enableVirtualization && this.chkField\n            && ((gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0) ||\n                !gobj.isPersistSelection)) {\n            var data = this.parent.getDataModule();\n            var query = new Query().where(this.chkField, 'equal', true);\n            if (!query.params) {\n                query.params = this.parent.query.params;\n            }\n            var dataManager = data.getData({}, query);\n            var proxy_1 = this;\n            this.parent.showSpinner();\n            dataManager.then(function (e) {\n                proxy_1.dataSuccess(e.result);\n                proxy_1.refreshPersistSelection();\n                proxy_1.parent.hideSpinner();\n            });\n        }\n    };\n    Selection.prototype.dataSuccess = function (res) {\n        for (var i = 0; i < res.length; i++) {\n            if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n                this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n            }\n        }\n        this.persistSelectedData = res;\n    };\n    Selection.prototype.setRowSelection = function (state) {\n        if (!this.parent.getDataModule().isRemote() && !isBlazor()) {\n            if (state) {\n                if (this.parent.groupSettings.columns.length) {\n                    for (var _i = 0, _a = this.getData().records; _i < _a.length; _i++) {\n                        var data = _a[_i];\n                        this.selectedRowState[data[this.primaryKey]] = true;\n                    }\n                }\n                else {\n                    for (var _b = 0, _c = this.getData(); _b < _c.length; _b++) {\n                        var data = _c[_b];\n                        this.selectedRowState[data[this.primaryKey]] = true;\n                    }\n                }\n            }\n            else {\n                this.selectedRowState = {};\n            }\n            // (this.getData()).forEach(function (data) {\n            //     this.selectedRowState[data[this.primaryKey]] = true;\n            // })\n        }\n    };\n    Selection.prototype.getData = function () {\n        return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n    };\n    Selection.prototype.refreshPersistSelection = function () {\n        var rows = this.parent.getRows();\n        if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n            var indexes = [];\n            for (var j = 0; j < rows.length; j++) {\n                var rowObj = this.getRowObj(rows[j]);\n                var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n                if (pKey === null) {\n                    return;\n                }\n                var checkState = void 0;\n                var chkBox = rows[j].querySelector('.e-checkselect');\n                if (this.selectedRowState[pKey] || (this.parent.checkAllRows === 'Check' && this.chkAllCollec.indexOf(pKey) < 0)\n                    || (this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0)\n                    || (this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField])) {\n                    indexes.push(parseInt(rows[j].getAttribute('aria-rowindex'), 10));\n                    checkState = true;\n                }\n                else {\n                    checkState = false;\n                    if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection) {\n                        removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n                    }\n                }\n                this.updatePersistCollection(rows[j], checkState);\n            }\n            this.isSingleSel() && indexes.length > 0 ? this.selectRow(indexes[0], true) : this.selectRows(indexes);\n        }\n        if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n    };\n    Selection.prototype.actionBegin = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                var row = closest(editChkBox, '.e-editedrow');\n                if (row) {\n                    if (this.parent.editSettings.mode === 'Dialog') {\n                        row = this.parent.element.querySelector('.e-dlgeditrow');\n                    }\n                    var rowObj = this.getRowObj(row);\n                    if (!rowObj) {\n                        return;\n                    }\n                    this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n                }\n                else {\n                    this.isCheckedOnAdd = editChkBox.checked;\n                }\n            }\n        }\n    };\n    Selection.prototype.actionComplete = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            if (e.action === 'add' && this.isCheckedOnAdd) {\n                var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n                this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n            }\n            this.refreshPersistSelection();\n        }\n        if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n            var records = [];\n            if (!isBlazor()) {\n                records = e.data;\n            }\n            else {\n                records = this.getSelectedRecords();\n            }\n            var data = records.slice();\n            for (var i = 0; i < data.length; i++) {\n                if (!isNullOrUndefined(data[i][this.primaryKey])) {\n                    this.updatePersistDelete(data[i][this.primaryKey]);\n                }\n            }\n            this.setCheckAllState();\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (e.requestType === 'paging') {\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n        }\n    };\n    Selection.prototype.onDataBound = function () {\n        if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n        if (this.parent.enableVirtualization) {\n            this.setCheckAllState();\n        }\n    };\n    Selection.prototype.updatePersistSelectedData = function (checkState) {\n        if (this.parent.isPersistSelection) {\n            var rows = this.parent.getRows();\n            for (var i = 0; i < rows.length; i++) {\n                this.updatePersistCollection(rows[i], checkState);\n            }\n            if (this.parent.checkAllRows === 'Uncheck') {\n                this.setRowSelection(false);\n                this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n            }\n            else if (this.parent.checkAllRows === 'Check') {\n                this.setRowSelection(true);\n                this.persistSelectedData = (!this.parent.getDataModule().isRemote() && !isBlazor()) ?\n                    this.parent.groupSettings.columns.length ? this.getData().records.slice() :\n                        this.getData().slice() : this.persistSelectedData;\n            }\n        }\n    };\n    Selection.prototype.checkSelectAllAction = function (checkState) {\n        var cRenderer = this.getRenderer();\n        var editForm = this.parent.element.querySelector('.e-gridform');\n        this.checkedTarget = this.getCheckAllBox();\n        if (checkState && this.getCurrentBatchRecordChanges().length) {\n            this.parent.checkAllRows = 'Check';\n            this.updatePersistSelectedData(checkState);\n            if (isBlazor() && this.parent.enableVirtualization &&\n                !isNullOrUndefined(this.parent.contentModule.currentInfo.endIndex)) {\n                this.selectRowsByRange(this.parent.contentModule.currentInfo.startIndex, this.parent.contentModule.currentInfo.endIndex);\n            }\n            else {\n                this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n            }\n        }\n        else {\n            this.parent.checkAllRows = 'Uncheck';\n            this.updatePersistSelectedData(checkState);\n            this.clearSelection();\n        }\n        this.chkAllCollec = [];\n        if (!isNullOrUndefined(editForm)) {\n            var editChkBox = editForm.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n            }\n        }\n    };\n    Selection.prototype.checkSelectAll = function (checkBox) {\n        var _this = this;\n        var stateStr = this.getCheckAllStatus(checkBox);\n        var state = stateStr === 'Check';\n        this.isHeaderCheckboxClicked = true;\n        if (stateStr === 'Intermediate') {\n            state = this.getCurrentBatchRecordChanges().some(function (data) {\n                return data[_this.primaryKey] in _this.selectedRowState;\n            });\n        }\n        if (this.parent.isPersistSelection && this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        this.checkSelectAllAction(!state);\n        if (isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization) {\n            var interopAdaptor = 'interopAdaptor';\n            var invokeMethodAsync = 'invokeMethodAsync';\n            this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', !state, 'checkbox', null);\n            this.checkBoxState = !state;\n            if (!state) {\n                var values = 'values';\n                var vgenerator = 'vgenerator';\n                var rowCache = this.parent.contentModule[vgenerator].rowCache;\n                Object[values](rowCache).forEach(function (x) { return x.isSelected = true; });\n                for (var i = 0; i < Object.keys(rowCache).length; i++) {\n                    if (this.parent.selectionModule.selectedRowIndexes.indexOf(Number(Object.keys(rowCache)[i])) === -1) {\n                        this.parent.selectionModule.selectedRowIndexes.push(Number(Object.keys(rowCache)[i]));\n                    }\n                }\n            }\n        }\n        this.target = null;\n        if (this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n        this.triggerChkChangeEvent(checkBox, !state);\n    };\n    Selection.prototype.getCheckAllStatus = function (ele) {\n        var classes = ele ? ele.nextElementSibling.classList :\n            this.getCheckAllBox().nextElementSibling.classList;\n        var status;\n        if (classes.contains('e-check')) {\n            status = 'Check';\n        }\n        else if (classes.contains('e-uncheck')) {\n            status = 'Uncheck';\n        }\n        else if (classes.contains('e-stop')) {\n            status = 'Intermediate';\n        }\n        else {\n            status = 'None';\n        }\n        return status;\n    };\n    Selection.prototype.checkSelect = function (checkBox) {\n        var target = closest(this.checkedTarget, '.e-rowcell');\n        var checkObj = checkBox;\n        var gObj = this.parent;\n        this.isMultiCtrlRequest = true;\n        var rIndex = 0;\n        this.isHeaderCheckboxClicked = false;\n        if (isGroupAdaptive(gObj)) {\n            var uid = target.parentElement.getAttribute('data-uid');\n            rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n        }\n        else {\n            rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n        }\n        if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n            ++rIndex;\n        }\n        this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n        this.moveIntoUncheckCollection(closest(target, '.e-row'));\n        this.setCheckAllState();\n        this.isMultiCtrlRequest = false;\n        this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n    };\n    Selection.prototype.moveIntoUncheckCollection = function (row) {\n        if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n            var rowObj = this.getRowObj(row);\n            var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (!pKey) {\n                return;\n            }\n            if (this.chkAllCollec.indexOf(pKey) < 0) {\n                this.chkAllCollec.push(pKey);\n            }\n            else {\n                this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n        this.parent.trigger(events.checkBoxChange, {\n            checked: checkState, selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n            target: checkBox\n        });\n        if (!this.parent.isEdit) {\n            this.checkedTarget = null;\n        }\n    };\n    Selection.prototype.updateSelectedRowIndex = function (index) {\n        if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n            && !this.parent.getDataModule().isRemote()\n            && !(isBlazor() && this.parent.isServerRendered)) {\n            if (this.parent.checkAllRows === 'Check') {\n                this.selectedRowIndexes = [];\n                var dataLength = this.getData().length;\n                for (var data = 0; data < dataLength; data++) {\n                    this.selectedRowIndexes.push(data);\n                }\n            }\n            else if (this.parent.checkAllRows === 'Uncheck') {\n                this.selectedRowIndexes = [];\n            }\n            else {\n                if (index && this.parent.getRowByIndex(index).getAttribute('aria-selected') === 'false') {\n                    var selectedVal = this.selectedRowIndexes.indexOf(index);\n                    this.selectedRowIndexes.splice(selectedVal, 1);\n                }\n            }\n        }\n    };\n    ;\n    Selection.prototype.setCheckAllState = function (index, isInteraction) {\n        if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            var checkToSelectAll = void 0;\n            var isServerRenderedVirtualization = isBlazor() && this.parent.isServerRendered && this.parent.enableVirtualization;\n            if (isServerRenderedVirtualization) {\n                var values = 'values';\n                var vgenerator = 'vgenerator';\n                checkToSelectAll = !Object[values](this.parent.contentModule[vgenerator].rowCache).\n                    filter(function (x) { return x.isSelected === undefined || x.isSelected === false; }).length &&\n                    Object[values](this.parent.contentModule[vgenerator].rowCache).\n                        filter(function (x) { return x.isSelected; }).length === this.selectedRowIndexes.length;\n            }\n            var checkedLen = Object.keys(this.selectedRowState).length;\n            if (!this.parent.isPersistSelection && !(isServerRenderedVirtualization)) {\n                checkedLen = this.selectedRowIndexes.length;\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.getCheckAllBox()) {\n                var spanEle = this.getCheckAllBox().nextElementSibling;\n                removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                if (checkToSelectAll || checkedLen === this.totalRecordsCount && this.totalRecordsCount\n                    || ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                        && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()\n                        && !(isBlazor() && this.parent.isServerRendered)\n                        && checkedLen === this.getData().length)) {\n                    addClass([spanEle], ['e-check']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, true, true);\n                    }\n                    this.parent.checkAllRows = 'Check';\n                }\n                else if (isServerRenderedVirtualization && !this.selectedRowIndexes.length ||\n                    checkedLen === 0 && !isServerRenderedVirtualization || this.getCurrentBatchRecordChanges().length === 0) {\n                    addClass([spanEle], ['e-uncheck']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, false, true);\n                    }\n                    this.parent.checkAllRows = 'Uncheck';\n                    if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                        addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                    else {\n                        removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                }\n                else {\n                    addClass([spanEle], ['e-stop']);\n                    this.parent.checkAllRows = 'Intermediate';\n                }\n                if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                    && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n                    this.updateSelectedRowIndex(index);\n                }\n            }\n        }\n    };\n    Selection.prototype.keyDownHandler = function (e) {\n        // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = true;\n        }\n    };\n    Selection.prototype.keyUpHandler = function (e) {\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = false;\n        }\n    };\n    Selection.prototype.clickHandler = function (e) {\n        var target = e.target;\n        this.actualTarget = target;\n        if (parentsUntil(target, 'e-row') || parentsUntil(target, 'e-headerchkcelldiv')) {\n            this.isInteracted = true;\n        }\n        this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch ||\n            (this.isMacOS && this.cmdKeyPressed);\n        this.isMultiShiftRequest = e.shiftKey;\n        this.popUpClickHandler(e);\n        var chkSelect = false;\n        this.preventFocus = true;\n        var checkBox;\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        this.checkSelectAllClicked = checkWrap && checkWrap.querySelectorAll('.e-checkselectall') ? true : false;\n        if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            chkSelect = true;\n        }\n        this.drawBorders();\n        this.updateAutoFillPosition();\n        target = parentsUntil(target, 'e-rowcell');\n        if ((target && target.parentElement.classList.contains('e-row') && !this.parent.selectionSettings.checkboxOnly) || chkSelect) {\n            if (this.parent.isCheckBoxSelection) {\n                this.isMultiCtrlRequest = true;\n            }\n            this.target = target;\n            if (!isNullOrUndefined(checkBox)) {\n                this.checkedTarget = checkBox;\n                if (checkBox.classList.contains('e-checkselectall')) {\n                    this.checkSelectAll(checkBox);\n                }\n                else {\n                    this.checkSelect(checkBox);\n                }\n            }\n            else {\n                var gObj = this.parent;\n                var rIndex = 0;\n                if (isGroupAdaptive(gObj)) {\n                    var uid = target.parentElement.getAttribute('data-uid');\n                    rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n                }\n                else {\n                    rIndex = parseInt(target.parentElement.getAttribute('aria-rowindex'), 10);\n                }\n                if (this.parent.isPersistSelection && this.parent.element.querySelectorAll('.e-addedrow').length > 0) {\n                    ++rIndex;\n                }\n                if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n                    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute('aria-colindex'), 10));\n                }\n                this.parent.hoverFrozenRows(e);\n                if (this.parent.isCheckBoxSelection) {\n                    this.moveIntoUncheckCollection(closest(target, '.e-row'));\n                    this.setCheckAllState();\n                }\n            }\n            if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n                this.showPopup(e);\n            }\n        }\n        this.isMultiCtrlRequest = false;\n        this.isMultiShiftRequest = false;\n        if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n            this.preventFocus = false;\n        }\n    };\n    Selection.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains('e-rowcell') ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-rowselect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSelectMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSelectMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.showPopup = function (e) {\n        if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' +\n                (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1)\n                    || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n        }\n    };\n    Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            if (!this.isDragged) {\n                this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n            }\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, this.selectionSettings.enableToggle);\n            if (this.selectedRowCellIndexes.length) {\n                this.updateAutoFillPosition();\n            }\n            this.drawBorders();\n        }\n        else if (this.isMultiShiftRequest) {\n            if (this.parent.isCheckBoxSelection || (!this.parent.isCheckBoxSelection &&\n                !closest(this.target, '.e-rowcell').classList.contains('e-gridchkbox'))) {\n                this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n            }\n            else {\n                this.addRowsToSelection([rowIndex]);\n            }\n            this.selectCellsByRange(isUndefined(this.prevCIdxs) ? { rowIndex: rowIndex, cellIndex: cellIndex } : this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.updateAutoFillPosition();\n            this.drawBorders();\n        }\n        else {\n            this.addRowsToSelection([rowIndex]);\n            if (isBlazor() && this.parent.enableVirtualization && this.parent.isServerRendered) {\n                var rowIndexes = this.parent.getSelectedRowIndexes();\n                var interopAdaptor = 'interopAdaptor';\n                var invokeMethodAsync = 'invokeMethodAsync';\n                this.parent[interopAdaptor][invokeMethodAsync]('MaintainSelection', true, 'normal', rowIndexes);\n            }\n            this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);\n            this.showHideBorders('none');\n        }\n        this.isDragged = false;\n    };\n    Selection.prototype.onCellFocused = function (e) {\n        if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n            if (e.keyArgs.action === 'upArrow') {\n                if (this.parent.allowFiltering) {\n                    e.isJump = e.element.tagName === 'INPUT' ? true : false;\n                }\n                else {\n                    e.isJump = e.element.tagName === 'TH' ? true : false;\n                }\n            }\n            else {\n                if (e.keyArgs.action === 'downArrow') {\n                    var rIdx = Number(e.element.parentElement.getAttribute('aria-rowindex'));\n                    e.isJump = rIdx === 0 ? true : false;\n                }\n                else {\n                    if (e.keyArgs.action === 'ctrlHome') {\n                        e.isJump = true;\n                    }\n                }\n            }\n        }\n        var clear = this.parent.getFrozenColumns() ? (((e.container.isHeader && e.element.tagName !== 'TD' && e.isJump) ||\n            ((e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')))\n            && !(e.byKey && e.keyArgs.action === 'space')) : ((e.container.isHeader && e.isJump) ||\n            (e.container.isContent && !e.container.isSelectable)) && !(e.byKey && e.keyArgs.action === 'space');\n        var headerAction = (e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.e-rowcell'))\n            && !(e.byKey && e.keyArgs.action === 'space');\n        if (!e.byKey || clear) {\n            if (clear && !this.parent.isCheckBoxSelection) {\n                this.clearSelection();\n            }\n            return;\n        }\n        var _a = e.container.isContent ? e.container.indexes : e.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var prev = this.focus.getPrevIndexes();\n        if (this.parent.frozenRows) {\n            if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.e-rowcell'))) {\n                var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n                rowIndex -= thLen;\n                prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n            }\n            else {\n                rowIndex += this.parent.frozenRows;\n                prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n            }\n        }\n        if (this.parent.getFrozenColumns()) {\n            var cIdx = Number(e.element.getAttribute('aria-colindex'));\n            var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n            if (selectedIndexes.length && prev.cellIndex === 0) {\n                prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n            }\n            prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? (prev.cellIndex === cellIndex ? cIdx : cIdx - 1) : null;\n            cellIndex = cIdx;\n        }\n        if (headerAction || (['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 && e.keyArgs.action !== 'space' &&\n            rowIndex === prev.rowIndex && cellIndex === prev.cellIndex)) {\n            return;\n        }\n        this.preventFocus = true;\n        switch (e.keyArgs.action) {\n            case 'downArrow':\n            case 'upArrow':\n            case 'enter':\n            case 'shiftEnter':\n                this.target = e.element;\n                this.applyDownUpKey(rowIndex, cellIndex);\n                break;\n            case 'rightArrow':\n            case 'leftArrow':\n                this.applyRightLeftKey(rowIndex, cellIndex);\n                break;\n            case 'shiftDown':\n            case 'shiftUp':\n                this.shiftDownKey(rowIndex, cellIndex);\n                break;\n            case 'shiftLeft':\n            case 'shiftRight':\n                this.applyShiftLeftRightKey(rowIndex, cellIndex);\n                break;\n            case 'home':\n            case 'end':\n                cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n                this.applyHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'ctrlHome':\n            case 'ctrlEnd':\n                this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlPlusA':\n                this.ctrlPlusA();\n                break;\n            case 'space':\n                this.applySpaceSelection(e.element);\n                break;\n            case 'tab':\n                if (this.parent.editSettings.allowNextRowEdit) {\n                    this.selectRow(rowIndex);\n                }\n                break;\n        }\n        this.preventFocus = false;\n        this.positionBorders();\n        this.updateAutoFillPosition();\n    };\n    /**\n     * Apply ctrl + A key selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.ctrlPlusA = function () {\n        if (this.isRowType() && !this.isSingleSel()) {\n            this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: this.parent.getRows().length - 1, cellIndex: this.parent.getColumns().length - 1 });\n        }\n    };\n    Selection.prototype.applySpaceSelection = function (target) {\n        if (target.classList.contains('e-checkselectall')) {\n            this.checkedTarget = target;\n            this.checkSelectAll(this.checkedTarget);\n        }\n        else {\n            if (target.classList.contains('e-checkselect')) {\n                this.checkedTarget = target;\n                this.checkSelect(this.checkedTarget);\n            }\n        }\n    };\n    Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n            this.checkSelectAllAction(false);\n            this.checkedTarget = null;\n        }\n        if (this.isRowType()) {\n            if (this.parent.frozenRows) {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n            else {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.applyUpDown = function (rowIndex) {\n        if (rowIndex < 0) {\n            return;\n        }\n        if (!this.target) {\n            this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n        }\n        var cIndex = parseInt(this.target.getAttribute('aria-colindex'), 10);\n        var frzCols = this.parent.getFrozenColumns();\n        if (frzCols) {\n            if (cIndex >= frzCols) {\n                this.target =\n                    this.contentRenderer.getMovableRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex - frzCols];\n            }\n            else {\n                this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n            }\n        }\n        else {\n            this.target = this.contentRenderer.getRowByIndex(rowIndex).querySelectorAll('.e-rowcell')[cIndex];\n        }\n        this.addAttribute(this.target);\n    };\n    Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n            this.addAttribute(this.target);\n        }\n    };\n    Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        else {\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n    };\n    /**\n     * Apply shift+down key selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        this.isMultiShiftRequest = true;\n        if (this.isRowType() && !this.isSingleSel()) {\n            if (!isUndefined(this.prevRowIndex)) {\n                this.selectRowsByRange(this.prevRowIndex, rowIndex);\n                this.applyUpDown(rowIndex);\n            }\n            else {\n                this.selectRow(0, true);\n            }\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange(this.prevCIdxs || { rowIndex: 0, cellIndex: 0 }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        this.isMultiShiftRequest = true;\n        this.selectCellsByRange(this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isRowType()) {\n            this.selectRow(rowIndex, true);\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        if (row) {\n            var cells = [].slice.call(row.querySelectorAll('.e-rowcell'));\n            var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n            var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n            if (detailIndentCell) {\n                cells.push(detailIndentCell);\n            }\n            if (dragdropIndentCell) {\n                cells.push(dragdropIndentCell);\n            }\n            addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n        }\n        this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n    };\n    Selection.prototype.isRowType = function () {\n        return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isCellType = function () {\n        return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isSingleSel = function () {\n        return this.selectionSettings.type === 'Single';\n    };\n    Selection.prototype.getRenderer = function () {\n        if (isNullOrUndefined(this.contentRenderer)) {\n            this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n        }\n        return this.contentRenderer;\n    };\n    /**\n     * Gets the collection of selected records.\n     * @return {Object[]}\n     */\n    Selection.prototype.getSelectedRecords = function () {\n        var selectedData = [];\n        if (!this.selectionSettings.persistSelection) {\n            selectedData = this.parent.getRowsObject().filter(function (row) { return row.isSelected; })\n                .map(function (m) { return m.data; });\n        }\n        else {\n            selectedData = this.persistSelectedData;\n        }\n        return selectedData;\n    };\n    Selection.prototype.addEventListener_checkbox = function () {\n        var _this = this;\n        this.parent.on(events.dataReady, this.dataReady, this);\n        this.onDataBoundFunction = this.onDataBound.bind(this);\n        this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n        this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n        this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.on(events.click, this.clickHandler, this);\n        this.resizeEndFn = function () {\n            _this.updateAutoFillPosition();\n            _this.drawBorders();\n        };\n        this.resizeEndFn.bind(this);\n        this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n    };\n    Selection.prototype.removeEventListener_checkbox = function () {\n        this.parent.off(events.dataReady, this.dataReady);\n        this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n        this.parent.off(events.click, this.clickHandler);\n    };\n    Selection.prototype.setCheckAllForEmptyGrid = function () {\n        var checkAllBox = this.getCheckAllBox();\n        if (checkAllBox) {\n            this.parent.isCheckBoxSelection = true;\n            var spanEle = checkAllBox.nextElementSibling;\n            removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        }\n    };\n    Selection.prototype.dataReady = function (e) {\n        this.isHeaderCheckboxClicked = false;\n        var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n            this.disableUI = true;\n            this.clearSelection();\n            this.setCheckAllState();\n            this.disableUI = false;\n        }\n    };\n    Selection.prototype.actionCompleteHandler = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n    };\n    Selection.prototype.selectRowIndex = function (index) {\n        this.parent.isSelectedRowIndexUpdating = true;\n        this.parent.selectedRowIndex = index;\n    };\n    Selection.prototype.disableInteracted = function () {\n        this.isInteracted = false;\n    };\n    Selection.prototype.activeTarget = function () {\n        this.actualTarget = this.isInteracted ? this.actualTarget : null;\n    };\n    return Selection;\n}());\nexport { Selection };\n"]},"metadata":{},"sourceType":"module"}