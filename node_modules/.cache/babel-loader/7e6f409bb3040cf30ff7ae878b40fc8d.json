{"ast":null,"code":"import { Droppable, isBlazor, addClass } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, remove, updateBlazorTemplate, removeClass } from '@syncfusion/ej2-base';\nimport { getUpdateUsingRaf, appendChildren } from '../base/util';\nimport * as events from '../base/constant';\nimport { Row } from '../models/row';\nimport { RowRenderer } from './row-renderer';\nimport { CellMergeRender } from './cell-merge-renderer';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport { getScrollBarWidth, isGroupAdaptive } from '../base/util';\n/**\n * Content module is used to render grid content\n * @hidden\n */\n\nvar ContentRender =\n/** @class */\nfunction () {\n  /**\n   * Constructor for content renderer module\n   */\n  function ContentRender(parent, serviceLocator) {\n    var _this = this;\n\n    this.rows = [];\n    this.freezeRows = [];\n    this.movableRows = [];\n    this.freezeRowElements = [];\n    /** @hidden */\n\n    this.currentInfo = {};\n    this.isLoaded = true;\n    this.viewColIndexes = [];\n\n    this.drop = function (e) {\n      _this.parent.notify(events.columnDrop, {\n        target: e.target,\n        droppedElement: e.droppedElement\n      });\n\n      remove(e.droppedElement);\n    };\n\n    this.infiniteCache = {};\n    this.isRemove = false;\n    this.visibleRows = [];\n    this.visibleFrozenRows = [];\n    this.isAddRows = false;\n    this.isInfiniteFreeze = false;\n\n    this.rafCallback = function (args) {\n      var arg = args;\n      return function () {\n        if (_this.parent.getFrozenColumns() && _this.parent.enableVirtualization) {\n          var mContentRows = [].slice.call(_this.parent.getMovableVirtualContent().querySelectorAll('.e-row'));\n          var fContentRows = [].slice.call(_this.parent.getFrozenVirtualContent().querySelectorAll('.e-row'));\n          _this.isLoaded = !mContentRows ? false : mContentRows.length === fContentRows.length;\n\n          if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && _this.isLoaded) {\n            var mHdr = [].slice.call(_this.parent.getMovableVirtualHeader().querySelectorAll('.e-row'));\n            var fHdr = [].slice.call(_this.parent.getFrozenVirtualHeader().querySelectorAll('.e-row'));\n            _this.isLoaded = mHdr.length === fHdr.length;\n          }\n        }\n\n        _this.ariaService.setBusy(_this.getPanel().querySelector('.e-content'), false);\n\n        if (_this.parent.isDestroyed) {\n          return;\n        }\n\n        var rows = _this.rows.slice(0);\n\n        if (_this.parent.getFrozenColumns() !== 0) {\n          rows = args.isFrozen ? _this.freezeRows : _this.movableRows;\n        }\n\n        _this.parent.notify(events.contentReady, {\n          rows: rows,\n          args: arg\n        });\n\n        if (_this.isLoaded) {\n          _this.parent.trigger(events.dataBound, {}, function () {\n            if (_this.parent.allowTextWrap) {\n              _this.parent.notify(events.freezeRender, {\n                case: 'textwrap'\n              });\n            }\n          });\n        }\n\n        if (arg) {\n          var action = (arg.requestType || '').toLowerCase() + '-complete';\n\n          _this.parent.notify(action, arg);\n\n          if (args.requestType === 'batchsave') {\n            args.cancel = false;\n\n            _this.parent.trigger(events.actionComplete, args);\n          }\n        }\n\n        if (_this.isLoaded) {\n          _this.parent.hideSpinner();\n        }\n      };\n    };\n\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.ariaService = this.serviceLocator.getService('ariaService');\n    this.generator = this.getModelGenerator();\n\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization) {\n      this.parent.on(events.columnVisibilityChanged, this.setVisible, this);\n    }\n\n    this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);\n    this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n    this.parent.on(events.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n    this.parent.on(events.beforeCellFocused, this.beforeCellFocused, this);\n  }\n\n  ContentRender.prototype.beforeCellFocused = function (e) {\n    if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n      this.pressedKey = e.keyArgs.action;\n    } else {\n      this.pressedKey = undefined;\n    }\n  };\n  /**\n   * The function is used to render grid content div\n   */\n\n\n  ContentRender.prototype.renderPanel = function () {\n    var gObj = this.parent;\n    var div = this.parent.element.querySelector('.e-gridcontent');\n\n    if (div) {\n      this.ariaService.setOptions(this.parent.element.querySelector('.e-content'), {\n        busy: false\n      });\n      this.setPanel(div);\n      return;\n    }\n\n    div = this.parent.createElement('div', {\n      className: 'e-gridcontent'\n    });\n    var innerDiv = this.parent.createElement('div', {\n      className: 'e-content'\n    });\n    this.ariaService.setOptions(innerDiv, {\n      busy: false\n    });\n    div.appendChild(innerDiv);\n    this.setPanel(div);\n    gObj.element.appendChild(div);\n  };\n  /**\n   * The function is used to render grid content table\n   */\n\n\n  ContentRender.prototype.renderTable = function () {\n    var contentDiv = this.getPanel();\n    var virtualTable = contentDiv.querySelector('.e-virtualtable');\n    var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n\n    if (this.parent.enableVirtualization && !isNullOrUndefined(virtualTable) && !isNullOrUndefined(virtualTrack) && (!isBlazor() || isBlazor() && !this.parent.isServerRendered)) {\n      remove(virtualTable);\n      remove(virtualTrack);\n    }\n\n    contentDiv.appendChild(this.createContentTable('_content_table'));\n    this.setTable(contentDiv.querySelector('.e-table'));\n    this.ariaService.setOptions(this.getTable(), {\n      multiselectable: this.parent.selectionSettings.type === 'Multiple'\n    });\n    this.initializeContentDrop();\n\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().classList.add('e-frozenhdrcont');\n    }\n  };\n  /**\n   * The function is used to create content table elements\n   * @return {Element}\n   * @hidden\n   */\n\n\n  ContentRender.prototype.createContentTable = function (id) {\n    var innerDiv = this.getPanel().firstElementChild;\n\n    if (!isBlazor()) {\n      if (this.getTable()) {\n        remove(this.getTable());\n      }\n    }\n\n    var table = innerDiv.querySelector('.e-table') ? innerDiv.querySelector('.e-table') : this.parent.createElement('table', {\n      className: 'e-table',\n      attrs: {\n        cellspacing: '0.25px',\n        role: 'grid',\n        id: this.parent.element.id + id\n      }\n    });\n    this.setColGroup(this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true));\n    table.appendChild(this.getColGroup());\n    table.appendChild(this.parent.createElement('tbody'));\n    innerDiv.appendChild(table);\n    return innerDiv;\n  };\n\n  ContentRender.prototype.splitRows = function (idx) {\n    if (this.parent.getFrozenColumns()) {\n      if (idx === 0) {\n        this.freezeRows = this.rows;\n        this.freezeRowElements = this.rowElements;\n      } else {\n        this.movableRows = this.rows;\n      }\n    }\n  };\n  /**\n   * Refresh the content of the Grid.\n   * @return {void}\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  ContentRender.prototype.refreshContentRows = function (args) {\n    var _this = this;\n\n    if (args === void 0) {\n      args = {};\n    }\n\n    var gObj = this.parent;\n\n    if (gObj.currentViewData.length === 0) {\n      return;\n    }\n\n    var dataSource = this.currentMovableRows || gObj.currentViewData;\n    var frag = document.createDocumentFragment();\n\n    if (!this.initialPageRecords) {\n      this.initialPageRecords = extend([], dataSource);\n    }\n\n    var hdrfrag = document.createDocumentFragment();\n    var columns = gObj.getColumns();\n    var tr;\n    var hdrTbody;\n    var frzCols = gObj.getFrozenColumns();\n    var trElement;\n    var row = new RowRenderer(this.serviceLocator, null, this.parent);\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && args.requestType === 'infiniteScroll';\n    this.rowElements = [];\n    this.rows = [];\n    var fCont = this.getPanel().querySelector('.e-frozencontent');\n    var mCont = this.getPanel().querySelector('.e-movablecontent');\n    var cont = this.getPanel().querySelector('.e-content');\n\n    if (isGroupAdaptive(gObj)) {\n      if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder'].some(function (value) {\n        return args.requestType === value;\n      })) {\n        gObj.vcRows = [];\n        gObj.vRows = [];\n      }\n    }\n\n    var modelData;\n    var isServerRendered = 'isServerRendered';\n\n    if (isBlazor() && this.parent[isServerRendered]) {\n      modelData = this.generator.generateRows(dataSource, args);\n\n      if (this.parent.enableVirtualization) {\n        this.prevInfo = this.prevInfo ? this.prevInfo : args.virtualInfo;\n        this.prevInfo = args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'Y' && this.currentInfo.page && this.currentInfo.page !== args.virtualInfo.page ? this.currentInfo : args.virtualInfo;\n      }\n\n      this.rows = modelData;\n      this.freezeRows = modelData;\n      this.rowElements = [].slice.call(this.getTable().querySelectorAll('tr.e-row[data-uid]'));\n\n      if (frzCols) {\n        this.movableRows = modelData.map(function (mRow) {\n          var sRow = new Row(mRow);\n          sRow.cells = mRow.cells.slice(frzCols, mRow.cells.length);\n          mRow.cells = mRow.cells.slice(0, frzCols);\n          return sRow;\n        });\n        this.freezeRowElements = this.rowElements;\n      }\n\n      this.isLoaded = true;\n      this.parent.hideSpinner();\n      args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n      var arg = extend({\n        rows: this.rows\n      }, args);\n\n      if (this.getTable().querySelector('.e-emptyrow')) {\n        remove(this.getTable().querySelector('.e-emptyrow'));\n\n        if (!isNullOrUndefined(this.getTable().querySelectorAll('.e-table > tbody')[1])) {\n          remove(this.getTable().querySelectorAll('.e-table > tbody')[1]);\n        }\n      }\n\n      this.parent.notify('contentcolgroup', {});\n      this.rafCallback(arg)();\n\n      if (frzCols) {\n        cont.style.overflowY = 'hidden';\n        fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n        mCont.style.overflowY = this.parent.height !== 'auto' ? 'scroll' : 'auto';\n        fCont.style.borderRightWidth = '1px';\n        this.parent.notify(events.contentReady, {\n          rows: this.movableRows,\n          args: extend({}, arg, {\n            isFrozen: false\n          })\n        });\n      }\n\n      if (!(this.parent.isCheckBoxSelection || this.parent.selectionSettings.type === 'Multiple') || !this.parent.isPersistSelection && !this.parent.enableVirtualization) {\n        var rowIndex = 'editRowIndex';\n\n        if (this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(args[rowIndex])) {\n          this.parent.selectRow(args[rowIndex]);\n        }\n      }\n\n      if (this.parent.enableVirtualization && !this.parent.getHeaderContent().querySelectorAll('.e-check').length) {\n        var removeClassByUid = this.parent.getRows().filter(function (x) {\n          return x.getAttribute('aria-selected');\n        }).map(function (y) {\n          return y.getAttribute('data-uid');\n        });\n        var addClassByUid = this.parent.getRows().filter(function (x) {\n          return x.getAttribute('aria-selected') === null;\n        }).map(function (y) {\n          return y.getAttribute('data-uid');\n        });\n\n        for (var i = 0; i < removeClassByUid.length; i++) {\n          if (!isNullOrUndefined(this.parent.getRowObjectFromUID(removeClassByUid[i])) && !this.parent.getRowObjectFromUID(removeClassByUid[i]).isSelected) {\n            this.parent.getRowElementByUID(removeClassByUid[i]).removeAttribute('aria-selected');\n\n            if (!isNullOrUndefined(this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check'))) {\n              removeClass([this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check')], ['e-check']);\n            }\n\n            for (var j = 0; j < this.parent.getRowElementByUID(removeClassByUid[i]).children.length; j++) {\n              this.parent.getRowElementByUID(removeClassByUid[i]).children[j].classList.remove('e-selectionbackground', 'e-active');\n            }\n          }\n        }\n\n        for (var i = 0; i < addClassByUid.length; i++) {\n          if (!isNullOrUndefined(this.parent.getRowObjectFromUID(addClassByUid[i])) && this.parent.getRowObjectFromUID(addClassByUid[i]).isSelected) {\n            this.parent.getRowElementByUID(addClassByUid[i]).setAttribute('aria-selected', 'true');\n\n            if (!isNullOrUndefined(this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame'))) {\n              addClass([this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame')], ['e-check']);\n            }\n\n            for (var j = 0; j < this.parent.getRowElementByUID(addClassByUid[i]).children.length; j++) {\n              this.parent.getRowElementByUID(addClassByUid[i]).children[j].classList.add('e-selectionbackground', 'e-active');\n            }\n          }\n        }\n      }\n\n      return;\n    }\n\n    if (this.parent.enableVirtualization && this.parent.getFrozenColumns()) {\n      if (this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll') {\n        if (args.virtualInfo.sentinelInfo.axis === 'X') {\n          modelData = this.parent.contentModule.generateRows(dataSource, args);\n          args.renderMovableContent = true;\n        } else if (mCont.scrollLeft > 0 && !args.renderMovableContent) {\n          this.viewColIndexes = args.virtualInfo.columnIndexes;\n          var indexes = [];\n\n          for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n            indexes.push(i);\n          }\n\n          this.parent.setColumnIndexesInView(indexes);\n          args.virtualInfo.columnIndexes = indexes;\n        }\n      }\n\n      modelData = this.parent.contentModule.generateRows(dataSource, args);\n    } else {\n      modelData = this.checkInfiniteCache(modelData, args);\n\n      if (!this.isAddRows) {\n        modelData = this.generator.generateRows(dataSource, args);\n      }\n    }\n\n    this.parent.notify(events.setInfiniteCache, {\n      isInfiniteScroll: isInfiniteScroll,\n      modelData: modelData,\n      args: args\n    });\n\n    if (isNullOrUndefined(modelData[0].cells[0])) {\n      mCont.querySelector('tbody').innerHTML = '';\n    }\n\n    var idx = modelData[0].cells[0].index;\n\n    if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns() && args.renderMovableContent && args.requestType === 'virtualscroll' && mCont.scrollLeft > 0 && args.virtualInfo.columnIndexes[0] !== 0) {\n      idx = this.parent.getFrozenColumns();\n    }\n    /* tslint:disable:no-any */\n\n\n    if (args.requestType !== 'infiniteScroll' && this.parent.registeredTemplate && this.parent.registeredTemplate.template && !args.isFrozen) {\n      var templatetoclear = [];\n\n      for (var i = 0; i < this.parent.registeredTemplate.template.length; i++) {\n        for (var j = 0; j < this.parent.registeredTemplate.template[i].rootNodes.length; j++) {\n          if (isNullOrUndefined(this.parent.registeredTemplate.template[i].rootNodes[j].parentNode)) {\n            templatetoclear.push(this.parent.registeredTemplate.template[i]);\n            /* tslint:enable:no-any */\n          }\n        }\n      }\n\n      this.parent.destroyTemplate(['template'], templatetoclear);\n    }\n\n    if (this.parent.enableColumnVirtualization) {\n      var cellMerge = new CellMergeRender(this.serviceLocator, this.parent);\n      cellMerge.updateVirtualCells(modelData);\n    }\n\n    if (frzCols && idx >= frzCols) {\n      this.tbody = mCont.querySelector('tbody');\n    } else {\n      this.tbody = this.getTable().querySelector('tbody');\n    }\n\n    var startIndex = 0;\n    var blockLoad = true;\n\n    if (isGroupAdaptive(gObj) && gObj.vcRows.length) {\n      var top_1 = 'top';\n      var scrollTop = !isNullOrUndefined(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top : !isNullOrUndefined(args.scrollTop) ? args.scrollTop[top_1] : 0;\n\n      if (scrollTop !== 0) {\n        var offsets_1 = gObj.vGroupOffsets;\n        var bSize = gObj.pageSettings.pageSize / 2;\n        var values = Object.keys(offsets_1).map(function (key) {\n          return offsets_1[key];\n        });\n\n        for (var m = 0; m < values.length; m++) {\n          if (scrollTop < values[m]) {\n            if (!isNullOrUndefined(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n              args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n              startIndex = m === 0 || m === 1 ? 0 : m * bSize;\n              break;\n            } else {\n              args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n              startIndex = m === 0 || m === 1 ? 0 : m * bSize;\n              break;\n            }\n          }\n        }\n\n        if (scrollTop + this.contentPanel.firstElementChild.offsetHeight === this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n          blockLoad = false;\n        }\n      }\n    }\n\n    var isVFFrozenOnly = gObj.frozenRows && !gObj.getFrozenColumns() && this.parent.enableVirtualization && args.requestType === 'reorder';\n\n    if (gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X' || isVFFrozenOnly) {\n      var bIndex = args.virtualInfo.blockIndexes;\n      var page = args.virtualInfo.page;\n      args.virtualInfo.blockIndexes = [1, 2];\n\n      if (isVFFrozenOnly) {\n        args.virtualInfo.page = 1;\n      }\n\n      var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n      var mhdrData = this.vgenerator.generateRows(data, args);\n      mhdrData.splice(this.parent.frozenRows);\n\n      for (var i = 0; i < this.parent.frozenRows; i++) {\n        mhdrData[i].cells.splice(0, this.parent.getFrozenColumns());\n        tr = row.render(mhdrData[i], columns);\n        hdrfrag.appendChild(tr);\n      }\n\n      args.virtualInfo.blockIndexes = bIndex;\n      args.virtualInfo.page = page;\n\n      if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n        modelData.splice(0, this.parent.frozenRows);\n      }\n    }\n\n    this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n\n    for (var i = startIndex, len = modelData.length; i < len; i++) {\n      this.rows.push(modelData[i]);\n      this.setInfiniteVisibleRows(args, modelData[i]);\n\n      if (isGroupAdaptive(gObj) && this.rows.length >= gObj.pageSettings.pageSize && blockLoad) {\n        break;\n      }\n\n      if (!gObj.rowTemplate) {\n        tr = row.render(modelData[i], columns);\n        var isVFreorder = this.ensureFrozenHeaderRender(args);\n\n        if (gObj.frozenRows && i < gObj.frozenRows && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder) {\n          hdrfrag.appendChild(tr);\n        } else {\n          frag.appendChild(tr);\n        }\n\n        if (modelData[i].isExpand) {\n          gObj.notify(events.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n        }\n      } else {\n        var rowTemplateID = gObj.element.id + 'rowTemplate';\n        var elements = gObj.getRowTemplate()(extend({\n          index: i\n        }, dataSource[i]), gObj, 'rowTemplate', rowTemplateID);\n\n        if (elements[0].tagName === 'TBODY') {\n          for (var j = 0; j < elements.length; j++) {\n            var isTR = elements[j].nodeName.toLowerCase() === 'tr';\n\n            if (isTR || elements[j].querySelectorAll && elements[j].querySelectorAll('tr').length) {\n              tr = isTR ? elements[j] : elements[j].querySelector('tr');\n            }\n          }\n\n          if (gObj.frozenRows && i < gObj.frozenRows) {\n            hdrfrag.appendChild(tr);\n          } else {\n            frag.appendChild(tr);\n          }\n        } else {\n          if (gObj.frozenRows && i < gObj.frozenRows) {\n            tr = appendChildren(hdrfrag, elements);\n          } else {\n            // frag.appendChild(tr);\n            tr = appendChildren(frag, elements);\n            trElement = tr.lastElementChild;\n          }\n        }\n\n        var arg = {\n          data: modelData[i].data,\n          row: trElement ? trElement : tr\n        };\n        this.parent.trigger(events.rowDataBound, arg);\n      }\n\n      if (modelData[i].isDataRow) {\n        this.rowElements.push(tr);\n      }\n\n      this.ariaService.setOptions(this.getTable(), {\n        colcount: gObj.getColumns().length.toString()\n      });\n    }\n\n    this.splitRows(idx);\n\n    if (gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll || args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X') {\n      hdrTbody = frzCols ? gObj.getHeaderContent().querySelector(idx === 0 ? '.e-frozenheader' : '.e-movableheader').querySelector('tbody') : gObj.getHeaderTable().querySelector('tbody');\n      hdrTbody.innerHTML = '';\n      hdrTbody.appendChild(hdrfrag);\n    }\n\n    if (!gObj.enableVirtualization && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n      cont.style.height = cont.offsetHeight - hdrTbody.offsetHeight + 'px';\n    }\n\n    if (frzCols && idx === 0) {\n      this.getPanel().firstChild.style.overflowY = 'hidden';\n    }\n\n    if (!isBlazor() || this.parent.isJsComponent) {\n      args.rows = this.rows.slice(0);\n    }\n\n    args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n    this.index = idx;\n    getUpdateUsingRaf(function () {\n      _this.parent.notify(events.beforeFragAppend, args);\n\n      var isVFTable = _this.parent.enableVirtualization && _this.parent.getFrozenColumns() !== 0;\n\n      if (!_this.parent.enableVirtualization && !isInfiniteScroll) {\n        remove(_this.tbody);\n        _this.tbody = _this.parent.createElement('tbody');\n      }\n\n      if (frzCols && !isVFTable && !_this.parent.enableInfiniteScrolling) {\n        _this.tbody.appendChild(frag);\n\n        if (_this.index === 0) {\n          _this.isLoaded = false;\n          fCont.querySelector('table').appendChild(_this.tbody);\n        } else {\n          if (_this.tbody.childElementCount < 1) {\n            _this.tbody.appendChild(_this.parent.createElement('tr').appendChild(_this.parent.createElement('td')));\n          }\n\n          _this.isLoaded = true;\n          mCont.querySelector('table').appendChild(_this.tbody);\n\n          if (_this.parent.getFrozenColumns() !== 0 && !_this.parent.allowTextWrap) {\n            _this.parent.notify(events.freezeRender, {\n              case: 'refreshHeight'\n            });\n          }\n\n          fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n          mCont.style.overflowY = _this.parent.height !== 'auto' ? 'scroll' : 'auto';\n          fCont.style.borderRightWidth = '1px';\n        }\n      } else {\n        if (gObj.rowTemplate) {\n          updateBlazorTemplate(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n        }\n\n        if (isVFTable) {\n          if (!args.renderMovableContent) {\n            _this.appendContent(fCont.querySelector('tbody'), frag, args);\n\n            if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && mCont.scrollLeft > 0) {\n              _this.parent.setColumnIndexesInView(_this.viewColIndexes);\n\n              args.virtualInfo.columnIndexes = _this.viewColIndexes;\n            }\n          } else {\n            _this.appendContent(mCont.querySelector('tbody'), frag, args);\n\n            if (args.virtualInfo && args.virtualInfo.direction !== 'right' && args.virtualInfo.direction !== 'left') {\n              fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n            }\n\n            args.renderMovableContent = false;\n          }\n        } else {\n          if (!isNullOrUndefined(_this.parent.infiniteScrollModule) && _this.parent.enableInfiniteScrolling) {\n            _this.isAddRows = false;\n\n            _this.parent.notify(events.removeInfiniteRows, {\n              args: args\n            });\n\n            _this.parent.notify(events.appendInfiniteContent, {\n              tbody: _this.tbody,\n              frag: frag,\n              args: args,\n              rows: _this.rows,\n              rowElements: _this.rowElements,\n              visibleRows: _this.visibleRows\n            });\n\n            if (frzCols && idx !== 0) {\n              fCont.style.height = mCont.offsetHeight - getScrollBarWidth() + 'px';\n              mCont.style.overflowY = _this.parent.height !== 'auto' ? 'scroll' : 'auto';\n              fCont.style.borderRightWidth = '1px';\n            }\n          } else {\n            _this.appendContent(_this.tbody, frag, args);\n          }\n        }\n      }\n\n      if (frzCols && idx === 0) {\n        if (isVFTable) {\n          args.renderMovableContent = true;\n        }\n\n        _this.refreshContentRows(extend({}, args));\n      }\n\n      frag = null;\n    }, this.rafCallback(extend({}, args)));\n  };\n\n  ContentRender.prototype.appendContent = function (tbody, frag, args) {\n    tbody.appendChild(frag);\n    this.getTable().appendChild(tbody);\n  };\n\n  ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n    return !(this.parent.enableVirtualization && (args.requestType === 'reorder' || args.requestType === 'refresh') || this.parent.infiniteScrollSettings.enableCache && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete' && this.parent.pageSettings.currentPage !== 1);\n  };\n\n  ContentRender.prototype.checkInfiniteCache = function (modelData, args) {\n    if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n      var index = args.isFrozen ? 1 : 0;\n      var frozenCols = this.parent.getFrozenColumns();\n      this.isAddRows = !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage]);\n\n      if (frozenCols && !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage])) {\n        this.isAddRows = this.infiniteCache[this.parent.pageSettings.currentPage][index].length !== 0;\n      }\n\n      if (this.isAddRows) {\n        var data = !frozenCols ? this.infiniteCache[this.parent.pageSettings.currentPage] : this.infiniteCache[this.parent.pageSettings.currentPage][index];\n        modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n      }\n\n      return modelData;\n    }\n\n    return null;\n  };\n\n  ContentRender.prototype.setInfiniteVisibleRows = function (args, data) {\n    var frozenCols = this.parent.getFrozenColumns();\n\n    if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache) {\n      if (frozenCols) {\n        !args.isFrozen ? this.visibleFrozenRows.push(data) : this.visibleRows.push(data);\n      } else if (!this.parent.infiniteScrollSettings.enableCache) {\n        this.visibleRows.push(data);\n      }\n    }\n  };\n\n  ContentRender.prototype.getCurrentBlockInfiniteRecords = function (isFreeze) {\n    var data = [];\n\n    if (this.parent.infiniteScrollSettings.enableCache) {\n      if (!Object.keys(this.infiniteCache).length) {\n        return [];\n      }\n\n      var frozenCols = this.parent.getFrozenColumns();\n      var rows = this.parent.getRows();\n      var index = parseInt(rows[this.parent.frozenRows].getAttribute('aria-rowindex'), 10);\n      var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n      index = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10);\n      var last = Math.ceil(index / this.parent.pageSettings.pageSize);\n\n      if (frozenCols) {\n        var idx = isFreeze ? 0 : 1;\n\n        for (var i = first; i <= last; i++) {\n          data = !data.length ? this.infiniteCache[i][idx] : data.concat(this.infiniteCache[i][idx]);\n        }\n\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n          data = this.infiniteCache[1][idx].slice(0, this.parent.frozenRows).concat(data);\n        }\n      } else {\n        for (var i = first; i <= last; i++) {\n          data = !data.length ? this.infiniteCache[i] : data.concat(this.infiniteCache[i]);\n        }\n\n        if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n          data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n        }\n      }\n    }\n\n    return data;\n  };\n\n  ContentRender.prototype.getReorderedVFRows = function (args) {\n    return this.parent.contentModule.getReorderedFrozenRows(args);\n  };\n\n  ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n    if (this.parent.frozenRows && this.parent.getFrozenColumns() && this.parent.enableVirtualization && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n      var tr = void 0;\n      this.currentMovableRows = dataSource;\n      var fhdrData = this.getReorderedVFRows(args);\n\n      for (var i = 0; i < fhdrData.length; i++) {\n        tr = row.render(fhdrData[i], columns);\n        hdrfrag.appendChild(tr);\n      }\n\n      if (args.virtualInfo.page === 1) {\n        modelData.splice(0, this.parent.frozenRows);\n      }\n\n      if (args.renderMovableContent) {\n        this.parent.currentViewData = this.currentMovableRows;\n        this.currentMovableRows = null;\n      }\n    }\n  };\n\n  ContentRender.prototype.getInfiniteRows = function () {\n    var rows = [];\n    var frozenCols = this.parent.getFrozenColumns();\n\n    if (this.parent.enableInfiniteScrolling) {\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        var keys = Object.keys(this.infiniteCache);\n\n        for (var i = 0; i < keys.length; i++) {\n          rows = !frozenCols ? rows.concat(this.infiniteCache[keys[i]]) : rows.concat(this.infiniteCache[keys[i]][0]);\n        }\n      } else {\n        rows = frozenCols ? this.visibleFrozenRows : this.visibleRows;\n      }\n    }\n\n    return rows;\n  };\n\n  ContentRender.prototype.getInfiniteMovableRows = function () {\n    var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n    var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows : this.visibleRows : [];\n    return infiniteRows;\n  };\n  /**\n   * Get the content div element of grid\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getPanel = function () {\n    return this.contentPanel;\n  };\n  /**\n   * Set the content div element of grid\n   * @param  {Element} panel\n   */\n\n\n  ContentRender.prototype.setPanel = function (panel) {\n    this.contentPanel = panel;\n  };\n  /**\n   * Get the content table element of grid\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getTable = function () {\n    return this.contentTable;\n  };\n  /**\n   * Set the content table element of grid\n   * @param  {Element} table\n   */\n\n\n  ContentRender.prototype.setTable = function (table) {\n    this.contentTable = table;\n  };\n  /**\n   * Get the Row collection in the Grid.\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n   */\n\n\n  ContentRender.prototype.getRows = function () {\n    var infiniteRows = this.getInfiniteRows();\n    return infiniteRows.length ? infiniteRows : this.parent.getFrozenColumns() ? this.freezeRows : this.rows;\n  };\n  /**\n   * Get the Movable Row collection in the Freeze pane Grid.\n   * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n   */\n\n\n  ContentRender.prototype.getMovableRows = function () {\n    var infiniteRows = this.getInfiniteMovableRows();\n    return infiniteRows.length ? infiniteRows : this.movableRows;\n  };\n  /**\n   * Get the content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getRowElements = function () {\n    return this.parent.getFrozenColumns() ? this.freezeRowElements : this.rowElements;\n  };\n  /**\n   * Get the Freeze pane movable content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.getMovableRowElements = function () {\n    return this.rowElements;\n  };\n  /**\n   * Get the content table data row elements\n   * @return {Element}\n   */\n\n\n  ContentRender.prototype.setRowElements = function (elements) {\n    this.rowElements = elements;\n  };\n  /**\n   * Get the header colgroup element\n   * @returns {Element}\n   */\n\n\n  ContentRender.prototype.getColGroup = function () {\n    return this.colgroup;\n  };\n  /**\n   * Set the header colgroup element\n   * @param {Element} colgroup\n   * @returns {Element}\n   */\n\n\n  ContentRender.prototype.setColGroup = function (colGroup) {\n    if (!isNullOrUndefined(colGroup)) {\n      colGroup.id = 'content-' + colGroup.id;\n    }\n\n    return this.colgroup = colGroup;\n  };\n  /**\n   * Function to hide content table column based on visible property\n   * @param  {Column[]} columns?\n   */\n\n\n  ContentRender.prototype.setVisible = function (columns) {\n    var gObj = this.parent;\n\n    if (isBlazor() && gObj.isServerRendered) {\n      this.parent.notify('setvisibility', columns);\n    }\n\n    var frzCols = gObj.getFrozenColumns();\n    var rows = [];\n\n    if (frzCols) {\n      var fRows = this.freezeRows;\n      var mRows = this.movableRows;\n      var rowLen = fRows.length;\n      var cellLen = void 0;\n\n      for (var i = 0, row = void 0; i < rowLen; i++) {\n        cellLen = mRows[i].cells.length;\n        row = fRows[i].clone();\n\n        for (var j = 0; j < cellLen; j++) {\n          row.cells.push(mRows[i].cells[j]);\n        }\n\n        rows.push(row);\n      }\n    } else {\n      rows = this.getRows();\n    }\n\n    var element;\n    var testRow;\n    rows.some(function (r) {\n      if (r.isDataRow) {\n        testRow = r;\n      }\n\n      return r.isDataRow;\n    });\n    var tasks = [];\n    var needFullRefresh = true;\n\n    if (!gObj.groupSettings.columns.length && testRow) {\n      needFullRefresh = false;\n    }\n\n    var tr = gObj.getDataRows();\n    var args = {};\n    var infiniteData = this.infiniteRowVisibility();\n    var contentrows = infiniteData ? infiniteData : this.rows.filter(function (row) {\n      return !row.isDetailRow;\n    });\n\n    for (var c = 0, clen = columns.length; c < clen; c++) {\n      var column = columns[c];\n      var idx = this.parent.getNormalizedColumnIndex(column.uid);\n      var colIdx = this.parent.getColumnIndexByUid(column.uid);\n      var displayVal = column.visible === true ? '' : 'none';\n\n      if (idx !== -1 && testRow && idx < testRow.cells.length) {\n        if (frzCols) {\n          if (idx < frzCols) {\n            setStyleAttribute(this.getColGroup().childNodes[idx], {\n              'display': displayVal\n            });\n            var infiniteFreezeData = this.infiniteRowVisibility(true);\n            contentrows = infiniteFreezeData ? infiniteFreezeData : this.freezeRows;\n            tr = gObj.getDataRows();\n          } else {\n            var mTable = gObj.getContent().querySelector('.e-movablecontent').querySelector('colgroup');\n            colIdx = idx = idx - frzCols;\n            setStyleAttribute(mTable.childNodes[idx], {\n              'display': displayVal\n            });\n            tr = gObj.getMovableDataRows();\n            var infiniteMovableData = this.infiniteRowVisibility();\n            contentrows = infiniteMovableData ? infiniteMovableData : this.movableRows;\n          }\n        } else {\n          setStyleAttribute(this.getColGroup().childNodes[idx], {\n            'display': displayVal\n          });\n        }\n      }\n\n      if (!needFullRefresh) {\n        this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n      }\n\n      if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n        this.parent.updateMediaColumns(column);\n      }\n\n      this.parent.invokedFromMedia = false;\n    }\n\n    if (needFullRefresh) {\n      this.refreshContentRows({\n        requestType: 'refresh'\n      });\n    } else {\n      if (!this.parent.getFrozenColumns()) {\n        this.parent.notify(events.partialRefresh, {\n          rows: contentrows,\n          args: args\n        });\n      } else {\n        this.parent.notify(events.partialRefresh, {\n          rows: this.freezeRows,\n          args: {\n            isFrozen: true,\n            rows: this.freezeRows\n          }\n        });\n        this.parent.notify(events.partialRefresh, {\n          rows: this.movableRows,\n          args: {\n            isFrozen: false,\n            rows: this.movableRows\n          }\n        });\n      }\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n    var trs = Object.keys(tr);\n\n    for (var i = 0; i < trs.length; i++) {\n      var td = tr[trs[i]].querySelectorAll('td.e-rowcell')[idx];\n\n      if (tr[trs[i]].querySelectorAll('td.e-rowcell').length && td) {\n        setStyleAttribute(tr[trs[i]].querySelectorAll('td.e-rowcell')[idx], {\n          'display': displayVal\n        });\n\n        if (tr[trs[i]].querySelectorAll('td.e-rowcell')[idx].classList.contains('e-hide')) {\n          removeClass([tr[trs[i]].querySelectorAll('td.e-rowcell')[idx]], ['e-hide']);\n        }\n\n        if (this.parent.isRowDragable()) {\n          rows[trs[i]].cells[idx + 1].visible = displayVal === '' ? true : false;\n        } else {\n          rows[trs[i]].cells[idx].visible = displayVal === '' ? true : false;\n        }\n      }\n    }\n\n    this.parent.notify(events.infiniteShowHide, {\n      visible: displayVal,\n      index: idx,\n      isFreeze: this.isInfiniteFreeze\n    });\n  };\n\n  ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n    var infiniteData;\n\n    if (this.parent.enableInfiniteScrolling) {\n      this.isInfiniteFreeze = isFreeze;\n\n      if (this.parent.infiniteScrollSettings.enableCache) {\n        infiniteData = isFreeze ? this.getCurrentBlockInfiniteRecords(true) : this.getCurrentBlockInfiniteRecords();\n      } else {\n        infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n      }\n    }\n\n    return infiniteData;\n  };\n\n  ContentRender.prototype.colGroupRefresh = function () {\n    if (this.getColGroup()) {\n      var colGroup = void 0;\n\n      if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns() && this.parent.contentModule.isXaxis()) {\n        colGroup = this.parent.getMovableVirtualHeader().querySelector('colgroup').cloneNode(true);\n      } else {\n        colGroup = isBlazor() ? this.parent.getHeaderTable().querySelector('colgroup').cloneNode(true) : this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true);\n      }\n\n      this.getTable().replaceChild(colGroup, this.getColGroup());\n      this.setColGroup(colGroup);\n    }\n  };\n\n  ContentRender.prototype.initializeContentDrop = function () {\n    var gObj = this.parent;\n    var drop = new Droppable(gObj.getContent(), {\n      accept: '.e-dragclone',\n      drop: this.drop\n    });\n  };\n\n  ContentRender.prototype.canSkip = function (column, row, index) {\n    /**\n     * Skip the toggle visiblity operation when one of the following success\n     * 1. Grid has empty records\n     * 2. column visible property is unchanged\n     * 3. cell`s isVisible property is same as column`s visible property.\n     */\n    return isNullOrUndefined(row) || //(1)\n    isNullOrUndefined(column.visible) || //(2)    \n    row.cells[index].visible === column.visible; //(3)\n  };\n\n  ContentRender.prototype.getModelGenerator = function () {\n    return this.generator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n  };\n\n  ContentRender.prototype.renderEmpty = function (tbody) {\n    if (isBlazor() && !this.parent.isJsComponent && this.parent.frozenRows) {\n      return;\n    }\n\n    this.getTable().appendChild(tbody);\n\n    if (this.parent.frozenRows) {\n      this.parent.getHeaderContent().querySelector('tbody').innerHTML = '';\n    }\n  };\n\n  ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n    if (this.parent.getFrozenColumns()) {\n      var rows = this.getMovableRows().filter(function (row) {\n        return clearAll || uid === row.uid;\n      });\n\n      for (var i = 0; i < rows.length; i++) {\n        rows[i].isSelected = set;\n      }\n    }\n\n    var row = this.getRows().filter(function (row) {\n      return clearAll || uid === row.uid;\n    });\n\n    for (var j = 0; j < row.length; j++) {\n      row[j].isSelected = set;\n      var cells = row[j].cells;\n\n      for (var k = 0; k < cells.length; k++) {\n        cells[k].isSelected = set;\n      }\n    }\n  };\n\n  ContentRender.prototype.getRowByIndex = function (index) {\n    index = this.getInfiniteRowIndex(index);\n    return this.parent.getDataRows()[index];\n  };\n\n  ContentRender.prototype.getInfiniteRowIndex = function (index) {\n    if (this.parent.infiniteScrollSettings.enableCache) {\n      var fRows = this.parent.frozenRows;\n      var idx = fRows > index ? 0 : fRows;\n      var firstRowIndex = parseInt(this.parent.getRows()[idx].getAttribute('aria-rowindex'), 10);\n      index = fRows > index ? index : index - firstRowIndex + fRows;\n    }\n\n    return index;\n  };\n\n  ContentRender.prototype.getVirtualRowIndex = function (index) {\n    return index;\n  };\n\n  ContentRender.prototype.getMovableRowByIndex = function (index) {\n    index = this.getInfiniteRowIndex(index);\n    return this.parent.getMovableDataRows()[index];\n  };\n\n  ContentRender.prototype.enableAfterRender = function (e) {\n    if (e.module === 'group' && e.enable) {\n      this.generator = this.getModelGenerator();\n    }\n  };\n\n  ContentRender.prototype.setRowObjects = function (rows) {\n    this.rows = rows;\n  };\n\n  return ContentRender;\n}();\n\nexport { ContentRender };","map":{"version":3,"sources":["/home/nikhil/Desktop/data_grid_editor-master/node_modules/@syncfusion/ej2-grids/src/grid/renderer/content-renderer.js"],"names":["Droppable","isBlazor","addClass","isNullOrUndefined","extend","setStyleAttribute","remove","updateBlazorTemplate","removeClass","getUpdateUsingRaf","appendChildren","events","Row","RowRenderer","CellMergeRender","RowModelGenerator","GroupModelGenerator","getScrollBarWidth","isGroupAdaptive","ContentRender","parent","serviceLocator","_this","rows","freezeRows","movableRows","freezeRowElements","currentInfo","isLoaded","viewColIndexes","drop","e","notify","columnDrop","target","droppedElement","infiniteCache","isRemove","visibleRows","visibleFrozenRows","isAddRows","isInfiniteFreeze","rafCallback","args","arg","getFrozenColumns","enableVirtualization","mContentRows","slice","call","getMovableVirtualContent","querySelectorAll","fContentRows","getFrozenVirtualContent","length","enableColumnVirtualization","requestType","mHdr","getMovableVirtualHeader","fHdr","getFrozenVirtualHeader","ariaService","setBusy","getPanel","querySelector","isDestroyed","isFrozen","contentReady","trigger","dataBound","allowTextWrap","freezeRender","case","action","toLowerCase","cancel","actionComplete","hideSpinner","getService","generator","getModelGenerator","on","columnVisibilityChanged","setVisible","colGroupRefresh","uiUpdate","enableAfterRender","refreshInfiniteModeBlocks","refreshContentRows","beforeCellFocused","prototype","byKey","keyArgs","pressedKey","undefined","renderPanel","gObj","div","element","setOptions","busy","setPanel","createElement","className","innerDiv","appendChild","renderTable","contentDiv","virtualTable","virtualTrack","isServerRendered","createContentTable","setTable","getTable","multiselectable","selectionSettings","type","initializeContentDrop","frozenRows","getHeaderContent","classList","add","id","firstElementChild","table","attrs","cellspacing","role","setColGroup","cloneNode","getColGroup","splitRows","idx","rowElements","currentViewData","dataSource","currentMovableRows","frag","document","createDocumentFragment","initialPageRecords","hdrfrag","columns","getColumns","tr","hdrTbody","frzCols","trElement","row","isInfiniteScroll","enableInfiniteScrolling","fCont","mCont","cont","some","value","vcRows","vRows","modelData","generateRows","prevInfo","virtualInfo","sentinelInfo","axis","page","map","mRow","sRow","cells","style","overflowY","height","offsetHeight","borderRightWidth","isCheckBoxSelection","isPersistSelection","rowIndex","editSettings","mode","selectRow","removeClassByUid","getRows","filter","x","getAttribute","y","addClassByUid","i","getRowObjectFromUID","isSelected","getRowElementByUID","removeAttribute","j","children","setAttribute","contentModule","renderMovableContent","scrollLeft","columnIndexes","indexes","push","setColumnIndexesInView","checkInfiniteCache","setInfiniteCache","innerHTML","index","registeredTemplate","template","templatetoclear","rootNodes","parentNode","destroyTemplate","cellMerge","updateVirtualCells","tbody","startIndex","blockLoad","top_1","scrollTop","offsets","top","offsets_1","vGroupOffsets","bSize","pageSettings","pageSize","values","Object","keys","key","m","direction","blockIndexes","contentPanel","scrollHeight","rowObject","isVFFrozenOnly","bIndex","data","mhdrData","vgenerator","splice","render","virtualFrozenHdrRefresh","len","setInfiniteVisibleRows","rowTemplate","isVFreorder","ensureFrozenHeaderRender","isExpand","expandChildGrid","groupSettings","rowTemplateID","elements","getRowTemplate","tagName","isTR","nodeName","lastElementChild","rowDataBound","isDataRow","colcount","toString","getHeaderTable","Number","firstChild","isJsComponent","beforeFragAppend","isVFTable","childElementCount","appendContent","infiniteScrollModule","removeInfiniteRows","appendInfiniteContent","infiniteScrollSettings","enableCache","currentPage","frozenCols","getCurrentBlockInfiniteRecords","isFreeze","parseInt","first","Math","ceil","last","concat","getReorderedVFRows","getReorderedFrozenRows","fhdrData","getInfiniteRows","getInfiniteMovableRows","infiniteCacheRows","infiniteRows","panel","contentTable","getMovableRows","getRowElements","getMovableRowElements","setRowElements","colgroup","colGroup","fRows","mRows","rowLen","cellLen","clone","testRow","r","tasks","needFullRefresh","getDataRows","infiniteData","infiniteRowVisibility","contentrows","isDetailRow","c","clen","column","getNormalizedColumnIndex","uid","colIdx","getColumnIndexByUid","displayVal","visible","childNodes","infiniteFreezeData","mTable","getContent","getMovableDataRows","infiniteMovableData","setDisplayNone","invokedFromMedia","hideAtMedia","updateMediaColumns","partialRefresh","trs","td","contains","isRowDragable","infiniteShowHide","isXaxis","replaceChild","accept","canSkip","allowGrouping","renderEmpty","setSelection","set","clearAll","k","getRowByIndex","getInfiniteRowIndex","firstRowIndex","getVirtualRowIndex","getMovableRowByIndex","module","enable","setRowObjects"],"mappings":"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","sourcesContent":["import { Droppable, isBlazor, addClass } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, remove, updateBlazorTemplate, removeClass } from '@syncfusion/ej2-base';\nimport { getUpdateUsingRaf, appendChildren } from '../base/util';\nimport * as events from '../base/constant';\nimport { Row } from '../models/row';\nimport { RowRenderer } from './row-renderer';\nimport { CellMergeRender } from './cell-merge-renderer';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { GroupModelGenerator } from '../services/group-model-generator';\nimport { getScrollBarWidth, isGroupAdaptive } from '../base/util';\n/**\n * Content module is used to render grid content\n * @hidden\n */\nvar ContentRender = /** @class */ (function () {\n    /**\n     * Constructor for content renderer module\n     */\n    function ContentRender(parent, serviceLocator) {\n        var _this = this;\n        this.rows = [];\n        this.freezeRows = [];\n        this.movableRows = [];\n        this.freezeRowElements = [];\n        /** @hidden */\n        this.currentInfo = {};\n        this.isLoaded = true;\n        this.viewColIndexes = [];\n        this.drop = function (e) {\n            _this.parent.notify(events.columnDrop, { target: e.target, droppedElement: e.droppedElement });\n            remove(e.droppedElement);\n        };\n        this.infiniteCache = {};\n        this.isRemove = false;\n        this.visibleRows = [];\n        this.visibleFrozenRows = [];\n        this.isAddRows = false;\n        this.isInfiniteFreeze = false;\n        this.rafCallback = function (args) {\n            var arg = args;\n            return function () {\n                if (_this.parent.getFrozenColumns() && _this.parent.enableVirtualization) {\n                    var mContentRows = [].slice.call(_this.parent.getMovableVirtualContent().querySelectorAll('.e-row'));\n                    var fContentRows = [].slice.call(_this.parent.getFrozenVirtualContent().querySelectorAll('.e-row'));\n                    _this.isLoaded = !mContentRows ? false : mContentRows.length === fContentRows.length;\n                    if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll' && _this.isLoaded) {\n                        var mHdr = [].slice.call(_this.parent.getMovableVirtualHeader().querySelectorAll('.e-row'));\n                        var fHdr = [].slice.call(_this.parent.getFrozenVirtualHeader().querySelectorAll('.e-row'));\n                        _this.isLoaded = mHdr.length === fHdr.length;\n                    }\n                }\n                _this.ariaService.setBusy(_this.getPanel().querySelector('.e-content'), false);\n                if (_this.parent.isDestroyed) {\n                    return;\n                }\n                var rows = _this.rows.slice(0);\n                if (_this.parent.getFrozenColumns() !== 0) {\n                    rows = args.isFrozen ? _this.freezeRows : _this.movableRows;\n                }\n                _this.parent.notify(events.contentReady, { rows: rows, args: arg });\n                if (_this.isLoaded) {\n                    _this.parent.trigger(events.dataBound, {}, function () {\n                        if (_this.parent.allowTextWrap) {\n                            _this.parent.notify(events.freezeRender, { case: 'textwrap' });\n                        }\n                    });\n                }\n                if (arg) {\n                    var action = (arg.requestType || '').toLowerCase() + '-complete';\n                    _this.parent.notify(action, arg);\n                    if (args.requestType === 'batchsave') {\n                        args.cancel = false;\n                        _this.parent.trigger(events.actionComplete, args);\n                    }\n                }\n                if (_this.isLoaded) {\n                    _this.parent.hideSpinner();\n                }\n            };\n        };\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.ariaService = this.serviceLocator.getService('ariaService');\n        this.generator = this.getModelGenerator();\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        if (!this.parent.enableColumnVirtualization && !this.parent.enableVirtualization) {\n            this.parent.on(events.columnVisibilityChanged, this.setVisible, this);\n        }\n        this.parent.on(events.colGroupRefresh, this.colGroupRefresh, this);\n        this.parent.on(events.uiUpdate, this.enableAfterRender, this);\n        this.parent.on(events.refreshInfiniteModeBlocks, this.refreshContentRows, this);\n        this.parent.on(events.beforeCellFocused, this.beforeCellFocused, this);\n    }\n    ContentRender.prototype.beforeCellFocused = function (e) {\n        if (e.byKey && (e.keyArgs.action === 'upArrow' || e.keyArgs.action === 'downArrow')) {\n            this.pressedKey = e.keyArgs.action;\n        }\n        else {\n            this.pressedKey = undefined;\n        }\n    };\n    /**\n     * The function is used to render grid content div\n     */\n    ContentRender.prototype.renderPanel = function () {\n        var gObj = this.parent;\n        var div = this.parent.element.querySelector('.e-gridcontent');\n        if (div) {\n            this.ariaService.setOptions(this.parent.element.querySelector('.e-content'), { busy: false });\n            this.setPanel(div);\n            return;\n        }\n        div = this.parent.createElement('div', { className: 'e-gridcontent' });\n        var innerDiv = this.parent.createElement('div', {\n            className: 'e-content'\n        });\n        this.ariaService.setOptions(innerDiv, { busy: false });\n        div.appendChild(innerDiv);\n        this.setPanel(div);\n        gObj.element.appendChild(div);\n    };\n    /**\n     * The function is used to render grid content table\n     */\n    ContentRender.prototype.renderTable = function () {\n        var contentDiv = this.getPanel();\n        var virtualTable = contentDiv.querySelector('.e-virtualtable');\n        var virtualTrack = contentDiv.querySelector('.e-virtualtrack');\n        if (this.parent.enableVirtualization && !isNullOrUndefined(virtualTable) && !isNullOrUndefined(virtualTrack)\n            && (!isBlazor() || (isBlazor() && !this.parent.isServerRendered))) {\n            remove(virtualTable);\n            remove(virtualTrack);\n        }\n        contentDiv.appendChild(this.createContentTable('_content_table'));\n        this.setTable(contentDiv.querySelector('.e-table'));\n        this.ariaService.setOptions(this.getTable(), {\n            multiselectable: this.parent.selectionSettings.type === 'Multiple'\n        });\n        this.initializeContentDrop();\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().classList.add('e-frozenhdrcont');\n        }\n    };\n    /**\n     * The function is used to create content table elements\n     * @return {Element}\n     * @hidden\n     */\n    ContentRender.prototype.createContentTable = function (id) {\n        var innerDiv = this.getPanel().firstElementChild;\n        if (!isBlazor()) {\n            if (this.getTable()) {\n                remove(this.getTable());\n            }\n        }\n        var table = innerDiv.querySelector('.e-table') ? innerDiv.querySelector('.e-table') :\n            this.parent.createElement('table', { className: 'e-table', attrs: {\n                    cellspacing: '0.25px', role: 'grid',\n                    id: this.parent.element.id + id\n                }\n            });\n        this.setColGroup(this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true));\n        table.appendChild(this.getColGroup());\n        table.appendChild(this.parent.createElement('tbody'));\n        innerDiv.appendChild(table);\n        return innerDiv;\n    };\n    ContentRender.prototype.splitRows = function (idx) {\n        if (this.parent.getFrozenColumns()) {\n            if (idx === 0) {\n                this.freezeRows = this.rows;\n                this.freezeRowElements = this.rowElements;\n            }\n            else {\n                this.movableRows = this.rows;\n            }\n        }\n    };\n    /**\n     * Refresh the content of the Grid.\n     * @return {void}\n     */\n    // tslint:disable-next-line:max-func-body-length\n    ContentRender.prototype.refreshContentRows = function (args) {\n        var _this = this;\n        if (args === void 0) { args = {}; }\n        var gObj = this.parent;\n        if (gObj.currentViewData.length === 0) {\n            return;\n        }\n        var dataSource = this.currentMovableRows || gObj.currentViewData;\n        var frag = document.createDocumentFragment();\n        if (!this.initialPageRecords) {\n            this.initialPageRecords = extend([], dataSource);\n        }\n        var hdrfrag = document.createDocumentFragment();\n        var columns = gObj.getColumns();\n        var tr;\n        var hdrTbody;\n        var frzCols = gObj.getFrozenColumns();\n        var trElement;\n        var row = new RowRenderer(this.serviceLocator, null, this.parent);\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling\n            && args.requestType === 'infiniteScroll';\n        this.rowElements = [];\n        this.rows = [];\n        var fCont = this.getPanel().querySelector('.e-frozencontent');\n        var mCont = this.getPanel().querySelector('.e-movablecontent');\n        var cont = this.getPanel().querySelector('.e-content');\n        if (isGroupAdaptive(gObj)) {\n            if (['sorting', 'filtering', 'searching', 'grouping', 'ungrouping', 'reorder']\n                .some(function (value) { return args.requestType === value; })) {\n                gObj.vcRows = [];\n                gObj.vRows = [];\n            }\n        }\n        var modelData;\n        var isServerRendered = 'isServerRendered';\n        if (isBlazor() && this.parent[isServerRendered]) {\n            modelData = this.generator.generateRows(dataSource, args);\n            if (this.parent.enableVirtualization) {\n                this.prevInfo = this.prevInfo ? this.prevInfo : args.virtualInfo;\n                this.prevInfo = args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'Y' && this.currentInfo.page &&\n                    this.currentInfo.page !== args.virtualInfo.page ? this.currentInfo : args.virtualInfo;\n            }\n            this.rows = modelData;\n            this.freezeRows = modelData;\n            this.rowElements = [].slice.call(this.getTable().querySelectorAll('tr.e-row[data-uid]'));\n            if (frzCols) {\n                this.movableRows = modelData.map(function (mRow) {\n                    var sRow = new Row(mRow);\n                    sRow.cells = mRow.cells.slice(frzCols, mRow.cells.length);\n                    mRow.cells = mRow.cells.slice(0, frzCols);\n                    return sRow;\n                });\n                this.freezeRowElements = this.rowElements;\n            }\n            this.isLoaded = true;\n            this.parent.hideSpinner();\n            args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n            var arg = extend({ rows: this.rows }, args);\n            if (this.getTable().querySelector('.e-emptyrow')) {\n                remove(this.getTable().querySelector('.e-emptyrow'));\n                if (!isNullOrUndefined(this.getTable().querySelectorAll('.e-table > tbody')[1])) {\n                    remove(this.getTable().querySelectorAll('.e-table > tbody')[1]);\n                }\n            }\n            this.parent.notify('contentcolgroup', {});\n            this.rafCallback(arg)();\n            if (frzCols) {\n                cont.style.overflowY = 'hidden';\n                fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                mCont.style.overflowY = this.parent.height !== 'auto' ? 'scroll' : 'auto';\n                fCont.style.borderRightWidth = '1px';\n                this.parent.notify(events.contentReady, { rows: this.movableRows, args: extend({}, arg, { isFrozen: false }) });\n            }\n            if (!(this.parent.isCheckBoxSelection || this.parent.selectionSettings.type === 'Multiple')\n                || (!this.parent.isPersistSelection && !this.parent.enableVirtualization)) {\n                var rowIndex = 'editRowIndex';\n                if (this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(args[rowIndex])) {\n                    this.parent.selectRow(args[rowIndex]);\n                }\n            }\n            if (this.parent.enableVirtualization && !this.parent.getHeaderContent().querySelectorAll('.e-check').length) {\n                var removeClassByUid = this.parent.getRows().filter(function (x) { return x.getAttribute('aria-selected'); })\n                    .map(function (y) { return y.getAttribute('data-uid'); });\n                var addClassByUid = this.parent.getRows().filter(function (x) { return x.getAttribute('aria-selected') === null; })\n                    .map(function (y) { return y.getAttribute('data-uid'); });\n                for (var i = 0; i < removeClassByUid.length; i++) {\n                    if (!isNullOrUndefined(this.parent.getRowObjectFromUID(removeClassByUid[i])) &&\n                        !this.parent.getRowObjectFromUID(removeClassByUid[i]).isSelected) {\n                        this.parent.getRowElementByUID(removeClassByUid[i]).removeAttribute('aria-selected');\n                        if (!isNullOrUndefined(this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check'))) {\n                            removeClass([this.parent.getRowElementByUID(removeClassByUid[i]).querySelector('.e-check')], ['e-check']);\n                        }\n                        for (var j = 0; j < this.parent.getRowElementByUID(removeClassByUid[i]).children.length; j++) {\n                            this.parent.getRowElementByUID(removeClassByUid[i])\n                                .children[j].classList.remove('e-selectionbackground', 'e-active');\n                        }\n                    }\n                }\n                for (var i = 0; i < addClassByUid.length; i++) {\n                    if (!isNullOrUndefined(this.parent.getRowObjectFromUID(addClassByUid[i]))\n                        && this.parent.getRowObjectFromUID(addClassByUid[i]).isSelected) {\n                        this.parent.getRowElementByUID(addClassByUid[i]).setAttribute('aria-selected', 'true');\n                        if (!isNullOrUndefined(this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame'))) {\n                            addClass([this.parent.getRowElementByUID(addClassByUid[i]).querySelector('.e-frame')], ['e-check']);\n                        }\n                        for (var j = 0; j < this.parent.getRowElementByUID(addClassByUid[i]).children.length; j++) {\n                            this.parent.getRowElementByUID(addClassByUid[i])\n                                .children[j].classList.add('e-selectionbackground', 'e-active');\n                        }\n                    }\n                }\n            }\n            return;\n        }\n        if (this.parent.enableVirtualization && this.parent.getFrozenColumns()) {\n            if (this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll') {\n                if (args.virtualInfo.sentinelInfo.axis === 'X') {\n                    modelData = this.parent.contentModule.generateRows(dataSource, args);\n                    args.renderMovableContent = true;\n                }\n                else if (mCont.scrollLeft > 0 && !args.renderMovableContent) {\n                    this.viewColIndexes = args.virtualInfo.columnIndexes;\n                    var indexes = [];\n                    for (var i = 0; i < this.parent.getFrozenColumns(); i++) {\n                        indexes.push(i);\n                    }\n                    this.parent.setColumnIndexesInView(indexes);\n                    args.virtualInfo.columnIndexes = indexes;\n                }\n            }\n            modelData = this.parent.contentModule.generateRows(dataSource, args);\n        }\n        else {\n            modelData = this.checkInfiniteCache(modelData, args);\n            if (!this.isAddRows) {\n                modelData = this.generator.generateRows(dataSource, args);\n            }\n        }\n        this.parent.notify(events.setInfiniteCache, { isInfiniteScroll: isInfiniteScroll, modelData: modelData, args: args });\n        if (isNullOrUndefined(modelData[0].cells[0])) {\n            mCont.querySelector('tbody').innerHTML = '';\n        }\n        var idx = modelData[0].cells[0].index;\n        if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns() && args.renderMovableContent\n            && args.requestType === 'virtualscroll' && mCont.scrollLeft > 0 && args.virtualInfo.columnIndexes[0] !== 0) {\n            idx = this.parent.getFrozenColumns();\n        }\n        /* tslint:disable:no-any */\n        if (args.requestType !== 'infiniteScroll' && this.parent.registeredTemplate\n            && this.parent.registeredTemplate.template && !args.isFrozen) {\n            var templatetoclear = [];\n            for (var i = 0; i < this.parent.registeredTemplate.template.length; i++) {\n                for (var j = 0; j < this.parent.registeredTemplate.template[i].rootNodes.length; j++) {\n                    if (isNullOrUndefined(this.parent.registeredTemplate.template[i].rootNodes[j].parentNode)) {\n                        templatetoclear.push(this.parent.registeredTemplate.template[i]);\n                        /* tslint:enable:no-any */\n                    }\n                }\n            }\n            this.parent.destroyTemplate(['template'], templatetoclear);\n        }\n        if (this.parent.enableColumnVirtualization) {\n            var cellMerge = new CellMergeRender(this.serviceLocator, this.parent);\n            cellMerge.updateVirtualCells(modelData);\n        }\n        if (frzCols && idx >= frzCols) {\n            this.tbody = mCont.querySelector('tbody');\n        }\n        else {\n            this.tbody = this.getTable().querySelector('tbody');\n        }\n        var startIndex = 0;\n        var blockLoad = true;\n        if (isGroupAdaptive(gObj) && gObj.vcRows.length) {\n            var top_1 = 'top';\n            var scrollTop = !isNullOrUndefined(args.virtualInfo.offsets) ? args.virtualInfo.offsets.top :\n                (!isNullOrUndefined(args.scrollTop) ? args.scrollTop[top_1] : 0);\n            if (scrollTop !== 0) {\n                var offsets_1 = gObj.vGroupOffsets;\n                var bSize = gObj.pageSettings.pageSize / 2;\n                var values = Object.keys(offsets_1).map(function (key) { return offsets_1[key]; });\n                for (var m = 0; m < values.length; m++) {\n                    if (scrollTop < values[m]) {\n                        if (!isNullOrUndefined(args.virtualInfo) && args.virtualInfo.direction === 'up') {\n                            args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n                            startIndex = m === 0 || m === 1 ? 0 : (m * bSize);\n                            break;\n                        }\n                        else {\n                            args.virtualInfo.blockIndexes = m === 0 || m === 1 ? [1, 2] : [m, m + 1];\n                            startIndex = m === 0 || m === 1 ? 0 : (m) * bSize;\n                            break;\n                        }\n                    }\n                }\n                if (scrollTop + this.contentPanel.firstElementChild.offsetHeight ===\n                    this.contentPanel.firstElementChild.scrollHeight && !args.rowObject) {\n                    blockLoad = false;\n                }\n            }\n        }\n        var isVFFrozenOnly = gObj.frozenRows && !gObj.getFrozenColumns() && this.parent.enableVirtualization\n            && args.requestType === 'reorder';\n        if ((gObj.frozenRows && args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo.axis === 'X') || isVFFrozenOnly) {\n            var bIndex = args.virtualInfo.blockIndexes;\n            var page = args.virtualInfo.page;\n            args.virtualInfo.blockIndexes = [1, 2];\n            if (isVFFrozenOnly) {\n                args.virtualInfo.page = 1;\n            }\n            var data = isVFFrozenOnly ? this.initialPageRecords : dataSource;\n            var mhdrData = this.vgenerator\n                .generateRows(data, args);\n            mhdrData.splice(this.parent.frozenRows);\n            for (var i = 0; i < this.parent.frozenRows; i++) {\n                mhdrData[i].cells.splice(0, this.parent.getFrozenColumns());\n                tr = row.render(mhdrData[i], columns);\n                hdrfrag.appendChild(tr);\n            }\n            args.virtualInfo.blockIndexes = bIndex;\n            args.virtualInfo.page = page;\n            if (isVFFrozenOnly && args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n        }\n        this.virtualFrozenHdrRefresh(hdrfrag, modelData, row, args, dataSource, columns);\n        for (var i = startIndex, len = modelData.length; i < len; i++) {\n            this.rows.push(modelData[i]);\n            this.setInfiniteVisibleRows(args, modelData[i]);\n            if (isGroupAdaptive(gObj) && this.rows.length >= (gObj.pageSettings.pageSize) && blockLoad) {\n                break;\n            }\n            if (!gObj.rowTemplate) {\n                tr = row.render(modelData[i], columns);\n                var isVFreorder = this.ensureFrozenHeaderRender(args);\n                if (gObj.frozenRows && i < gObj.frozenRows && !isInfiniteScroll && args.requestType !== 'virtualscroll' && isVFreorder) {\n                    hdrfrag.appendChild(tr);\n                }\n                else {\n                    frag.appendChild(tr);\n                }\n                if (modelData[i].isExpand) {\n                    gObj.notify(events.expandChildGrid, tr.cells[gObj.groupSettings.columns.length]);\n                }\n            }\n            else {\n                var rowTemplateID = gObj.element.id + 'rowTemplate';\n                var elements = gObj.getRowTemplate()(extend({ index: i }, dataSource[i]), gObj, 'rowTemplate', rowTemplateID);\n                if (elements[0].tagName === 'TBODY') {\n                    for (var j = 0; j < elements.length; j++) {\n                        var isTR = elements[j].nodeName.toLowerCase() === 'tr';\n                        if (isTR || (elements[j].querySelectorAll && elements[j].querySelectorAll('tr').length)) {\n                            tr = isTR ? elements[j] : elements[j].querySelector('tr');\n                        }\n                    }\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        hdrfrag.appendChild(tr);\n                    }\n                    else {\n                        frag.appendChild(tr);\n                    }\n                }\n                else {\n                    if (gObj.frozenRows && i < gObj.frozenRows) {\n                        tr = appendChildren(hdrfrag, elements);\n                    }\n                    else {\n                        // frag.appendChild(tr);\n                        tr = appendChildren(frag, elements);\n                        trElement = tr.lastElementChild;\n                    }\n                }\n                var arg = { data: modelData[i].data, row: trElement ? trElement : tr };\n                this.parent.trigger(events.rowDataBound, arg);\n            }\n            if (modelData[i].isDataRow) {\n                this.rowElements.push(tr);\n            }\n            this.ariaService.setOptions(this.getTable(), { colcount: gObj.getColumns().length.toString() });\n        }\n        this.splitRows(idx);\n        if ((gObj.frozenRows && args.requestType !== 'virtualscroll' && !isInfiniteScroll)\n            || (args.requestType === 'virtualscroll' && args.virtualInfo.sentinelInfo && args.virtualInfo.sentinelInfo.axis === 'X')) {\n            hdrTbody = frzCols ? gObj.getHeaderContent().querySelector(idx === 0 ? '.e-frozenheader'\n                : '.e-movableheader').querySelector('tbody') : gObj.getHeaderTable().querySelector('tbody');\n            hdrTbody.innerHTML = '';\n            hdrTbody.appendChild(hdrfrag);\n        }\n        if (!gObj.enableVirtualization && gObj.frozenRows && idx === 0 && cont.offsetHeight === Number(gObj.height)) {\n            cont.style.height = (cont.offsetHeight - hdrTbody.offsetHeight) + 'px';\n        }\n        if (frzCols && idx === 0) {\n            this.getPanel().firstChild.style.overflowY = 'hidden';\n        }\n        if (!isBlazor() || this.parent.isJsComponent) {\n            args.rows = this.rows.slice(0);\n        }\n        args.isFrozen = this.parent.getFrozenColumns() !== 0 && !args.isFrozen;\n        this.index = idx;\n        getUpdateUsingRaf(function () {\n            _this.parent.notify(events.beforeFragAppend, args);\n            var isVFTable = _this.parent.enableVirtualization && _this.parent.getFrozenColumns() !== 0;\n            if (!_this.parent.enableVirtualization && !isInfiniteScroll) {\n                remove(_this.tbody);\n                _this.tbody = _this.parent.createElement('tbody');\n            }\n            if (frzCols && !isVFTable && !_this.parent.enableInfiniteScrolling) {\n                _this.tbody.appendChild(frag);\n                if (_this.index === 0) {\n                    _this.isLoaded = false;\n                    fCont.querySelector('table').appendChild(_this.tbody);\n                }\n                else {\n                    if (_this.tbody.childElementCount < 1) {\n                        _this.tbody.appendChild(_this.parent.createElement('tr').appendChild(_this.parent.createElement('td')));\n                    }\n                    _this.isLoaded = true;\n                    mCont.querySelector('table').appendChild(_this.tbody);\n                    if (_this.parent.getFrozenColumns() !== 0 && !_this.parent.allowTextWrap) {\n                        _this.parent.notify(events.freezeRender, { case: 'refreshHeight' });\n                    }\n                    fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                    mCont.style.overflowY = _this.parent.height !== 'auto' ? 'scroll' : 'auto';\n                    fCont.style.borderRightWidth = '1px';\n                }\n            }\n            else {\n                if (gObj.rowTemplate) {\n                    updateBlazorTemplate(gObj.element.id + 'rowTemplate', 'RowTemplate', gObj);\n                }\n                if (isVFTable) {\n                    if (!args.renderMovableContent) {\n                        _this.appendContent(fCont.querySelector('tbody'), frag, args);\n                        if (_this.parent.enableColumnVirtualization && args.requestType === 'virtualscroll'\n                            && mCont.scrollLeft > 0) {\n                            _this.parent.setColumnIndexesInView(_this.viewColIndexes);\n                            args.virtualInfo.columnIndexes = _this.viewColIndexes;\n                        }\n                    }\n                    else {\n                        _this.appendContent(mCont.querySelector('tbody'), frag, args);\n                        if (args.virtualInfo && args.virtualInfo.direction !== 'right' && args.virtualInfo.direction !== 'left') {\n                            fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                        }\n                        args.renderMovableContent = false;\n                    }\n                }\n                else {\n                    if (!isNullOrUndefined(_this.parent.infiniteScrollModule) && _this.parent.enableInfiniteScrolling) {\n                        _this.isAddRows = false;\n                        _this.parent.notify(events.removeInfiniteRows, { args: args });\n                        _this.parent.notify(events.appendInfiniteContent, {\n                            tbody: _this.tbody, frag: frag, args: args, rows: _this.rows,\n                            rowElements: _this.rowElements, visibleRows: _this.visibleRows\n                        });\n                        if (frzCols && idx !== 0) {\n                            fCont.style.height = ((mCont.offsetHeight) - getScrollBarWidth()) + 'px';\n                            mCont.style.overflowY = _this.parent.height !== 'auto' ? 'scroll' : 'auto';\n                            fCont.style.borderRightWidth = '1px';\n                        }\n                    }\n                    else {\n                        _this.appendContent(_this.tbody, frag, args);\n                    }\n                }\n            }\n            if (frzCols && idx === 0) {\n                if (isVFTable) {\n                    args.renderMovableContent = true;\n                }\n                _this.refreshContentRows(extend({}, args));\n            }\n            frag = null;\n        }, this.rafCallback(extend({}, args)));\n    };\n    ContentRender.prototype.appendContent = function (tbody, frag, args) {\n        tbody.appendChild(frag);\n        this.getTable().appendChild(tbody);\n    };\n    ContentRender.prototype.ensureFrozenHeaderRender = function (args) {\n        return !((this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) || (this.parent.infiniteScrollSettings.enableCache\n            && this.parent.frozenRows && this.parent.infiniteScrollModule.requestType === 'delete'\n            && this.parent.pageSettings.currentPage !== 1));\n    };\n    ContentRender.prototype.checkInfiniteCache = function (modelData, args) {\n        if (this.parent.infiniteScrollSettings.enableCache && args.requestType === 'infiniteScroll') {\n            var index = args.isFrozen ? 1 : 0;\n            var frozenCols = this.parent.getFrozenColumns();\n            this.isAddRows = !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage]);\n            if (frozenCols && !isNullOrUndefined(this.infiniteCache[this.parent.pageSettings.currentPage])) {\n                this.isAddRows = this.infiniteCache[this.parent.pageSettings.currentPage][index].length !== 0;\n            }\n            if (this.isAddRows) {\n                var data = !frozenCols ? this.infiniteCache[this.parent.pageSettings.currentPage]\n                    : this.infiniteCache[this.parent.pageSettings.currentPage][index];\n                modelData = this.parent.pageSettings.currentPage === 1 ? data.slice(this.parent.frozenRows) : data;\n            }\n            return modelData;\n        }\n        return null;\n    };\n    ContentRender.prototype.setInfiniteVisibleRows = function (args, data) {\n        var frozenCols = this.parent.getFrozenColumns();\n        if (this.parent.enableInfiniteScrolling && !this.parent.infiniteScrollSettings.enableCache) {\n            if (frozenCols) {\n                !args.isFrozen ? this.visibleFrozenRows.push(data) : this.visibleRows.push(data);\n            }\n            else if (!this.parent.infiniteScrollSettings.enableCache) {\n                this.visibleRows.push(data);\n            }\n        }\n    };\n    ContentRender.prototype.getCurrentBlockInfiniteRecords = function (isFreeze) {\n        var data = [];\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            if (!Object.keys(this.infiniteCache).length) {\n                return [];\n            }\n            var frozenCols = this.parent.getFrozenColumns();\n            var rows = this.parent.getRows();\n            var index = parseInt(rows[this.parent.frozenRows].getAttribute('aria-rowindex'), 10);\n            var first = Math.ceil((index + 1) / this.parent.pageSettings.pageSize);\n            index = parseInt(rows[rows.length - 1].getAttribute('aria-rowindex'), 10);\n            var last = Math.ceil(index / this.parent.pageSettings.pageSize);\n            if (frozenCols) {\n                var idx = isFreeze ? 0 : 1;\n                for (var i = first; i <= last; i++) {\n                    data = !data.length ? this.infiniteCache[i][idx]\n                        : data.concat(this.infiniteCache[i][idx]);\n                }\n                if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n                    data = this.infiniteCache[1][idx].slice(0, this.parent.frozenRows).concat(data);\n                }\n            }\n            else {\n                for (var i = first; i <= last; i++) {\n                    data = !data.length ? this.infiniteCache[i] : data.concat(this.infiniteCache[i]);\n                }\n                if (this.parent.frozenRows && this.parent.pageSettings.currentPage > 1) {\n                    data = this.infiniteCache[1].slice(0, this.parent.frozenRows).concat(data);\n                }\n            }\n        }\n        return data;\n    };\n    ContentRender.prototype.getReorderedVFRows = function (args) {\n        return this.parent.contentModule.getReorderedFrozenRows(args);\n    };\n    ContentRender.prototype.virtualFrozenHdrRefresh = function (hdrfrag, modelData, row, args, dataSource, columns) {\n        if (this.parent.frozenRows && this.parent.getFrozenColumns() && this.parent.enableVirtualization\n            && (args.requestType === 'reorder' || args.requestType === 'refresh')) {\n            var tr = void 0;\n            this.currentMovableRows = dataSource;\n            var fhdrData = this.getReorderedVFRows(args);\n            for (var i = 0; i < fhdrData.length; i++) {\n                tr = row.render(fhdrData[i], columns);\n                hdrfrag.appendChild(tr);\n            }\n            if (args.virtualInfo.page === 1) {\n                modelData.splice(0, this.parent.frozenRows);\n            }\n            if (args.renderMovableContent) {\n                this.parent.currentViewData = this.currentMovableRows;\n                this.currentMovableRows = null;\n            }\n        }\n    };\n    ContentRender.prototype.getInfiniteRows = function () {\n        var rows = [];\n        var frozenCols = this.parent.getFrozenColumns();\n        if (this.parent.enableInfiniteScrolling) {\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                var keys = Object.keys(this.infiniteCache);\n                for (var i = 0; i < keys.length; i++) {\n                    rows = !frozenCols ? rows.concat(this.infiniteCache[keys[i]]) : rows.concat(this.infiniteCache[keys[i]][0]);\n                }\n            }\n            else {\n                rows = frozenCols ? this.visibleFrozenRows : this.visibleRows;\n            }\n        }\n        return rows;\n    };\n    ContentRender.prototype.getInfiniteMovableRows = function () {\n        var infiniteCacheRows = this.getCurrentBlockInfiniteRecords();\n        var infiniteRows = this.parent.enableInfiniteScrolling ? infiniteCacheRows.length ? infiniteCacheRows\n            : this.visibleRows : [];\n        return infiniteRows;\n    };\n    /**\n     * Get the content div element of grid\n     * @return {Element}\n     */\n    ContentRender.prototype.getPanel = function () {\n        return this.contentPanel;\n    };\n    /**\n     * Set the content div element of grid\n     * @param  {Element} panel\n     */\n    ContentRender.prototype.setPanel = function (panel) {\n        this.contentPanel = panel;\n    };\n    /**\n     * Get the content table element of grid\n     * @return {Element}\n     */\n    ContentRender.prototype.getTable = function () {\n        return this.contentTable;\n    };\n    /**\n     * Set the content table element of grid\n     * @param  {Element} table\n     */\n    ContentRender.prototype.setTable = function (table) {\n        this.contentTable = table;\n    };\n    /**\n     * Get the Row collection in the Grid.\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n     */\n    ContentRender.prototype.getRows = function () {\n        var infiniteRows = this.getInfiniteRows();\n        return infiniteRows.length ? infiniteRows : this.parent.getFrozenColumns() ? this.freezeRows : this.rows;\n    };\n    /**\n     * Get the Movable Row collection in the Freeze pane Grid.\n     * @returns {Row[] | HTMLCollectionOf<HTMLTableRowElement>}\n     */\n    ContentRender.prototype.getMovableRows = function () {\n        var infiniteRows = this.getInfiniteMovableRows();\n        return infiniteRows.length ? infiniteRows : this.movableRows;\n    };\n    /**\n     * Get the content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.getRowElements = function () {\n        return this.parent.getFrozenColumns() ? this.freezeRowElements : this.rowElements;\n    };\n    /**\n     * Get the Freeze pane movable content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.getMovableRowElements = function () {\n        return this.rowElements;\n    };\n    /**\n     * Get the content table data row elements\n     * @return {Element}\n     */\n    ContentRender.prototype.setRowElements = function (elements) {\n        this.rowElements = elements;\n    };\n    /**\n     * Get the header colgroup element\n     * @returns {Element}\n     */\n    ContentRender.prototype.getColGroup = function () {\n        return this.colgroup;\n    };\n    /**\n     * Set the header colgroup element\n     * @param {Element} colgroup\n     * @returns {Element}\n     */\n    ContentRender.prototype.setColGroup = function (colGroup) {\n        if (!isNullOrUndefined(colGroup)) {\n            colGroup.id = 'content-' + colGroup.id;\n        }\n        return this.colgroup = colGroup;\n    };\n    /**\n     * Function to hide content table column based on visible property\n     * @param  {Column[]} columns?\n     */\n    ContentRender.prototype.setVisible = function (columns) {\n        var gObj = this.parent;\n        if (isBlazor() && gObj.isServerRendered) {\n            this.parent.notify('setvisibility', columns);\n        }\n        var frzCols = gObj.getFrozenColumns();\n        var rows = [];\n        if (frzCols) {\n            var fRows = this.freezeRows;\n            var mRows = this.movableRows;\n            var rowLen = fRows.length;\n            var cellLen = void 0;\n            for (var i = 0, row = void 0; i < rowLen; i++) {\n                cellLen = mRows[i].cells.length;\n                row = fRows[i].clone();\n                for (var j = 0; j < cellLen; j++) {\n                    row.cells.push(mRows[i].cells[j]);\n                }\n                rows.push(row);\n            }\n        }\n        else {\n            rows = this.getRows();\n        }\n        var element;\n        var testRow;\n        rows.some(function (r) { if (r.isDataRow) {\n            testRow = r;\n        } return r.isDataRow; });\n        var tasks = [];\n        var needFullRefresh = true;\n        if (!gObj.groupSettings.columns.length && testRow) {\n            needFullRefresh = false;\n        }\n        var tr = gObj.getDataRows();\n        var args = {};\n        var infiniteData = this.infiniteRowVisibility();\n        var contentrows = infiniteData ? infiniteData\n            : this.rows.filter(function (row) { return !row.isDetailRow; });\n        for (var c = 0, clen = columns.length; c < clen; c++) {\n            var column = columns[c];\n            var idx = this.parent.getNormalizedColumnIndex(column.uid);\n            var colIdx = this.parent.getColumnIndexByUid(column.uid);\n            var displayVal = column.visible === true ? '' : 'none';\n            if (idx !== -1 && testRow && idx < testRow.cells.length) {\n                if (frzCols) {\n                    if (idx < frzCols) {\n                        setStyleAttribute(this.getColGroup().childNodes[idx], { 'display': displayVal });\n                        var infiniteFreezeData = this.infiniteRowVisibility(true);\n                        contentrows = infiniteFreezeData ? infiniteFreezeData : this.freezeRows;\n                        tr = gObj.getDataRows();\n                    }\n                    else {\n                        var mTable = gObj.getContent().querySelector('.e-movablecontent').querySelector('colgroup');\n                        colIdx = idx = idx - frzCols;\n                        setStyleAttribute(mTable.childNodes[idx], { 'display': displayVal });\n                        tr = gObj.getMovableDataRows();\n                        var infiniteMovableData = this.infiniteRowVisibility();\n                        contentrows = infiniteMovableData ? infiniteMovableData : this.movableRows;\n                    }\n                }\n                else {\n                    setStyleAttribute(this.getColGroup().childNodes[idx], { 'display': displayVal });\n                }\n            }\n            if (!needFullRefresh) {\n                this.setDisplayNone(tr, colIdx, displayVal, contentrows);\n            }\n            if (!this.parent.invokedFromMedia && column.hideAtMedia) {\n                this.parent.updateMediaColumns(column);\n            }\n            this.parent.invokedFromMedia = false;\n        }\n        if (needFullRefresh) {\n            this.refreshContentRows({ requestType: 'refresh' });\n        }\n        else {\n            if (!this.parent.getFrozenColumns()) {\n                this.parent.notify(events.partialRefresh, { rows: contentrows, args: args });\n            }\n            else {\n                this.parent.notify(events.partialRefresh, { rows: this.freezeRows, args: { isFrozen: true, rows: this.freezeRows } });\n                this.parent.notify(events.partialRefresh, { rows: this.movableRows, args: { isFrozen: false, rows: this.movableRows } });\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    ContentRender.prototype.setDisplayNone = function (tr, idx, displayVal, rows) {\n        var trs = Object.keys(tr);\n        for (var i = 0; i < trs.length; i++) {\n            var td = tr[trs[i]].querySelectorAll('td.e-rowcell')[idx];\n            if (tr[trs[i]].querySelectorAll('td.e-rowcell').length && td) {\n                setStyleAttribute(tr[trs[i]].querySelectorAll('td.e-rowcell')[idx], { 'display': displayVal });\n                if (tr[trs[i]].querySelectorAll('td.e-rowcell')[idx].classList.contains('e-hide')) {\n                    removeClass([tr[trs[i]].querySelectorAll('td.e-rowcell')[idx]], ['e-hide']);\n                }\n                if (this.parent.isRowDragable()) {\n                    rows[trs[i]].cells[idx + 1].visible = displayVal === '' ? true : false;\n                }\n                else {\n                    rows[trs[i]].cells[idx].visible = displayVal === '' ? true : false;\n                }\n            }\n        }\n        this.parent.notify(events.infiniteShowHide, { visible: displayVal, index: idx, isFreeze: this.isInfiniteFreeze });\n    };\n    ContentRender.prototype.infiniteRowVisibility = function (isFreeze) {\n        var infiniteData;\n        if (this.parent.enableInfiniteScrolling) {\n            this.isInfiniteFreeze = isFreeze;\n            if (this.parent.infiniteScrollSettings.enableCache) {\n                infiniteData = isFreeze ? this.getCurrentBlockInfiniteRecords(true) : this.getCurrentBlockInfiniteRecords();\n            }\n            else {\n                infiniteData = isFreeze ? this.visibleFrozenRows : this.visibleRows;\n            }\n        }\n        return infiniteData;\n    };\n    ContentRender.prototype.colGroupRefresh = function () {\n        if (this.getColGroup()) {\n            var colGroup = void 0;\n            if (this.parent.enableColumnVirtualization && this.parent.getFrozenColumns()\n                && this.parent.contentModule.isXaxis()) {\n                colGroup = this.parent.getMovableVirtualHeader().querySelector('colgroup').cloneNode(true);\n            }\n            else {\n                colGroup = isBlazor() ? this.parent.getHeaderTable().querySelector('colgroup').cloneNode(true) :\n                    this.parent.element.querySelector('.e-gridheader').querySelector('colgroup').cloneNode(true);\n            }\n            this.getTable().replaceChild(colGroup, this.getColGroup());\n            this.setColGroup(colGroup);\n        }\n    };\n    ContentRender.prototype.initializeContentDrop = function () {\n        var gObj = this.parent;\n        var drop = new Droppable(gObj.getContent(), {\n            accept: '.e-dragclone',\n            drop: this.drop\n        });\n    };\n    ContentRender.prototype.canSkip = function (column, row, index) {\n        /**\n         * Skip the toggle visiblity operation when one of the following success\n         * 1. Grid has empty records\n         * 2. column visible property is unchanged\n         * 3. cell`s isVisible property is same as column`s visible property.\n         */\n        return isNullOrUndefined(row) || //(1)\n            isNullOrUndefined(column.visible) || //(2)    \n            row.cells[index].visible === column.visible; //(3)\n    };\n    ContentRender.prototype.getModelGenerator = function () {\n        return this.generator = this.parent.allowGrouping ? new GroupModelGenerator(this.parent) : new RowModelGenerator(this.parent);\n    };\n    ContentRender.prototype.renderEmpty = function (tbody) {\n        if (isBlazor() && !this.parent.isJsComponent && this.parent.frozenRows) {\n            return;\n        }\n        this.getTable().appendChild(tbody);\n        if (this.parent.frozenRows) {\n            this.parent.getHeaderContent().querySelector('tbody').innerHTML = '';\n        }\n    };\n    ContentRender.prototype.setSelection = function (uid, set, clearAll) {\n        if (this.parent.getFrozenColumns()) {\n            var rows = this.getMovableRows().filter(function (row) { return clearAll || uid === row.uid; });\n            for (var i = 0; i < rows.length; i++) {\n                rows[i].isSelected = set;\n            }\n        }\n        var row = this.getRows().filter(function (row) { return clearAll || uid === row.uid; });\n        for (var j = 0; j < row.length; j++) {\n            row[j].isSelected = set;\n            var cells = row[j].cells;\n            for (var k = 0; k < cells.length; k++) {\n                cells[k].isSelected = set;\n            }\n        }\n    };\n    ContentRender.prototype.getRowByIndex = function (index) {\n        index = this.getInfiniteRowIndex(index);\n        return this.parent.getDataRows()[index];\n    };\n    ContentRender.prototype.getInfiniteRowIndex = function (index) {\n        if (this.parent.infiniteScrollSettings.enableCache) {\n            var fRows = this.parent.frozenRows;\n            var idx = fRows > index ? 0 : fRows;\n            var firstRowIndex = parseInt(this.parent.getRows()[idx].getAttribute('aria-rowindex'), 10);\n            index = fRows > index ? index : (index - firstRowIndex) + fRows;\n        }\n        return index;\n    };\n    ContentRender.prototype.getVirtualRowIndex = function (index) {\n        return index;\n    };\n    ContentRender.prototype.getMovableRowByIndex = function (index) {\n        index = this.getInfiniteRowIndex(index);\n        return this.parent.getMovableDataRows()[index];\n    };\n    ContentRender.prototype.enableAfterRender = function (e) {\n        if (e.module === 'group' && e.enable) {\n            this.generator = this.getModelGenerator();\n        }\n    };\n    ContentRender.prototype.setRowObjects = function (rows) {\n        this.rows = rows;\n    };\n    return ContentRender;\n}());\nexport { ContentRender };\n"]},"metadata":{},"sourceType":"module"}