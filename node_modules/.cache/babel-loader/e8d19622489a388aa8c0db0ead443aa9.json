{"ast":null,"code":"var _jsxFileName = \"/home/nikhil/Desktop/data_grid_editor-master/src/DataGetter.js\";\nimport React, { Component } from 'react';\nimport { GridComponent, ColumnDirective, ColumnsDirective, Page, Inject, Filter, Group, GroupSettingsModel, Edit, EditSettings, EditSettingsModel, Toolbar, ToolbarItems } from '@syncfusion/ej2-react-grids'; //import data from './db.json';\n//import {DataManager, ODataAdaptor, Query} from '@syncfusion/ej2-data';\n\nimport { DialogFormTemplate } from './DialogFormTemplate';\nimport './App.css';\nimport axios from 'axios';\nimport { IOrderModel } from './orderModel';\n\nclass DataGetter extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.dialogTemplate = props => {\n      return /*#__PURE__*/React.createElement(DialogFormTemplate, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }));\n    };\n\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    let getData = axios.get('http://localhost:5000/repdata').then(response => {\n      console.log(\"response===\", response.data);\n      this.setState({ ...this.state,\n        data: response.data\n      });\n      return response.data;\n    }).catch(err => {\n      throw err;\n    });\n  }\n\n  render() {\n    var editOptions = {\n      allowEditing: true,\n      allowAdding: true,\n      allowDeleting: true,\n      mode: 'Dialog',\n      template: this.dialogTemplate\n    };\n    var toolbarOptions = ['Add', 'Edit', 'Delete']; // console.log('This data ====', getData);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '10%',\n        marginTop: '5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GridComponent, {\n      dataSource: this.state.data,\n      allowPaging: true,\n      pageSettings: {\n        pageSize: 5\n      },\n      allowFiltering: true,\n      allowGrouping: true,\n      editSettings: editOptions,\n      toolbar: toolbarOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ColumnsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"id\",\n      headerText: \"Id\",\n      textAlign: \"Left\",\n      width: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"name\",\n      headerText: \"Rep Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"email\",\n      headerText: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"representativeRegion\",\n      headerText: \"Region\",\n      editType: \"dropdownedit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"representativeHq\",\n      headerText: \"HQ\",\n      editType: \"dropdownedit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"representativeArea\",\n      headerText: \"Area operating\",\n      editType: \"dropdownedit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"customerName\",\n      headerText: \"Customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"customerPincode\",\n      headerText: \"Customer PIN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(ColumnDirective, {\n      field: \"customerPhone\",\n      headerText: \"Customer CONTACT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Page, Filter, Group, Toolbar, Edit],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default DataGetter;","map":{"version":3,"sources":["/home/nikhil/Desktop/data_grid_editor-master/src/DataGetter.js"],"names":["React","Component","GridComponent","ColumnDirective","ColumnsDirective","Page","Inject","Filter","Group","GroupSettingsModel","Edit","EditSettings","EditSettingsModel","Toolbar","ToolbarItems","DialogFormTemplate","axios","IOrderModel","DataGetter","constructor","props","dialogTemplate","state","data","componentDidMount","getData","get","then","response","console","log","setState","catch","err","render","editOptions","allowEditing","allowAdding","allowDeleting","mode","template","toolbarOptions","margin","marginTop","pageSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  GridComponent,\n  ColumnDirective,\n  ColumnsDirective,\n  Page,\n  Inject,\n  Filter,\n  Group, GroupSettingsModel, Edit, EditSettings, EditSettingsModel,\n  Toolbar, ToolbarItems\n} from '@syncfusion/ej2-react-grids';\n//import data from './db.json';\n//import {DataManager, ODataAdaptor, Query} from '@syncfusion/ej2-data';\nimport { DialogFormTemplate } from './DialogFormTemplate';\nimport './App.css';\nimport axios from 'axios';\nimport { IOrderModel } from './orderModel';\n\nclass DataGetter extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { data: [] };\n  }\n\n  componentDidMount() {\n    let getData = axios.get('http://localhost:5000/repdata')\n      .then((response) => { console.log(\"response===\", response.data); this.setState({ ...this.state, data: response.data }); return response.data; })\n      .catch(err => { throw err });\n\n  }\n\n  dialogTemplate = (props) => {\n    return (<DialogFormTemplate {...props} />);\n  }\n\n  render() {\n    var editOptions = { allowEditing: true, allowAdding: true, allowDeleting: true, mode: 'Dialog', template: this.dialogTemplate };\n    var toolbarOptions = ['Add', 'Edit', 'Delete'];\n\n    // console.log('This data ====', getData);\n\n    return (\n\n      <div style={{ margin: '10%', marginTop: '5%' }}>\n        <GridComponent dataSource={this.state.data}\n          allowPaging={true}\n          pageSettings={{ pageSize: 5 }}\n          allowFiltering={true}\n          allowGrouping={true}\n          editSettings={editOptions}\n          toolbar={toolbarOptions}\n        >\n          <ColumnsDirective>\n            <ColumnDirective field='id' headerText='Id' textAlign='Left' width='50' />\n            <ColumnDirective field='name' headerText='Rep Name' />\n            <ColumnDirective field='email' headerText='Email' />\n            <ColumnDirective field='representativeRegion' headerText='Region' editType='dropdownedit' />\n            <ColumnDirective field='representativeHq' headerText='HQ' editType='dropdownedit' />\n            <ColumnDirective field='representativeArea' headerText='Area operating' editType='dropdownedit' />\n            <ColumnDirective field='customerName' headerText='Customer' />\n            <ColumnDirective field='customerPincode' headerText='Customer PIN' />\n            <ColumnDirective field='customerPhone' headerText='Customer CONTACT' />\n          </ColumnsDirective>\n          <Inject services={[Page, Filter, Group, Toolbar, Edit]} />\n        </GridComponent>\n      </div>\n    );\n  }\n}\n\nexport default DataGetter;"]},"metadata":{},"sourceType":"module"}